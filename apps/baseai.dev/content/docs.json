[{"slug":"faqs","section":"add","content":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsxDEV: _jsxDEV} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nconst sections = [{\n  title: \"What is Add?\",\n  id: \"what-is-add\",\n  ...undefined\n}, {\n  title: \"How to use Add?\",\n  id: \"how-to-use-add\",\n  ...undefined\n}, {\n  title: \"Do pipe tools also get cloned with the pipe?\",\n  id: \"do-pipe-tools-also-get-cloned-with-the-pipe\",\n  ...undefined\n}, {\n  title: \"Can I add a private AI agent pipe in my project?\",\n  id: \"can-i-add-a-private-ai-agent-pipe-in-my-project\",\n  ...undefined\n}];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    hr: \"hr\",\n    p: \"p\",\n    pre: \"pre\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(_components.h1, {\n      children: \"FAQ\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 2,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Let's take a look at some frequently asked questions about Add.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 4,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 6,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"what-is-add\",\n      children: \"What is Add?\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 8,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"BaseAI \", _jsxDEV(_components.code, {\n        children: \"add\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 10,\n        columnNumber: 8\n      }, this), \" command lets you to clone any public (or your private) AI pipes from Langbase in your project.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 10,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 12,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"how-to-use-add\",\n      children: \"How to use Add?\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 14,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"You can run the following command in your terminal to add a pipe in your project:\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 16,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"bash\",\n      code: \"npx baseai add <pipe-link>\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-bash\",\n        children: \"<span><span style=\\\"color: #FAD000\\\">npx</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">baseai</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">add</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">&lt;</span><span style=\\\"color: #A5FF90\\\">pipe-lin</span><span style=\\\"color: #9EFFFF\\\">k</span><span style=\\\"color: #FF9D00\\\">&gt;</span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 18,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 18,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Replace \", _jsxDEV(_components.code, {\n        children: \"<pipe-link>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), \" with agent pipe link. You can learn more about it \", _jsxDEV(_components.a, {\n        href: \"/docs/add/quickstart\",\n        children: \"here\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 22,\n        columnNumber: 73\n      }, this), \".\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 22,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 24,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"do-pipe-tools-also-get-cloned-with-the-pipe\",\n      children: \"Do pipe tools also get cloned with the pipe?\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 26,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Yes, when you clone a pipe using \", _jsxDEV(_components.code, {\n        children: \"add\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 28,\n        columnNumber: 34\n      }, this), \" command, all the pipe tools definitions used in the pipe will also get cloned. The tools will be available in the \", _jsxDEV(_components.code, {\n        children: \"baseai/tools\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 28,\n        columnNumber: 154\n      }, this), \" directory of your project.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 28,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 30,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"can-i-add-a-private-ai-agent-pipe-in-my-project\",\n      children: \"Can I add a private AI agent pipe in my project?\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 32,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Yes, you can add your private AI agent pipe from Langbase. To do this, you need to first authenticate yourself by running the following command:\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 34,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"bash\",\n      code: \"npx baseai auth\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-bash\",\n        children: \"<span><span style=\\\"color: #FAD000\\\">npx</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">baseai</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">auth</span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 36,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 36,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Learn more about authentication \", _jsxDEV(_components.a, {\n        href: \"/docs/deployment/authentication\",\n        children: \"here\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 40,\n        columnNumber: 33\n      }, this), \".\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 40,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 42,\n      columnNumber: 1\n    }, this)]\n  }, undefined, true, {\n    fileName: \"<source.js>\",\n    lineNumber: 1,\n    columnNumber: 1\n  }, this);\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsxDEV(MDXLayout, {\n    ...props,\n    children: _jsxDEV(_createMdxContent, {\n      ...props\n    }, undefined, false, {\n      fileName: \"<source.js>\"\n    }, this)\n  }, undefined, false, {\n    fileName: \"<source.js>\"\n  }, this) : _createMdxContent(props);\n}\nreturn {\n  sections,\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"frontmatter":{"url":"https://baseai.dev/docs/add/faqs","slug":"faqs","title":"FAQ - Add","imageUrl":"https://baseai.dev/api/og?title=FAQ&section=Add","tags":["baseai","add","clone","AI"],"section":"Add","description":"Let's take a look at some frequently asked questions about Add.","modifiedDate":"2024-09-24T00:00:00.000Z","publishedDate":"2024-09-24T00:00:00.000Z"}},{"slug":"quickstart","section":"add","content":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsxDEV: _jsxDEV} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nconst sections = [{\n  title: \"Step #0: Initialize BaseAI\",\n  id: \"step-0-initialize-base-ai\",\n  ...undefined\n}, {\n  title: \"Step #1: Add an agent Pipe\",\n  id: \"step-1-add-an-agent-pipe\",\n  ...undefined\n}, {\n  title: \"Step #2: View the added Pipe\",\n  id: \"step-2-view-the-added-pipe\",\n  ...undefined\n}, {\n  title: \"Step #3: Integrate the pipe with your app\",\n  id: \"step-3-integrate-the-pipe-with-your-app\",\n  ...undefined\n}, {\n  title: \"Step #4: Run the code\",\n  id: \"step-4-run-the-code\",\n  ...undefined\n}, {\n  title: \"Next Steps\",\n  id: \"next-steps\",\n  ...undefined\n}];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    h3: \"h3\",\n    hr: \"hr\",\n    li: \"li\",\n    p: \"p\",\n    pre: \"pre\",\n    strong: \"strong\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  }, {CodeGroup} = _components;\n  if (!CodeGroup) _missingMdxReference(\"CodeGroup\", true, \"50:1-105:13\");\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(_components.h1, {\n      children: \"Quickstart: Add an agent Pipe locally\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 2,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h3, {\n      children: \"Let's learn how to add an AI agent Pipe locally in your project.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 4,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 6,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"In this quickstart guide, you will locally:\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 8,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.ul, {\n      children: [\"\\n\", _jsxDEV(_components.li, {\n        children: [_jsxDEV(_components.strong, {\n          children: \"Add\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 10,\n          columnNumber: 5\n        }, this), \" an open AI agent Pipe from Langbase to your project.\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 10,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: [_jsxDEV(_components.strong, {\n          children: \"Use\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 11,\n          columnNumber: 5\n        }, this), \" an LLM model like GPT, Llama, Mistral, etc.\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 11,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: [_jsxDEV(_components.strong, {\n          children: \"Run\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 12,\n          columnNumber: 5\n        }, this), \" the AI pipe with configuration and meta settings.\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 12,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: [_jsxDEV(_components.strong, {\n          children: \"Build\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 13,\n          columnNumber: 5\n        }, this), \" your pipe with configuration and meta settings.\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 13,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: [_jsxDEV(_components.strong, {\n          children: \"Deploy\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 14,\n          columnNumber: 5\n        }, this), \" your AI features to Langbase API (global, highly available, and scalable) for production.\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 14,\n        columnNumber: 1\n      }, this), \"\\n\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 10,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 16,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h3, {\n      children: \"Let's get started\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 18,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Let's use the BaseAI to add an AI agent Pipe from Langbase locally in your project. The pipe will generate title ideas for your blog post.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 20,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 22,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"step-0-initialize-base-ai\",\n      children: \"Step #0: Initialize BaseAI\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 24,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Please initialize BaseAI in your project using the following command:\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 26,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"bash\",\n      code: \"npx baseai init\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-bash\",\n        children: \"<span><span style=\\\"color: #FAD000\\\">npx</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">baseai</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">init</span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 28,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 28,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"step-1-add-an-agent-pipe\",\n      children: \"Step #1: Add an agent Pipe\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 32,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"We will add the \", _jsxDEV(_components.a, {\n        href: \"https://langbase.com/langbase/ai-title-generator\",\n        children: \"AI title generator\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), \" pipe locally. Navigate to your project directory and run the following command in the terminal:\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 34,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"bash\",\n      code: \"npx baseai add https://langbase.com/langbase/ai-title-generator\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-bash\",\n        children: \"<span><span style=\\\"color: #FAD000\\\">npx</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">baseai</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">add</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">https://langbase.com/langbase/ai-title-generator</span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 36,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 36,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Alternatively, you can add the pipe using its login and pipe name:\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 40,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"bash\",\n      code: \"npx baseai add langbase/ai-title-generator\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-bash\",\n        children: \"<span><span style=\\\"color: #FAD000\\\">npx</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">baseai</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">add</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">langbase/ai-title-generator</span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 42,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 42,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"step-2-view-the-added-pipe\",\n      children: \"Step #2: View the added Pipe\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 46,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"The pipe is successfully added to the \", _jsxDEV(_components.code, {\n        children: \"/baseai/pipes/ai-title-generator.ts\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 48,\n        columnNumber: 39\n      }, this), \". Open the file, it will look like this:\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 48,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(CodeGroup, {\n      exampleTitle: \"BaseAI Pipe & Tool\",\n      title: \"AI title generator pipe\",\n      children: _jsxDEV(_components.pre, {\n        language: \"ts\",\n        code: \"import { PipeI } from '@baseai/core';\\n\\nconst aiTitleGeneratorPipe = (): PipeI => ({\\n\\tapiKey: process.env.LANGBASE_USER_ORG_API_KEY!,\\n\\tname: 'ai-title-generator',\\n\\tdescription: 'A Pipe (AI Assistant) to generate a list of titles on any topic.',\\n\\tstatus: 'public',\\n\\tmodel: 'openai:gpt-4o-mini',\\n\\tstream: true,\\n\\tjson: false,\\n\\tstore: true,\\n\\tmoderate: true,\\n\\ttop_p: 0.85,\\n\\tmax_tokens: 100,\\n\\ttemperature: 0.5,\\n\\tpresence_penalty: 0.2,\\n\\tfrequency_penalty: 0.3,\\n\\tstop: [],\\n\\ttool_choice: 'auto',\\n\\tparallel_tool_calls: true,\\n\\tmessages: [\\n\\t\\t{\\n\\t\\t\\trole: 'user',\\n\\t\\t\\tcontent:\\n\\t\\t\\t\\t'Generate 5 blog title ideas for an article about {{Topic}}'\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\trole: 'system',\\n\\t\\t\\tcontent:\\n\\t\\t\\t\\t\\\"You're a helpful AI assistant. Give me title ideas for an article about {{Topic}}. Less wordy.\\\"\\n\\t\\t},\\n\\t\\t{ role: 'system', content: '', name: 'json' },\\n\\t\\t{\\n\\t\\t\\trole: 'system',\\n\\t\\t\\tcontent: 'Do not give titles around web development',\\n\\t\\t\\tname: 'safety'\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\trole: 'system',\\n\\t\\t\\tcontent: 'Welcome to Langbase. Prompt away!',\\n\\t\\t\\tname: 'opening'\\n\\t\\t},\\n\\t\\t{ role: 'system', content: '', name: 'rag' }\\n\\t],\\n\\tvariables: [{ name: 'Topic', value: 'Large Language Models' }],\\n\\ttools: [],\\n\\tmemory: []\\n});\\n\\nexport default aiTitleGeneratorPipe;\\n\",\n        children: _jsxDEV(_components.code, {\n          className: \"language-ts\",\n          children: \"<span><span style=\\\"color: #FF9D00\\\">import</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span><span style=\\\"color: #9EFFFF\\\"> PipeI </span><span style=\\\"color: #E1EFFF\\\">}</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00; font-style: italic\\\">from</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">@baseai/core</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">const</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">aiTitleGeneratorPipe</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FFEE80\\\">()</span><span style=\\\"color: #FF9D00\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #80FFBB\\\">PipeI</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">=&gt;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">({</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tapiKey</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> process</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FFEE80\\\">env</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #9EFFFF\\\">LANGBASE_USER_ORG_API_KEY</span><span style=\\\"color: #FF9D00\\\">!</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tname</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">ai-title-generator</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tdescription</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">A Pipe (AI Assistant) to generate a list of titles on any topic.</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tstatus</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">public</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tmodel</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">openai:gpt-4o-mini</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tstream</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">true</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tjson</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">false</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tstore</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">true</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tmoderate</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">true</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\ttop_p</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">0</span><span style=\\\"color: #9EFFFF\\\">.</span><span style=\\\"color: #FF628C\\\">85</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tmax_tokens</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">100</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\ttemperature</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">0</span><span style=\\\"color: #9EFFFF\\\">.</span><span style=\\\"color: #FF628C\\\">5</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tpresence_penalty</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">0</span><span style=\\\"color: #9EFFFF\\\">.</span><span style=\\\"color: #FF628C\\\">2</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tfrequency_penalty</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">0</span><span style=\\\"color: #9EFFFF\\\">.</span><span style=\\\"color: #FF628C\\\">3</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tstop</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\ttool_choice</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">auto</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tparallel_tool_calls</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">true</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tmessages</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t</span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\trole</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">user</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\tcontent</span><span style=\\\"color: #E1EFFF\\\">:</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\t</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">Generate 5 blog title ideas for an article about {{Topic}}</span><span style=\\\"color: #92FC79\\\">&#39;</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t</span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t</span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\trole</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">system</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\tcontent</span><span style=\\\"color: #E1EFFF\\\">:</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\t</span><span style=\\\"color: #92FC79\\\">&quot;</span><span style=\\\"color: #A5FF90\\\">You&#39;re a helpful AI assistant. Give me title ideas for an article about {{Topic}}. Less wordy.</span><span style=\\\"color: #92FC79\\\">&quot;</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t</span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t</span><span style=\\\"color: #E1EFFF\\\">{</span><span style=\\\"color: #9EFFFF\\\"> role</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">system</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> content</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> name</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">json</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t</span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\trole</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">system</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\tcontent</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">Do not give titles around web development</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\tname</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">safety</span><span style=\\\"color: #92FC79\\\">&#39;</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t</span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t</span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\trole</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">system</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\tcontent</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">Welcome to Langbase. Prompt away!</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\tname</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">opening</span><span style=\\\"color: #92FC79\\\">&#39;</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t</span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t</span><span style=\\\"color: #E1EFFF\\\">{</span><span style=\\\"color: #9EFFFF\\\"> role</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">system</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> content</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> name</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">rag</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">}</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #E1EFFF\\\">],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tvariables</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[{</span><span style=\\\"color: #9EFFFF\\\"> name</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">Topic</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> value</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">Large Language Models</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">}],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\ttools</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tmemory</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[]</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">});</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">export</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">default</span><span style=\\\"color: #9EFFFF\\\"> aiTitleGeneratorPipe</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 52,\n          columnNumber: 1\n        }, this),\n        ...{\n          title: './baseai/pipes/ai-title-generator.ts'\n        }\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 52,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 50,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Here in this file, you can modify the pipe configuration as needed. You can change the model, messages, variables, and other configurations.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 107,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"step-3-integrate-the-pipe-with-your-app\",\n      children: \"Step #3: Integrate the pipe with your app\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 109,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Create a \", _jsxDEV(_components.code, {\n        children: \"index.ts\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 111,\n        columnNumber: 10\n      }, this), \" file in your project and import the pipe you created in the previous step. We will use the Pipe primitive from \", _jsxDEV(_components.code, {\n        children: \"@baseai/core\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 111,\n        columnNumber: 132\n      }, this), \" to run the pipe.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 111,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"bash\",\n      code: \"# Create a new file index.ts\\ntouch index.ts\\n\\n# Install the required packages\\nnpm install @baseai/core dotenv\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-bash\",\n        children: \"<span><span style=\\\"color: #B362FF; font-style: italic\\\"># Create a new file index.ts</span></span>\\n<span><span style=\\\"color: #FAD000\\\">touch</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">index.ts</span></span>\\n<span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># Install the required packages</span></span>\\n<span><span style=\\\"color: #FAD000\\\">npm</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">install</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">@baseai/core</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">dotenv</span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 113,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 113,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Add the following code to \", _jsxDEV(_components.code, {\n        children: \"index.ts\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 121,\n        columnNumber: 27\n      }, this), \" file:\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 121,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(CodeGroup, {\n      exampleTitle: \"BaseAI Pipe & Tool\",\n      title: \"Run AI agent Pipe\",\n      children: [_jsxDEV(_components.pre, {\n        language: \"ts\",\n        code: \"import 'dotenv/config';\\nimport {Pipe, streamText, getRunner} from '@baseai/core';\\nimport aiTitleGeneratorPipe from './baseai/pipes/ai-title-generator';\\n\\nconst pipe = new Pipe(aiTitleGeneratorPipe());\\n\\nconst userMsg = `Generate 5 blog title ideas for an article about Large Language Models`;\\n\\nasync function main() {\\n\\tconst {stream} = await streamText({\\n\\t\\tpipe,\\n\\t\\tmessages: [{role: 'user', content: userMsg}],\\n\\t});\\n\\n\\tconst runner = getRunner(stream);\\n\\n\\t// Method 1: Using event listeners\\n\\trunner.on('connect', () => {\\n\\t\\tconsole.log('Stream started.\\\\n');\\n\\t});\\n\\n\\trunner.on('content', content => {\\n\\t\\tprocess.stdout.write(content);\\n\\t});\\n\\n\\trunner.on('end', () => {\\n\\t\\tconsole.log('\\\\nStream ended.');\\n\\t});\\n\\n\\trunner.on('error', error => {\\n\\t\\tconsole.error('Error:', error);\\n\\t});\\n}\\n\\nmain();\\n\",\n        children: _jsxDEV(_components.code, {\n          className: \"language-ts\",\n          children: \"<span><span style=\\\"color: #FF9D00\\\">import</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">dotenv/config</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span><span style=\\\"color: #FF9D00\\\">import</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span><span style=\\\"color: #9EFFFF\\\">Pipe</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> streamText</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> getRunner</span><span style=\\\"color: #E1EFFF\\\">}</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00; font-style: italic\\\">from</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">@baseai/core</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span><span style=\\\"color: #FF9D00\\\">import</span><span style=\\\"color: #9EFFFF\\\"> aiTitleGeneratorPipe </span><span style=\\\"color: #FF9D00; font-style: italic\\\">from</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">./baseai/pipes/ai-title-generator</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">const</span><span style=\\\"color: #9EFFFF\\\"> pipe </span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">new</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">Pipe</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #FAD000\\\">aiTitleGeneratorPipe</span><span style=\\\"color: #E1EFFF\\\">());</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">const</span><span style=\\\"color: #9EFFFF\\\"> userMsg </span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #3AD900\\\">`Generate 5 blog title ideas for an article about Large Language Models`</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00; font-style: italic\\\">async</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">function</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">main</span><span style=\\\"color: #E1EFFF\\\">()</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #FF9D00\\\">const</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span><span style=\\\"color: #9EFFFF\\\">stream</span><span style=\\\"color: #E1EFFF\\\">}</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">await</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">streamText</span><span style=\\\"color: #E1EFFF\\\">({</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tpipe</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tmessages</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[{</span><span style=\\\"color: #9EFFFF\\\">role</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">user</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> content</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> userMsg</span><span style=\\\"color: #E1EFFF\\\">}],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #E1EFFF\\\">});</span></span>\\n<span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #FF9D00\\\">const</span><span style=\\\"color: #9EFFFF\\\"> runner </span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">getRunner</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #9EFFFF\\\">stream</span><span style=\\\"color: #E1EFFF\\\">);</span></span>\\n<span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">\\t</span><span style=\\\"color: #B362FF; font-style: italic\\\">// Method 1: Using event listeners</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\trunner</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FAD000\\\">on</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">connect</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FFEE80\\\">()</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">=&gt;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tconsole</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FAD000\\\">log</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">Stream started.</span><span style=\\\"color: #FF628C\\\">\\\\n</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">);</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #E1EFFF\\\">});</span></span>\\n<span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\trunner</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FAD000\\\">on</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">content</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> content </span><span style=\\\"color: #FAD000\\\">=&gt;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tprocess</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FFEE80\\\">stdout</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FAD000\\\">write</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #9EFFFF\\\">content</span><span style=\\\"color: #E1EFFF\\\">);</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #E1EFFF\\\">});</span></span>\\n<span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\trunner</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FAD000\\\">on</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">end</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FFEE80\\\">()</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">=&gt;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tconsole</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FAD000\\\">log</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #FF628C\\\">\\\\n</span><span style=\\\"color: #A5FF90\\\">Stream ended.</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">);</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #E1EFFF\\\">});</span></span>\\n<span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\trunner</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FAD000\\\">on</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">error</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> error </span><span style=\\\"color: #FAD000\\\">=&gt;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tconsole</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FAD000\\\">error</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">Error:</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> error</span><span style=\\\"color: #E1EFFF\\\">);</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #E1EFFF\\\">});</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">}</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FAD000\\\">main</span><span style=\\\"color: #E1EFFF\\\">();</span></span>\\n<span></span>\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 125,\n          columnNumber: 1\n        }, this),\n        ...{\n          title: 'index.ts'\n        }\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 125,\n        columnNumber: 1\n      }, this), _jsxDEV(_components.pre, {\n        language: \"ts\",\n        code: \"import { PipeI } from '@baseai/core';\\n\\nconst aiTitleGeneratorPipe = (): PipeI => ({\\n\\tapiKey: process.env.LANGBASE_USER_ORG_API_KEY!,\\n\\tname: 'ai-title-generator',\\n\\tdescription: 'A Pipe (AI Assistant) to generate a list of titles on any topic.',\\n\\tstatus: 'public',\\n\\tmodel: 'openai:gpt-4o-mini',\\n\\tstream: true,\\n\\tjson: false,\\n\\tstore: true,\\n\\tmoderate: true,\\n\\ttop_p: 0.85,\\n\\tmax_tokens: 100,\\n\\ttemperature: 0.5,\\n\\tpresence_penalty: 0.2,\\n\\tfrequency_penalty: 0.3,\\n\\tstop: [],\\n\\ttool_choice: 'auto',\\n\\tparallel_tool_calls: true,\\n\\tmessages: [\\n\\t\\t{\\n\\t\\t\\trole: 'user',\\n\\t\\t\\tcontent:\\n\\t\\t\\t\\t'Generate 5 blog title ideas for an article about {{Topic}}'\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\trole: 'system',\\n\\t\\t\\tcontent:\\n\\t\\t\\t\\t\\\"You're a helpful AI assistant. Give me title ideas for an article about {{Topic}}. Less wordy.\\\"\\n\\t\\t},\\n\\t\\t{ role: 'system', content: '', name: 'json' },\\n\\t\\t{\\n\\t\\t\\trole: 'system',\\n\\t\\t\\tcontent: 'Do not give titles around web development',\\n\\t\\t\\tname: 'safety'\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\trole: 'system',\\n\\t\\t\\tcontent: 'Welcome to Langbase. Prompt away!',\\n\\t\\t\\tname: 'opening'\\n\\t\\t},\\n\\t\\t{ role: 'system', content: '', name: 'rag' }\\n\\t],\\n\\tvariables: [{ name: 'Topic', value: 'Large Language Models' }],\\n\\ttools: [],\\n\\tmemory: []\\n});\\n\\nexport default aiTitleGeneratorPipe;\\n\",\n        children: _jsxDEV(_components.code, {\n          className: \"language-ts\",\n          children: \"<span><span style=\\\"color: #FF9D00\\\">import</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span><span style=\\\"color: #9EFFFF\\\"> PipeI </span><span style=\\\"color: #E1EFFF\\\">}</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00; font-style: italic\\\">from</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">@baseai/core</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">const</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">aiTitleGeneratorPipe</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FFEE80\\\">()</span><span style=\\\"color: #FF9D00\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #80FFBB\\\">PipeI</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">=&gt;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">({</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tapiKey</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> process</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FFEE80\\\">env</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #9EFFFF\\\">LANGBASE_USER_ORG_API_KEY</span><span style=\\\"color: #FF9D00\\\">!</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tname</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">ai-title-generator</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tdescription</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">A Pipe (AI Assistant) to generate a list of titles on any topic.</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tstatus</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">public</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tmodel</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">openai:gpt-4o-mini</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tstream</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">true</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tjson</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">false</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tstore</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">true</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tmoderate</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">true</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\ttop_p</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">0</span><span style=\\\"color: #9EFFFF\\\">.</span><span style=\\\"color: #FF628C\\\">85</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tmax_tokens</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">100</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\ttemperature</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">0</span><span style=\\\"color: #9EFFFF\\\">.</span><span style=\\\"color: #FF628C\\\">5</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tpresence_penalty</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">0</span><span style=\\\"color: #9EFFFF\\\">.</span><span style=\\\"color: #FF628C\\\">2</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tfrequency_penalty</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">0</span><span style=\\\"color: #9EFFFF\\\">.</span><span style=\\\"color: #FF628C\\\">3</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tstop</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\ttool_choice</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">auto</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tparallel_tool_calls</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">true</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tmessages</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t</span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\trole</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">user</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\tcontent</span><span style=\\\"color: #E1EFFF\\\">:</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\t</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">Generate 5 blog title ideas for an article about {{Topic}}</span><span style=\\\"color: #92FC79\\\">&#39;</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t</span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t</span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\trole</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">system</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\tcontent</span><span style=\\\"color: #E1EFFF\\\">:</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\t</span><span style=\\\"color: #92FC79\\\">&quot;</span><span style=\\\"color: #A5FF90\\\">You&#39;re a helpful AI assistant. Give me title ideas for an article about {{Topic}}. Less wordy.</span><span style=\\\"color: #92FC79\\\">&quot;</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t</span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t</span><span style=\\\"color: #E1EFFF\\\">{</span><span style=\\\"color: #9EFFFF\\\"> role</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">system</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> content</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> name</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">json</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t</span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\trole</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">system</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\tcontent</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">Do not give titles around web development</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\tname</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">safety</span><span style=\\\"color: #92FC79\\\">&#39;</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t</span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t</span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\trole</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">system</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\tcontent</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">Welcome to Langbase. Prompt away!</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\tname</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">opening</span><span style=\\\"color: #92FC79\\\">&#39;</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t</span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t</span><span style=\\\"color: #E1EFFF\\\">{</span><span style=\\\"color: #9EFFFF\\\"> role</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">system</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> content</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> name</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">rag</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">}</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #E1EFFF\\\">],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tvariables</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[{</span><span style=\\\"color: #9EFFFF\\\"> name</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">Topic</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> value</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">Large Language Models</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">}],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\ttools</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tmemory</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[]</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">});</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">export</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">default</span><span style=\\\"color: #9EFFFF\\\"> aiTitleGeneratorPipe</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 163,\n          columnNumber: 1\n        }, this),\n        ...{\n          title: './baseai/pipes/ai-title-generator.ts'\n        }\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 163,\n        columnNumber: 1\n      }, this)]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 123,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"We have added a demo user message to generate 5 blog title ideas for an article about LLMs. You can change this user message as per your requirements.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 218,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"txt\",\n      code: \"Generate 5 blog title ideas for an article about Large Language Models\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-txt\",\n        children: \"<span><span style=\\\"color: undefined\\\">Generate 5 blog title ideas for an article about Large Language Models</span></span>\\n<span><span style=\\\"color: undefined\\\"></span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 220,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 220,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Since we are using an OpenAI model, your OpenAI key is required. Please create an \", _jsxDEV(_components.code, {\n        children: \".env\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 224,\n        columnNumber: 83\n      }, this), \" file in the root directory using the following command:\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 224,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"bash\",\n      code: \"touch .env\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-bash\",\n        children: \"<span><span style=\\\"color: #FAD000\\\">touch</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">.env</span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 226,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 226,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Once you have created the \", _jsxDEV(_components.code, {\n        children: \".env\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 230,\n        columnNumber: 27\n      }, this), \" file, add your OpenAI key to it.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 230,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"txt\",\n      code: \"OPENAI_API_KEY=\\\"your-open-ai-key\\\" # Add your OpenAI API key in .env file\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-txt\",\n        children: \"<span><span style=\\\"color: undefined\\\">OPENAI_API_KEY=&quot;your-open-ai-key&quot; # Add your OpenAI API key in .env file</span></span>\\n<span><span style=\\\"color: undefined\\\"></span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 232,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 232,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"step-4-run-the-code\",\n      children: \"Step #4: Run the code\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 236,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Run the \", _jsxDEV(_components.code, {\n        children: \"index.ts\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), \" file using the following command:\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 238,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"bash\",\n      code: \"npx tsx index.ts\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-bash\",\n        children: \"<span><span style=\\\"color: #FAD000\\\">npx</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">tsx</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">index.ts</span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 240,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 240,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"It will prompt the LLM model to get answers to your title generation query.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 244,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"txt\",\n      code: \"Here are five blog title ideas for an article about Large Language Models (LLMs):\\n\\n1. \\\"Unlocking the Power of Large Language Models: How They’re Shaping the Future of AI\\\"\\n2. \\\"The Rise of Large Language Models: Transforming Communication and Knowledge Processing\\\"\\n3. \\\"Exploring the Potential of LLMs: From GPT to BERT and Beyond\\\"\\n4. \\\"Large Language Models Explained: What They Are and Why They Matter in AI\\\"\\n5. \\\"Demystifying LLMs: How These AI Models Are Revolutionizing Industries\\\"\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-txt\",\n        children: \"<span><span style=\\\"color: undefined\\\">Here are five blog title ideas for an article about Large Language Models (LLMs):</span></span>\\n<span><span style=\\\"color: undefined\\\"></span></span>\\n<span><span style=\\\"color: undefined\\\">1. &quot;Unlocking the Power of Large Language Models: How They’re Shaping the Future of AI&quot;</span></span>\\n<span><span style=\\\"color: undefined\\\">2. &quot;The Rise of Large Language Models: Transforming Communication and Knowledge Processing&quot;</span></span>\\n<span><span style=\\\"color: undefined\\\">3. &quot;Exploring the Potential of LLMs: From GPT to BERT and Beyond&quot;</span></span>\\n<span><span style=\\\"color: undefined\\\">4. &quot;Large Language Models Explained: What They Are and Why They Matter in AI&quot;</span></span>\\n<span><span style=\\\"color: undefined\\\">5. &quot;Demystifying LLMs: How These AI Models Are Revolutionizing Industries&quot;</span></span>\\n<span><span style=\\\"color: undefined\\\"></span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 246,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 246,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"This all happens locally on your machine and the response should be streamed in your terminal.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 256,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 258,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"next-steps\",\n      children: \"Next Steps\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 260,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Now that you have successfully added a pipe locally and ran it, you can deploy it seamlessly on Langbase using the \", _jsxDEV(_components.a, {\n        href: \"/docs/deployment/deploy\",\n        children: \"deploy\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 262,\n        columnNumber: 116\n      }, this), \" command.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 262,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 264,\n      columnNumber: 1\n    }, this)]\n  }, undefined, true, {\n    fileName: \"<source.js>\",\n    lineNumber: 1,\n    columnNumber: 1\n  }, this);\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsxDEV(MDXLayout, {\n    ...props,\n    children: _jsxDEV(_createMdxContent, {\n      ...props\n    }, undefined, false, {\n      fileName: \"<source.js>\"\n    }, this)\n  }, undefined, false, {\n    fileName: \"<source.js>\"\n  }, this) : _createMdxContent(props);\n}\nreturn {\n  sections,\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component, place) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\" + (place ? \"\\nIt’s referenced in your code at `\" + place + \"`\" : \"\"));\n}\n","frontmatter":{},"scope":{}},"frontmatter":{"url":"https://baseai.dev/docs/add/quickstart","slug":"quickstart","title":"Quickstart - Add","imageUrl":"https://baseai.dev/api/og?title=Quickstart&section=Add","tags":["baseai","add","clone","pipe"],"section":"Add","description":"Let's learn how to add a Pipe locally in your project.","modifiedDate":"2024-09-24T00:00:00.000Z","publishedDate":"2024-09-24T00:00:00.000Z"}},{"slug":"authentication","section":"deployment","content":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsxDEV: _jsxDEV} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nconst sections = [{\n  title: \"Step #0 Create an account\",\n  id: \"step-0-create-an-account\",\n  ...undefined\n}, {\n  title: \"Step #1 Authenticate with Langbase\",\n  id: \"step-1-authenticate-with-langbase\",\n  ...undefined\n}, {\n  title: \"Step #2 Generate API Key\",\n  id: \"step-2-generate-api-key\",\n  ...undefined\n}, {\n  title: \"Step #3 Paste API Key\",\n  id: \"step-3-paste-api-key\",\n  ...undefined\n}];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    hr: \"hr\",\n    p: \"p\",\n    pre: \"pre\",\n    ..._provideComponents(),\n    ...props.components\n  }, {Img} = _components;\n  if (!Img) _missingMdxReference(\"Img\", true, \"27:1-32:3\");\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(_components.h1, {\n      children: \"Authentication\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 2,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Langbase creates a secure environment for your AI agents and memory. To deploy your AI agents and memory, you need to authenticate with Langbase.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 4,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 6,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"step-0-create-an-account\",\n      children: \"Step #0 Create an account\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 8,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Make sure you have an account on \", _jsxDEV(_components.a, {\n        href: \"https://langbase.com\",\n        children: \"Langbase\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 10,\n        columnNumber: 34\n      }, this), \".\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 10,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"step-1-authenticate-with-langbase\",\n      children: \"Step #1 Authenticate with Langbase\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 12,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Use the \", _jsxDEV(_components.code, {\n        children: \"baseai auth\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), \" command to authenticate with Langbase.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 14,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"bash\",\n      code: \"baseai auth\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-bash\",\n        children: \"<span><span style=\\\"color: #FAD000\\\">baseai</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">auth</span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 16,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 16,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"It will ask your permission to open a browser window to authenticate with Langbase. Make sure you are logged in to your Langbase account.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 20,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"step-2-generate-api-key\",\n      children: \"Step #2 Generate API Key\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 22,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Select the account you want to authenticate with Langbase and click on 'Generate API Key' to authenticate. It\\nwill generate an API key for you.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 24,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(Img, {\n      light: \"/docs/deploy/auth-api-light.jpg\",\n      dark: \"/docs/deploy/auth-api-dark.jpg\",\n      alt: \"⌘ Langbase Authentication BaseAI\",\n      caption: \"⌘ Langbase Authentication BaseAI\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 27,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"step-3-paste-api-key\",\n      children: \"Step #3 Paste API Key\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 35,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Copy that API key and paste it in the terminal.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 37,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"bash\",\n      code: \"# ◆  Paste your API key string:\\n#  *******************************\\n#\\n# Output\\n# Authentication successful. Credentials stored.\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-bash\",\n        children: \"<span><span style=\\\"color: #B362FF; font-style: italic\\\"># ◆  Paste your API key string:</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\">#  *******************************</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\">#</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># Output</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># Authentication successful. Credentials stored.</span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 39,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 39,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"That's it! You are now authenticated with Langbase. You can now deploy your AI agents and memory to Langbase.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 47,\n      columnNumber: 1\n    }, this)]\n  }, undefined, true, {\n    fileName: \"<source.js>\",\n    lineNumber: 1,\n    columnNumber: 1\n  }, this);\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsxDEV(MDXLayout, {\n    ...props,\n    children: _jsxDEV(_createMdxContent, {\n      ...props\n    }, undefined, false, {\n      fileName: \"<source.js>\"\n    }, this)\n  }, undefined, false, {\n    fileName: \"<source.js>\"\n  }, this) : _createMdxContent(props);\n}\nreturn {\n  sections,\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component, place) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\" + (place ? \"\\nIt’s referenced in your code at `\" + place + \"`\" : \"\"));\n}\n","frontmatter":{},"scope":{}},"frontmatter":{"url":"https://baseai.dev/docs/deployment/authentication","slug":"authentication","title":"Authentication - Deployment","imageUrl":"https://baseai.dev/api/og?title=Authentication&section=Deployment","tags":["baseai","auth","langbase"],"section":"Deployment","description":"Authenticate with Langbase to deploy your AI agents and memory.","modifiedDate":"2024-09-24T00:00:00.000Z","publishedDate":"2024-09-24T00:00:00.000Z"}},{"slug":"deploy","section":"deployment","content":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsxDEV: _jsxDEV} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nconst sections = [];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    h1: \"h1\",\n    h3: \"h3\",\n    li: \"li\",\n    p: \"p\",\n    pre: \"pre\",\n    strong: \"strong\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(_components.h1, {\n      children: \"Deploy Memory\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 2,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Use the \", _jsxDEV(_components.code, {\n        children: \"deploy\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 4,\n        columnNumber: 9\n      }, this), \" command to deploy a project using the BaseAI CLI to Langbase. Before you deploy a project, make sure you are \", _jsxDEV(_components.a, {\n        href: \"/docs/deployment/authentication\",\n        children: \"authenticated\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 4,\n        columnNumber: 127\n      }, this), \" with the BaseAI CLI.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 4,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"bash\",\n      code: \"baseai deploy\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-bash\",\n        children: \"<span><span style=\\\"color: #FAD000\\\">baseai</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">deploy</span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 6,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 6,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"It will deploy all AI agent Pipes and Memory in the current project directory to Langbase.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 10,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h3, {\n      children: \"Pipe Deployment\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 12,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Currently pipe deployment supports following scenarios:\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 14,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.ul, {\n      children: [\"\\n\", _jsxDEV(_components.li, {\n        children: [\"If a \", _jsxDEV(_components.strong, {\n          children: \"Pipe does not exist\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 16,\n          columnNumber: 8\n        }, this), \" in Langbase, it will create a new Pipe.\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 16,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: [\"If a \", _jsxDEV(_components.strong, {\n          children: \"Pipe already exists\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 17,\n          columnNumber: 8\n        }, this), \" in Langbase, it will overwrite the Pipe with the local Pipe.\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 17,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: [\"If you are using an \", _jsxDEV(_components.strong, {\n          children: \"ollama\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 18,\n          columnNumber: 23\n        }, this), \" model, it will be deployed with \", _jsxDEV(_components.code, {\n          children: \"gpt-4o-mini\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 18,\n          columnNumber: 66\n        }, this), \".\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 18,\n        columnNumber: 1\n      }, this), \"\\n\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 16,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h3, {\n      children: \"Memory Deployment\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 21,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Currently memory deployment supports following scenarios:\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 23,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.ul, {\n      children: [\"\\n\", _jsxDEV(_components.li, {\n        children: \"If a memory does not exist in the Langbase platform, it will be created.\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 25,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: [\"If a memory exists in the Langbase platform, it will do the following:\", \"\\n\", _jsxDEV(_components.ul, {\n          children: [\"\\n\", _jsxDEV(_components.li, {\n            children: \"If the documents on Langbase are the same as the local memory, it will skip the memory.\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 27,\n            columnNumber: 4\n          }, this), \"\\n\", _jsxDEV(_components.li, {\n            children: \"If the memory on Langbase are subset of the local memory, it will only upload the new documents.\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 28,\n            columnNumber: 4\n          }, this), \"\\n\", _jsxDEV(_components.li, {\n            children: [\"If the memory on Langbase are superset of the local memory, it will ask the user to confirm the overwrite:\", \"\\n\", _jsxDEV(_components.ul, {\n              children: [\"\\n\", _jsxDEV(_components.li, {\n                children: \"If the user confirms, it will overwrite the memory on Langbase with the local memory.\"\n              }, undefined, false, {\n                fileName: \"<source.js>\",\n                lineNumber: 30,\n                columnNumber: 3\n              }, this), \"\\n\", _jsxDEV(_components.li, {\n                children: \"If the user does not confirm the overwrite, it will skip the memory.\"\n              }, undefined, false, {\n                fileName: \"<source.js>\",\n                lineNumber: 31,\n                columnNumber: 3\n              }, this), \"\\n\"]\n            }, undefined, true, {\n              fileName: \"<source.js>\",\n              lineNumber: 30,\n              columnNumber: 3\n            }, this), \"\\n\"]\n          }, undefined, true, {\n            fileName: \"<source.js>\",\n            lineNumber: 29,\n            columnNumber: 4\n          }, this), \"\\n\"]\n        }, undefined, true, {\n          fileName: \"<source.js>\",\n          lineNumber: 27,\n          columnNumber: 4\n        }, this), \"\\n\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 26,\n        columnNumber: 1\n      }, this), \"\\n\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 25,\n      columnNumber: 1\n    }, this)]\n  }, undefined, true, {\n    fileName: \"<source.js>\",\n    lineNumber: 1,\n    columnNumber: 1\n  }, this);\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsxDEV(MDXLayout, {\n    ...props,\n    children: _jsxDEV(_createMdxContent, {\n      ...props\n    }, undefined, false, {\n      fileName: \"<source.js>\"\n    }, this)\n  }, undefined, false, {\n    fileName: \"<source.js>\"\n  }, this) : _createMdxContent(props);\n}\nreturn {\n  sections,\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"frontmatter":{"url":"https://baseai.dev/docs/deployment/deploy","slug":"deploy","title":"Deploy - Deployment","imageUrl":"https://baseai.dev/api/og?title=Deploy&section=Deployment","tags":["baseai","auth","langbase","deploy"],"section":"Deployment","description":"Deploy a project using the BaseAI CLI to Langbase.","modifiedDate":"2024-09-24T00:00:00.000Z","publishedDate":"2024-09-24T00:00:00.000Z"}},{"slug":"docs","section":"","content":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsxDEV: _jsxDEV} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nconst sections = [];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    hr: \"hr\",\n    li: \"li\",\n    ol: \"ol\",\n    p: \"p\",\n    strong: \"strong\",\n    ..._provideComponents(),\n    ...props.components\n  }, {CTAButtons, Guides, LbLogo, Note, ProductsTable} = _components;\n  if (!CTAButtons) _missingMdxReference(\"CTAButtons\", true, \"15:1-18:3\");\n  if (!Guides) _missingMdxReference(\"Guides\", true, \"35:1-35:11\");\n  if (!LbLogo) _missingMdxReference(\"LbLogo\", true, \"3:5-3:46\");\n  if (!Note) _missingMdxReference(\"Note\", true, \"27:1-33:8\");\n  if (!ProductsTable) _missingMdxReference(\"ProductsTable\", true, \"22:1-22:18\");\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(\"a\", {\n      href: \"https://langbase.com/studio\",\n      className: \"hidden lg:flex h-full w-full items-center justify-center mb-4\",\n      children: _jsxDEV(LbLogo, {\n        className: \"flex h-full w-full\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 3,\n        columnNumber: 5\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 2,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(\"h1\", {\n      className: \"flex lg:hidden\",\n      children: \"Langbase Docs\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 6,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Langbase helps developers ship composable AI agents with hyper-personalized memory (RAG).\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 8,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Langbase is the composable AI infrastructure and developer experience to build, collaborate, and deploy any AI agents (AI features). Our mission is to make AI accessible to everyone, any developer not just AI/ML experts. We are the only \", _jsxDEV(_components.a, {\n        href: \"/composable-ai\",\n        children: \"composable AI infrastructure\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 10,\n        columnNumber: 238\n      }, this), \". That's all we do.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 10,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.ol, {\n      children: [\"\\n\", _jsxDEV(_components.li, {\n        children: [\"Start by building AI agents \", _jsxDEV(_components.a, {\n          href: \"/docs/pipe\",\n          children: \"Pipes\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 12,\n          columnNumber: 32\n        }, this)]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 12,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: [\"Then create managed semantic \", _jsxDEV(_components.a, {\n          href: \"/docs/memory\",\n          children: \"memory (RAG)\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 13,\n          columnNumber: 33\n        }, this), \" so your AI can talk to your data\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 13,\n        columnNumber: 1\n      }, this), \"\\n\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 12,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(CTAButtons, {\n      primary: {\n        href: '/pipe/quickstart',\n        text: '⌘ Quickstart',\n        sub: '(Pipe: Build an AI agent)'\n      },\n      secondary: {\n        href: '/api-reference/pipe',\n        text: 'Explore API reference'\n      }\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 15,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 20,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(ProductsTable, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 22,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 24,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(Note, {\n      sub: \"Join today\",\n      children: _jsxDEV(_components.p, {\n        children: [_jsxDEV(_components.strong, {\n          children: [\"Langbase is free for anyone to \", _jsxDEV(_components.a, {\n            href: \"https://langbase.fyi/awesome\",\n            children: \"get started\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 29,\n            columnNumber: 34\n          }, this)]\n        }, undefined, true, {\n          fileName: \"<source.js>\",\n          lineNumber: 29,\n          columnNumber: 1\n        }, this), \".\\nWe process billions of AI messages tokens daily, used by thousands of developers. \", _jsxDEV(_components.a, {\n          href: \"https://twitter.com/LangbaseInc\",\n          children: \"Tweet\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 30,\n          columnNumber: 83\n        }, this), \" us — what will you ship with Langbase?\\nIt all \", _jsxDEV(_components.a, {\n          href: \"https://langbase.fyi/starting-langbase\",\n          children: \"started\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 31,\n          columnNumber: 8\n        }, this), \" with a developer thinking … GPT is amazing, I want it everywhere, that's what ⌘ Langbase does for me.\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 29,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 27,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(Guides, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 35,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 37,\n      columnNumber: 1\n    }, this)]\n  }, undefined, true, {\n    fileName: \"<source.js>\",\n    lineNumber: 1,\n    columnNumber: 1\n  }, this);\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsxDEV(MDXLayout, {\n    ...props,\n    children: _jsxDEV(_createMdxContent, {\n      ...props\n    }, undefined, false, {\n      fileName: \"<source.js>\"\n    }, this)\n  }, undefined, false, {\n    fileName: \"<source.js>\"\n  }, this) : _createMdxContent(props);\n}\nreturn {\n  sections,\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component, place) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\" + (place ? \"\\nIt’s referenced in your code at `\" + place + \"`\" : \"\"));\n}\n","frontmatter":{},"scope":{}},"frontmatter":{"url":"https://baseai.dev/docs","slug":"docs","title":"BaseAI docs","imageUrl":"https://baseai.dev/api/og?title=BaseAI docs","tags":["baseai","AI framework"],"section":"","description":"BaseAI - The web AI framework for developers.","modifiedDate":"2024-09-24T00:00:00.000Z","publishedDate":"2024-09-24T00:00:00.000Z"}},{"slug":"cli","section":"getting-started","content":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsxDEV: _jsxDEV} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nconst sections = [{\n  title: \"Basic Usage\",\n  id: \"basic-usage\",\n  ...undefined\n}, {\n  title: \"Commands\",\n  id: \"commands\",\n  ...undefined\n}];\nfunction _createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    h3: \"h3\",\n    hr: \"hr\",\n    p: \"p\",\n    pre: \"pre\",\n    table: \"table\",\n    tbody: \"tbody\",\n    td: \"td\",\n    th: \"th\",\n    thead: \"thead\",\n    tr: \"tr\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(_components.h1, {\n      children: \"BaseAI CLI\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 2,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"The BaseAI CLI allows you to develop, build, and deploy BaseAI primitives from the command line to Langbase. This document provides an overview of the commands available in the CLI.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 4,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 6,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"basic-usage\",\n      children: \"Basic Usage\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 8,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"bash\",\n      code: \"npx baseai [command]\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-bash\",\n        children: \"<span><span style=\\\"color: #FAD000\\\">npx</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">baseai</span><span style=\\\"color: #9EFFFF\\\"> [command</span><span style=\\\"color: #FFFFFF\\\">]</span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 10,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 10,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 14,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"commands\",\n      children: \"Commands\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 16,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"The following commands are available in the CLI:\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 18,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.table, {\n      children: [_jsxDEV(_components.thead, {\n        children: _jsxDEV(_components.tr, {\n          children: [_jsxDEV(_components.th, {\n            children: \"Command\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 20,\n            columnNumber: 1\n          }, this), _jsxDEV(_components.th, {\n            children: \"Description\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 20,\n            columnNumber: 11\n          }, this)]\n        }, undefined, true, {\n          fileName: \"<source.js>\",\n          lineNumber: 20,\n          columnNumber: 1\n        }, this)\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 20,\n        columnNumber: 1\n      }, this), _jsxDEV(_components.tbody, {\n        children: [_jsxDEV(_components.tr, {\n          children: [_jsxDEV(_components.td, {\n            children: _jsxDEV(_components.code, {\n              children: \"init\"\n            }, undefined, false, {\n              fileName: \"<source.js>\",\n              lineNumber: 22,\n              columnNumber: 3\n            }, this)\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 22,\n            columnNumber: 1\n          }, this), _jsxDEV(_components.td, {\n            children: \"Initializes the setup of BaseAI\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 22,\n            columnNumber: 10\n          }, this)]\n        }, undefined, true, {\n          fileName: \"<source.js>\",\n          lineNumber: 22,\n          columnNumber: 1\n        }, this), _jsxDEV(_components.tr, {\n          children: [_jsxDEV(_components.td, {\n            children: _jsxDEV(_components.code, {\n              children: \"dev\"\n            }, undefined, false, {\n              fileName: \"<source.js>\",\n              lineNumber: 23,\n              columnNumber: 3\n            }, this)\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 23,\n            columnNumber: 1\n          }, this), _jsxDEV(_components.td, {\n            children: \"Starts the local server of BaseAI in development mode\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 23,\n            columnNumber: 9\n          }, this)]\n        }, undefined, true, {\n          fileName: \"<source.js>\",\n          lineNumber: 23,\n          columnNumber: 1\n        }, this), _jsxDEV(_components.tr, {\n          children: [_jsxDEV(_components.td, {\n            children: _jsxDEV(_components.code, {\n              children: \"pipe\"\n            }, undefined, false, {\n              fileName: \"<source.js>\",\n              lineNumber: 24,\n              columnNumber: 3\n            }, this)\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 24,\n            columnNumber: 1\n          }, this), _jsxDEV(_components.td, {\n            children: \"Starts the process of creating a pipe in your application\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 24,\n            columnNumber: 10\n          }, this)]\n        }, undefined, true, {\n          fileName: \"<source.js>\",\n          lineNumber: 24,\n          columnNumber: 1\n        }, this), _jsxDEV(_components.tr, {\n          children: [_jsxDEV(_components.td, {\n            children: _jsxDEV(_components.code, {\n              children: \"memory\"\n            }, undefined, false, {\n              fileName: \"<source.js>\",\n              lineNumber: 25,\n              columnNumber: 3\n            }, this)\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 25,\n            columnNumber: 1\n          }, this), _jsxDEV(_components.td, {\n            children: \"Starts the process of creating a memory in your application\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 25,\n            columnNumber: 12\n          }, this)]\n        }, undefined, true, {\n          fileName: \"<source.js>\",\n          lineNumber: 25,\n          columnNumber: 1\n        }, this), _jsxDEV(_components.tr, {\n          children: [_jsxDEV(_components.td, {\n            children: _jsxDEV(_components.code, {\n              children: \"tool\"\n            }, undefined, false, {\n              fileName: \"<source.js>\",\n              lineNumber: 26,\n              columnNumber: 3\n            }, this)\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 26,\n            columnNumber: 1\n          }, this), _jsxDEV(_components.td, {\n            children: \"Starts the process of creating a tool in your application\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 26,\n            columnNumber: 10\n          }, this)]\n        }, undefined, true, {\n          fileName: \"<source.js>\",\n          lineNumber: 26,\n          columnNumber: 1\n        }, this), _jsxDEV(_components.tr, {\n          children: [_jsxDEV(_components.td, {\n            children: _jsxDEV(_components.code, {\n              children: \"add\"\n            }, undefined, false, {\n              fileName: \"<source.js>\",\n              lineNumber: 27,\n              columnNumber: 3\n            }, this)\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 27,\n            columnNumber: 1\n          }, this), _jsxDEV(_components.td, {\n            children: \"Adds a pipe present on Langbase to your project\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 27,\n            columnNumber: 9\n          }, this)]\n        }, undefined, true, {\n          fileName: \"<source.js>\",\n          lineNumber: 27,\n          columnNumber: 1\n        }, this), _jsxDEV(_components.tr, {\n          children: [_jsxDEV(_components.td, {\n            children: _jsxDEV(_components.code, {\n              children: \"auth\"\n            }, undefined, false, {\n              fileName: \"<source.js>\",\n              lineNumber: 28,\n              columnNumber: 3\n            }, this)\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 28,\n            columnNumber: 1\n          }, this), _jsxDEV(_components.td, {\n            children: \"Starts the authentication process of BaseAI with Langbase\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 28,\n            columnNumber: 10\n          }, this)]\n        }, undefined, true, {\n          fileName: \"<source.js>\",\n          lineNumber: 28,\n          columnNumber: 1\n        }, this), _jsxDEV(_components.tr, {\n          children: [_jsxDEV(_components.td, {\n            children: _jsxDEV(_components.code, {\n              children: \"build\"\n            }, undefined, false, {\n              fileName: \"<source.js>\",\n              lineNumber: 29,\n              columnNumber: 3\n            }, this)\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 29,\n            columnNumber: 1\n          }, this), _jsxDEV(_components.td, {\n            children: [\"Builds \", _jsxDEV(_components.code, {\n              children: \"pipes\"\n            }, undefined, false, {\n              fileName: \"<source.js>\",\n              lineNumber: 29,\n              columnNumber: 20\n            }, this), \", \", _jsxDEV(_components.code, {\n              children: \"memory\"\n            }, undefined, false, {\n              fileName: \"<source.js>\",\n              lineNumber: 29,\n              columnNumber: 29\n            }, this), \" and \", _jsxDEV(_components.code, {\n              children: \"tools\"\n            }, undefined, false, {\n              fileName: \"<source.js>\",\n              lineNumber: 29,\n              columnNumber: 42\n            }, this), \" for deployment to Langbase\"]\n          }, undefined, true, {\n            fileName: \"<source.js>\",\n            lineNumber: 29,\n            columnNumber: 11\n          }, this)]\n        }, undefined, true, {\n          fileName: \"<source.js>\",\n          lineNumber: 29,\n          columnNumber: 1\n        }, this), _jsxDEV(_components.tr, {\n          children: [_jsxDEV(_components.td, {\n            children: _jsxDEV(_components.code, {\n              children: \"deploy\"\n            }, undefined, false, {\n              fileName: \"<source.js>\",\n              lineNumber: 30,\n              columnNumber: 3\n            }, this)\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 30,\n            columnNumber: 1\n          }, this), _jsxDEV(_components.td, {\n            children: \"Deploys your BaseAI application to Langbase\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 30,\n            columnNumber: 12\n          }, this)]\n        }, undefined, true, {\n          fileName: \"<source.js>\",\n          lineNumber: 30,\n          columnNumber: 1\n        }, this)]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 22,\n        columnNumber: 1\n      }, this)]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 20,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 32,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h3, {\n      children: [_jsxDEV(_components.code, {\n        children: \"init\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 34,\n        columnNumber: 5\n      }, this), \" command\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 34,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [_jsxDEV(_components.code, {\n        children: \"baseai init\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 36,\n        columnNumber: 1\n      }, this), \" initializes the setup of BaseAI at the root of your application. It installs \", _jsxDEV(_components.code, {\n        children: \"baseai\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 36,\n        columnNumber: 92\n      }, this), \" in your application, creates a \", _jsxDEV(_components.code, {\n        children: \"baseai\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 36,\n        columnNumber: 132\n      }, this), \" folder at the root, and adds a \", _jsxDEV(_components.code, {\n        children: \"baseai.config.json\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 36,\n        columnNumber: 172\n      }, this), \" file to this folder.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 36,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"bash\",\n      code: \"npx baseai init\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-bash\",\n        children: \"<span><span style=\\\"color: #FAD000\\\">npx</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">baseai</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">init</span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 38,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 38,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 42,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h3, {\n      children: [_jsxDEV(_components.code, {\n        children: \"dev\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 44,\n        columnNumber: 5\n      }, this), \" command\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 44,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [_jsxDEV(_components.code, {\n        children: \"baseai dev\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 46,\n        columnNumber: 1\n      }, this), \" starts the local server of BaseAI in development mode. This command is used for testing \", _jsxDEV(_components.code, {\n        children: \"pipes\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 46,\n        columnNumber: 102\n      }, this), \", \", _jsxDEV(_components.code, {\n        children: \"memory\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 46,\n        columnNumber: 111\n      }, this), \" and \", _jsxDEV(_components.code, {\n        children: \"tools\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 46,\n        columnNumber: 124\n      }, this), \" of your application locally before deploying them to Langbase.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 46,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"bash\",\n      code: \"npx baseai dev\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-bash\",\n        children: \"<span><span style=\\\"color: #FAD000\\\">npx</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">baseai</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">dev</span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 48,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 48,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 52,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h3, {\n      children: [_jsxDEV(_components.code, {\n        children: \"pipe\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 54,\n        columnNumber: 5\n      }, this), \" command\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 54,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [_jsxDEV(_components.code, {\n        children: \"baseai pipe\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 56,\n        columnNumber: 1\n      }, this), \" starts the process of creating a pipe in your application. Once a pipe is created, it will be available in the \", _jsxDEV(_components.code, {\n        children: \"pipes\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 56,\n        columnNumber: 126\n      }, this), \" folder of \", _jsxDEV(_components.code, {\n        children: \"baseai\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 56,\n        columnNumber: 144\n      }, this), \".\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 56,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"bash\",\n      code: \"npx baseai pipe\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-bash\",\n        children: \"<span><span style=\\\"color: #FAD000\\\">npx</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">baseai</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">pipe</span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 58,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 58,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 62,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h3, {\n      children: [_jsxDEV(_components.code, {\n        children: \"memory\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 64,\n        columnNumber: 5\n      }, this), \" command\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 64,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [_jsxDEV(_components.code, {\n        children: \"baseai memory\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 66,\n        columnNumber: 1\n      }, this), \" starts the process of creating a memory in your application. Once a memory is created, it will be available in the \", _jsxDEV(_components.code, {\n        children: \"memory\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 66,\n        columnNumber: 132\n      }, this), \" folder of \", _jsxDEV(_components.code, {\n        children: \"baseai\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 66,\n        columnNumber: 151\n      }, this), \".\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 66,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"bash\",\n      code: \"npx baseai memory\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-bash\",\n        children: \"<span><span style=\\\"color: #FAD000\\\">npx</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">baseai</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">memory</span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 68,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 68,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 72,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h3, {\n      children: [_jsxDEV(_components.code, {\n        children: \"tool\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 74,\n        columnNumber: 5\n      }, this), \" command\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 74,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [_jsxDEV(_components.code, {\n        children: \"baseai tool\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 76,\n        columnNumber: 1\n      }, this), \" starts the process of creating a tool in your application. Once a tool is created, it will be available in the \", _jsxDEV(_components.code, {\n        children: \"tools\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 76,\n        columnNumber: 126\n      }, this), \" folder of \", _jsxDEV(_components.code, {\n        children: \"baseai\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 76,\n        columnNumber: 144\n      }, this), \".\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 76,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"bash\",\n      code: \"npx baseai tool\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-bash\",\n        children: \"<span><span style=\\\"color: #FAD000\\\">npx</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">baseai</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">tool</span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 78,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 78,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 82,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h3, {\n      children: [_jsxDEV(_components.code, {\n        children: \"add\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 84,\n        columnNumber: 5\n      }, this), \" command\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 84,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [_jsxDEV(_components.code, {\n        children: \"baseai add\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 86,\n        columnNumber: 1\n      }, this), \" adds a pipe present on Langbase to your project. Once done, the pipe and its tools will become available in the \", _jsxDEV(_components.code, {\n        children: \"pipes\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 86,\n        columnNumber: 126\n      }, this), \" and \", _jsxDEV(_components.code, {\n        children: \"tools\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 86,\n        columnNumber: 138\n      }, this), \" folder of \", _jsxDEV(_components.code, {\n        children: \"baseai\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 86,\n        columnNumber: 156\n      }, this), \" respectively.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 86,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"bash\",\n      code: \"npx baseai add [owner-login/pipe-name]\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-bash\",\n        children: \"<span><span style=\\\"color: #FAD000\\\">npx</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">baseai</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">add</span><span style=\\\"color: #9EFFFF\\\"> [owner-login/pipe-name</span><span style=\\\"color: #FFFFFF\\\">]</span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 88,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 88,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"OR\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 92,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"bash\",\n      code: \"npx baseai add [link-to-pipe]\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-bash\",\n        children: \"<span><span style=\\\"color: #FAD000\\\">npx</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">baseai</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">add</span><span style=\\\"color: #9EFFFF\\\"> [link-to-pipe</span><span style=\\\"color: #FFFFFF\\\">]</span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 94,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 94,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 98,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h3, {\n      children: [_jsxDEV(_components.code, {\n        children: \"auth\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 100,\n        columnNumber: 5\n      }, this), \" command\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 100,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [_jsxDEV(_components.code, {\n        children: \"baseai auth\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 102,\n        columnNumber: 1\n      }, this), \" starts the authentication process of BaseAI with Langbase. Once done, you will be able to deploy \", _jsxDEV(_components.code, {\n        children: \"pipes\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 102,\n        columnNumber: 112\n      }, this), \", \", _jsxDEV(_components.code, {\n        children: \"memory\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 102,\n        columnNumber: 121\n      }, this), \" and \", _jsxDEV(_components.code, {\n        children: \"tools\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 102,\n        columnNumber: 134\n      }, this), \" of your application to Langbase.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 102,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"bash\",\n      code: \"npx baseai auth\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-bash\",\n        children: \"<span><span style=\\\"color: #FAD000\\\">npx</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">baseai</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">auth</span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 104,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 104,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 108,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h3, {\n      children: [_jsxDEV(_components.code, {\n        children: \"build\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 110,\n        columnNumber: 5\n      }, this), \" command\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 110,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [_jsxDEV(_components.code, {\n        children: \"baseai build\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 112,\n        columnNumber: 1\n      }, this), \" builds \", _jsxDEV(_components.code, {\n        children: \"pipes\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 112,\n        columnNumber: 23\n      }, this), \", \", _jsxDEV(_components.code, {\n        children: \"memory\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 112,\n        columnNumber: 32\n      }, this), \" and \", _jsxDEV(_components.code, {\n        children: \"tools\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 112,\n        columnNumber: 45\n      }, this), \" of your application with BaseAI. These build files are then used during the deployment to Langbase.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 112,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"bash\",\n      code: \"npx baseai build\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-bash\",\n        children: \"<span><span style=\\\"color: #FAD000\\\">npx</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">baseai</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">build</span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 114,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 114,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 118,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h3, {\n      children: [_jsxDEV(_components.code, {\n        children: \"deploy\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 120,\n        columnNumber: 5\n      }, this), \" command\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 120,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [_jsxDEV(_components.code, {\n        children: \"baseai deploy\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 122,\n        columnNumber: 1\n      }, this), \" deploys \", _jsxDEV(_components.code, {\n        children: \"pipes\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 122,\n        columnNumber: 25\n      }, this), \", \", _jsxDEV(_components.code, {\n        children: \"memory\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 122,\n        columnNumber: 34\n      }, this), \" and \", _jsxDEV(_components.code, {\n        children: \"tools\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 122,\n        columnNumber: 47\n      }, this), \" of your application to Langbase.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 122,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"bash\",\n      code: \"npx baseai deploy\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-bash\",\n        children: \"<span><span style=\\\"color: #FAD000\\\">npx</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">baseai</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">deploy</span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 124,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 124,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 128,\n      columnNumber: 1\n    }, this)]\n  }, undefined, true, {\n    fileName: \"<source.js>\",\n    lineNumber: 1,\n    columnNumber: 1\n  }, this);\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsxDEV(MDXLayout, {\n    ...props,\n    children: _jsxDEV(_createMdxContent, {\n      ...props\n    }, undefined, false, {\n      fileName: \"<source.js>\"\n    }, this)\n  }, undefined, false, {\n    fileName: \"<source.js>\"\n  }, this) : _createMdxContent(props);\n}\nreturn {\n  sections,\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"frontmatter":{"url":"https://baseai.dev/docs/getting-started/cli","slug":"cli","title":"BaseAI CLI - Getting Started","imageUrl":"https://baseai.dev/api/og?title=BaseAI CLI&section=Getting Started","tags":["baseai","cli","langbase"],"section":"Getting Started","description":"CLI reference of BaseAI CLI.","modifiedDate":"2024-09-24T00:00:00.000Z","publishedDate":"2024-09-24T00:00:00.000Z"}},{"slug":"config","section":"getting-started","content":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsxDEV: _jsxDEV} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nconst sections = [{\n  title: \"Overview\",\n  id: \"overview\",\n  ...undefined\n}];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    h3: \"h3\",\n    hr: \"hr\",\n    p: \"p\",\n    pre: \"pre\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(_components.h1, {\n      children: \"BaseAI Configuration file\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 2,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Here's an overview of the BaseAI project structure in your application.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 4,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 6,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"overview\",\n      children: \"Overview\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 8,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"The \", _jsxDEV(_components.code, {\n        children: \"baseai\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 10,\n        columnNumber: 5\n      }, this), \" folder is present at the root of your application/project. This folder contains the BaseAI configuration file named as\\n\", _jsxDEV(_components.code, {\n        children: \"baseai.config.ts\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 11,\n        columnNumber: 1\n      }, this), \".\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 10,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"shell\",\n      code: \"# Your project's root directory\\n- baseai\\n  - baseai.config.ts\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-shell\",\n        children: \"<span><span style=\\\"color: #B362FF; font-style: italic\\\"># Your project&#39;s root directory</span></span>\\n<span><span style=\\\"color: #FAD000\\\">-</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">baseai</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">  </span><span style=\\\"color: #FAD000\\\">-</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">baseai.config.ts</span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 13,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 13,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"This file contains all the default configurations of BaseAI that are used by the CLI during the development of your application. You can modify these configurations as per your requirements.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 19,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"ts\",\n      code: \"// baseai/baseai.config.ts\\nimport type {BaseAIConfig} from '@baseai/core';\\n\\nexport const config: BaseAIConfig = {\\n  \\\"log\\\": {\\n    \\\"isEnabled\\\": true,\\n    \\\"logSensitiveData\\\": false,\\n    \\\"pipe\\\": true,\\n    \\\"pipe.completion\\\": true,\\n    \\\"pipe.request\\\": true,\\n    \\\"pipe.response\\\": true,\\n    \\\"tool\\\": false,\\n    \\\"memory\\\": false\\n  },\\n  \\\"memory\\\": {\\n    \\\"useLocalEmbeddings\\\": false\\n  },\\n  \\\"envFilePath\\\": \\\".env\\\"\\n};\\n\\n---\\n\\nHere is a breakdown of the configurations present in the `baseai.config.ts` file.\\n\\n### `log`\\n\\nThe `log` object contains the configurations for logging in the application. You can enable or disable logging for different parts of the application like pipes, tools, and memory.\\n\\n---\\n\\n### `memory`\\n\\nThe `memory` object contains the configurations for memory in the application. You can enable or disable the use of local embeddings for memory.\\n\\n```ts\\n\\\"memory\\\": {\\n  \\\"useLocalEmbeddings\\\": false\\n}\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-ts\",\n        children: \"<span><span style=\\\"color: #B362FF; font-style: italic\\\">// baseai/baseai.config.ts</span></span>\\n<span><span style=\\\"color: #FF9D00\\\">import</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">type</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span><span style=\\\"color: #9EFFFF\\\">BaseAIConfig</span><span style=\\\"color: #E1EFFF\\\">}</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00; font-style: italic\\\">from</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">@baseai/core</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">export</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">const</span><span style=\\\"color: #9EFFFF\\\"> config</span><span style=\\\"color: #FF9D00\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #80FFBB\\\">BaseAIConfig</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">  </span><span style=\\\"color: #92FC79\\\">&quot;</span><span style=\\\"color: #A5FF90\\\">log</span><span style=\\\"color: #92FC79\\\">&quot;</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">    </span><span style=\\\"color: #92FC79\\\">&quot;</span><span style=\\\"color: #A5FF90\\\">isEnabled</span><span style=\\\"color: #92FC79\\\">&quot;</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">true</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">    </span><span style=\\\"color: #92FC79\\\">&quot;</span><span style=\\\"color: #A5FF90\\\">logSensitiveData</span><span style=\\\"color: #92FC79\\\">&quot;</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">false</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">    </span><span style=\\\"color: #92FC79\\\">&quot;</span><span style=\\\"color: #A5FF90\\\">pipe</span><span style=\\\"color: #92FC79\\\">&quot;</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">true</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">    </span><span style=\\\"color: #92FC79\\\">&quot;</span><span style=\\\"color: #A5FF90\\\">pipe.completion</span><span style=\\\"color: #92FC79\\\">&quot;</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">true</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">    </span><span style=\\\"color: #92FC79\\\">&quot;</span><span style=\\\"color: #A5FF90\\\">pipe.request</span><span style=\\\"color: #92FC79\\\">&quot;</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">true</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">    </span><span style=\\\"color: #92FC79\\\">&quot;</span><span style=\\\"color: #A5FF90\\\">pipe.response</span><span style=\\\"color: #92FC79\\\">&quot;</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">true</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">    </span><span style=\\\"color: #92FC79\\\">&quot;</span><span style=\\\"color: #A5FF90\\\">tool</span><span style=\\\"color: #92FC79\\\">&quot;</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">false</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">    </span><span style=\\\"color: #92FC79\\\">&quot;</span><span style=\\\"color: #A5FF90\\\">memory</span><span style=\\\"color: #92FC79\\\">&quot;</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">false</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">  </span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">  </span><span style=\\\"color: #92FC79\\\">&quot;</span><span style=\\\"color: #A5FF90\\\">memory</span><span style=\\\"color: #92FC79\\\">&quot;</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">    </span><span style=\\\"color: #92FC79\\\">&quot;</span><span style=\\\"color: #A5FF90\\\">useLocalEmbeddings</span><span style=\\\"color: #92FC79\\\">&quot;</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">false</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">  </span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">  </span><span style=\\\"color: #92FC79\\\">&quot;</span><span style=\\\"color: #A5FF90\\\">envFilePath</span><span style=\\\"color: #92FC79\\\">&quot;</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&quot;</span><span style=\\\"color: #A5FF90\\\">.env</span><span style=\\\"color: #92FC79\\\">&quot;</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">};</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">---</span></span>\\n<span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">Here</span><span style=\\\"color: #FFFFFF\\\"> </span><span style=\\\"color: #9EFFFF\\\">is</span><span style=\\\"color: #FFFFFF\\\"> </span><span style=\\\"color: #9EFFFF\\\">a</span><span style=\\\"color: #FFFFFF\\\"> </span><span style=\\\"color: #9EFFFF\\\">breakdown</span><span style=\\\"color: #FFFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">of</span><span style=\\\"color: #FFFFFF\\\"> </span><span style=\\\"color: #9EFFFF\\\">the</span><span style=\\\"color: #FFFFFF\\\"> </span><span style=\\\"color: #9EFFFF\\\">configurations</span><span style=\\\"color: #FFFFFF\\\"> </span><span style=\\\"color: #9EFFFF\\\">present</span><span style=\\\"color: #FFFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">in</span><span style=\\\"color: #FFFFFF\\\"> </span><span style=\\\"color: #9EFFFF\\\">the</span><span style=\\\"color: #FFFFFF\\\"> </span><span style=\\\"color: #3AD900\\\">`baseai.config.ts`</span><span style=\\\"color: #FFFFFF\\\"> </span><span style=\\\"color: #9EFFFF\\\">file</span><span style=\\\"color: #E1EFFF\\\">.</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FFFFFF\\\">### </span><span style=\\\"color: #3AD900\\\">`log`</span></span>\\n<span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">The</span><span style=\\\"color: #FFFFFF\\\"> </span><span style=\\\"color: #3AD900\\\">`log`</span><span style=\\\"color: #FFFFFF\\\"> </span><span style=\\\"color: #9EFFFF\\\">object</span><span style=\\\"color: #FFFFFF\\\"> </span><span style=\\\"color: #9EFFFF\\\">contains</span><span style=\\\"color: #FFFFFF\\\"> </span><span style=\\\"color: #9EFFFF\\\">the</span><span style=\\\"color: #FFFFFF\\\"> </span><span style=\\\"color: #9EFFFF\\\">configurations</span><span style=\\\"color: #FFFFFF\\\"> </span><span style=\\\"color: #9EFFFF\\\">for</span><span style=\\\"color: #FFFFFF\\\"> </span><span style=\\\"color: #9EFFFF\\\">logging</span><span style=\\\"color: #FFFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">in</span><span style=\\\"color: #FFFFFF\\\"> </span><span style=\\\"color: #9EFFFF\\\">the</span><span style=\\\"color: #FFFFFF\\\"> </span><span style=\\\"color: #9EFFFF\\\">application</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FFFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">You</span><span style=\\\"color: #FFFFFF\\\"> </span><span style=\\\"color: #9EFFFF\\\">can</span><span style=\\\"color: #FFFFFF\\\"> </span><span style=\\\"color: #9EFFFF\\\">enable</span><span style=\\\"color: #FFFFFF\\\"> </span><span style=\\\"color: #9EFFFF\\\">or</span><span style=\\\"color: #FFFFFF\\\"> </span><span style=\\\"color: #9EFFFF\\\">disable</span><span style=\\\"color: #FFFFFF\\\"> </span><span style=\\\"color: #9EFFFF\\\">logging</span><span style=\\\"color: #FFFFFF\\\"> </span><span style=\\\"color: #9EFFFF\\\">for</span><span style=\\\"color: #FFFFFF\\\"> </span><span style=\\\"color: #9EFFFF\\\">different</span><span style=\\\"color: #FFFFFF\\\"> </span><span style=\\\"color: #9EFFFF\\\">parts</span><span style=\\\"color: #FFFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">of</span><span style=\\\"color: #FFFFFF\\\"> </span><span style=\\\"color: #9EFFFF\\\">the</span><span style=\\\"color: #FFFFFF\\\"> </span><span style=\\\"color: #9EFFFF\\\">application</span><span style=\\\"color: #FFFFFF\\\"> </span><span style=\\\"color: #9EFFFF\\\">like</span><span style=\\\"color: #FFFFFF\\\"> </span><span style=\\\"color: #9EFFFF\\\">pipes</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #FFFFFF\\\"> </span><span style=\\\"color: #9EFFFF\\\">tools</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #FFFFFF\\\"> </span><span style=\\\"color: #9EFFFF\\\">and</span><span style=\\\"color: #FFFFFF\\\"> </span><span style=\\\"color: #9EFFFF\\\">memory</span><span style=\\\"color: #E1EFFF\\\">.</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">---</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FFFFFF\\\">### </span><span style=\\\"color: #3AD900\\\">`memory`</span></span>\\n<span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">The</span><span style=\\\"color: #FFFFFF\\\"> </span><span style=\\\"color: #3AD900\\\">`memory`</span><span style=\\\"color: #FFFFFF\\\"> </span><span style=\\\"color: #9EFFFF\\\">object</span><span style=\\\"color: #FFFFFF\\\"> </span><span style=\\\"color: #9EFFFF\\\">contains</span><span style=\\\"color: #FFFFFF\\\"> </span><span style=\\\"color: #9EFFFF\\\">the</span><span style=\\\"color: #FFFFFF\\\"> </span><span style=\\\"color: #9EFFFF\\\">configurations</span><span style=\\\"color: #FFFFFF\\\"> </span><span style=\\\"color: #9EFFFF\\\">for</span><span style=\\\"color: #FFFFFF\\\"> </span><span style=\\\"color: #9EFFFF\\\">memory</span><span style=\\\"color: #FFFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">in</span><span style=\\\"color: #FFFFFF\\\"> </span><span style=\\\"color: #9EFFFF\\\">the</span><span style=\\\"color: #FFFFFF\\\"> </span><span style=\\\"color: #9EFFFF\\\">application</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FFFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">You</span><span style=\\\"color: #FFFFFF\\\"> </span><span style=\\\"color: #9EFFFF\\\">can</span><span style=\\\"color: #FFFFFF\\\"> </span><span style=\\\"color: #9EFFFF\\\">enable</span><span style=\\\"color: #FFFFFF\\\"> </span><span style=\\\"color: #9EFFFF\\\">or</span><span style=\\\"color: #FFFFFF\\\"> </span><span style=\\\"color: #9EFFFF\\\">disable</span><span style=\\\"color: #FFFFFF\\\"> </span><span style=\\\"color: #9EFFFF\\\">the</span><span style=\\\"color: #FFFFFF\\\"> </span><span style=\\\"color: #9EFFFF\\\">use</span><span style=\\\"color: #FFFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">of</span><span style=\\\"color: #FFFFFF\\\"> </span><span style=\\\"color: #9EFFFF\\\">local</span><span style=\\\"color: #FFFFFF\\\"> </span><span style=\\\"color: #9EFFFF\\\">embeddings</span><span style=\\\"color: #FFFFFF\\\"> </span><span style=\\\"color: #9EFFFF\\\">for</span><span style=\\\"color: #FFFFFF\\\"> </span><span style=\\\"color: #9EFFFF\\\">memory</span><span style=\\\"color: #E1EFFF\\\">.</span></span>\\n<span></span>\\n<span><span style=\\\"color: #3AD900\\\">```ts</span></span>\\n<span><span style=\\\"color: #3AD900\\\">&quot;memory&quot;: {</span></span>\\n<span><span style=\\\"color: #3AD900\\\">  &quot;useLocalEmbeddings&quot;: false</span></span>\\n<span><span style=\\\"color: #3AD900\\\">}</span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 21,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 21,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Please check out the \", _jsxDEV(_components.a, {\n        href: \"/docs/memory/quickstart\",\n        children: \"memory quickstart\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 62,\n        columnNumber: 22\n      }, this), \" to get started.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 62,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 64,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h3, {\n      children: _jsxDEV(_components.code, {\n        children: \"envFilePath\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 66,\n        columnNumber: 5\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 66,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"The \", _jsxDEV(_components.code, {\n        children: \"envFilePath\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 68,\n        columnNumber: 5\n      }, this), \" key contains the path to the \", _jsxDEV(_components.code, {\n        children: \".env\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 68,\n        columnNumber: 48\n      }, this), \" file in your application. You can change the path as per your requirements. It is set to the root of the application by default.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 68,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"ts\",\n      code: \"\\\"envFilePath\\\": \\\".env\\\"\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-ts\",\n        children: \"<span><span style=\\\"color: #92FC79\\\">&quot;</span><span style=\\\"color: #A5FF90\\\">envFilePath</span><span style=\\\"color: #92FC79\\\">&quot;</span><span style=\\\"color: #FFFFFF\\\">: </span><span style=\\\"color: #92FC79\\\">&quot;</span><span style=\\\"color: #A5FF90\\\">.env</span><span style=\\\"color: #92FC79\\\">&quot;</span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 70,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 70,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 74,\n      columnNumber: 1\n    }, this)]\n  }, undefined, true, {\n    fileName: \"<source.js>\",\n    lineNumber: 1,\n    columnNumber: 1\n  }, this);\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsxDEV(MDXLayout, {\n    ...props,\n    children: _jsxDEV(_createMdxContent, {\n      ...props\n    }, undefined, false, {\n      fileName: \"<source.js>\"\n    }, this)\n  }, undefined, false, {\n    fileName: \"<source.js>\"\n  }, this) : _createMdxContent(props);\n}\nreturn {\n  sections,\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"frontmatter":{"url":"https://baseai.dev/docs/getting-started/config","slug":"config","title":"BaseAI Config - Getting Started","imageUrl":"https://baseai.dev/api/og?title=BaseAI Config&section=Getting Started","tags":["baseai","config","langbase"],"section":"Getting Started","description":"Config of BaseAI CLI.","modifiedDate":"2024-09-24T00:00:00.000Z","publishedDate":"2024-09-24T00:00:00.000Z"}},{"slug":"environment-variables","section":"getting-started","content":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsxDEV: _jsxDEV} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nconst sections = [{\n  title: \"Overview\",\n  id: \"overview\",\n  ...undefined\n}];\nfunction _createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    h3: \"h3\",\n    hr: \"hr\",\n    p: \"p\",\n    pre: \"pre\",\n    ..._provideComponents(),\n    ...props.components\n  }, {Note, Warn} = _components;\n  if (!Note) _missingMdxReference(\"Note\", true, \"35:1-37:8\");\n  if (!Warn) _missingMdxReference(\"Warn\", true, \"10:1-12:8\");\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(_components.h1, {\n      children: \"Environment Variables\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 2,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 4,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"overview\",\n      children: \"Overview\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 6,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"BaseAI uses \", _jsxDEV(_components.code, {\n        children: \"dotenv\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 8,\n        columnNumber: 13\n      }, this), \" package to manage environment variables. You can create \", _jsxDEV(_components.code, {\n        children: \".env\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 8,\n        columnNumber: 78\n      }, this), \" file in the root of your project and add the required environment variables.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 8,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(Warn, {\n      children: _jsxDEV(_components.p, {\n        children: [\"Please make sure to add \", _jsxDEV(_components.code, {\n          children: \".env\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 11,\n          columnNumber: 25\n        }, this), \" to the \", _jsxDEV(_components.code, {\n          children: \".gitignore\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 11,\n          columnNumber: 39\n        }, this), \" file of your project. This is to avoid committing your API keys to the git repository accidentally.\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 11,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 10,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 14,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h3, {\n      children: \"Environment Variables\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 16,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"If the pipes present in your project use LLM models from any of the following providers, you will need to add their respective API keys to the \", _jsxDEV(_components.code, {\n        children: \".env\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 18,\n        columnNumber: 144\n      }, this), \" file of your project.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 18,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"shell\",\n      code: \"# LOCAL ONLY.\\nOPENAI_API_KEY=\\\"\\\"     # OpenAI\\nANTHROPIC_API_KEY=\\\"\\\"  # Anthropic\\nCOHERE_API_KEY=\\\"\\\"     # Cohere\\nFIREWORKS_API_KEY=\\\"\\\"  # Fireworks\\nGOOGLE_API_KEY=\\\"\\\"     # Google\\nGROQ_API_KEY=\\\"\\\"       # Groq\\nMISTRAL_API_KEY=\\\"\\\"    # Mistral\\nPERPLEXITY_API_KEY=\\\"\\\" # Perplexity\\nTOGETHER_API_KEY=\\\"\\\"   # Together\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-shell\",\n        children: \"<span><span style=\\\"color: #B362FF; font-style: italic\\\"># LOCAL ONLY.</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">OPENAI_API_KEY</span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #92FC79\\\">&quot;&quot;</span><span style=\\\"color: #FFFFFF\\\">     </span><span style=\\\"color: #B362FF; font-style: italic\\\"># OpenAI</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">ANTHROPIC_API_KEY</span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #92FC79\\\">&quot;&quot;</span><span style=\\\"color: #FFFFFF\\\">  </span><span style=\\\"color: #B362FF; font-style: italic\\\"># Anthropic</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">COHERE_API_KEY</span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #92FC79\\\">&quot;&quot;</span><span style=\\\"color: #FFFFFF\\\">     </span><span style=\\\"color: #B362FF; font-style: italic\\\"># Cohere</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">FIREWORKS_API_KEY</span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #92FC79\\\">&quot;&quot;</span><span style=\\\"color: #FFFFFF\\\">  </span><span style=\\\"color: #B362FF; font-style: italic\\\"># Fireworks</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">GOOGLE_API_KEY</span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #92FC79\\\">&quot;&quot;</span><span style=\\\"color: #FFFFFF\\\">     </span><span style=\\\"color: #B362FF; font-style: italic\\\"># Google</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">GROQ_API_KEY</span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #92FC79\\\">&quot;&quot;</span><span style=\\\"color: #FFFFFF\\\">       </span><span style=\\\"color: #B362FF; font-style: italic\\\"># Groq</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">MISTRAL_API_KEY</span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #92FC79\\\">&quot;&quot;</span><span style=\\\"color: #FFFFFF\\\">    </span><span style=\\\"color: #B362FF; font-style: italic\\\"># Mistral</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">PERPLEXITY_API_KEY</span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #92FC79\\\">&quot;&quot;</span><span style=\\\"color: #FFFFFF\\\"> </span><span style=\\\"color: #B362FF; font-style: italic\\\"># Perplexity</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">TOGETHER_API_KEY</span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #92FC79\\\">&quot;&quot;</span><span style=\\\"color: #FFFFFF\\\">   </span><span style=\\\"color: #B362FF; font-style: italic\\\"># Together</span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 20,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 20,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Once you have added the environment variables, you will be able to run your AI \", _jsxDEV(_components.code, {\n        children: \"pipes\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 33,\n        columnNumber: 80\n      }, this), \" locally.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 33,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(Note, {\n      children: _jsxDEV(_components.p, {\n        children: [\"The environment variables are only required for running the \", _jsxDEV(_components.code, {\n          children: \"pipes\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 36,\n          columnNumber: 61\n        }, this), \" locally. You do not need to add them when deploying your \", _jsxDEV(_components.code, {\n          children: \"pipes\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 36,\n          columnNumber: 126\n        }, this), \" to Langbase.\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 36,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 35,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 39,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h3, {\n      children: \"Memory\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 41,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"BaseAI uses OpenAI to generate embeddings of the documents present in the memory on your local. For this reason, you will need to add an OpenAI API key to the \", _jsxDEV(_components.code, {\n        children: \".env\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 43,\n        columnNumber: 160\n      }, this), \" file of your project.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 43,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"shell\",\n      code: \"# LOCAL ONLY.\\nOPENAI_API_KEY=\\\"\\\" # OpenAI\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-shell\",\n        children: \"<span><span style=\\\"color: #B362FF; font-style: italic\\\"># LOCAL ONLY.</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">OPENAI_API_KEY</span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #92FC79\\\">&quot;&quot;</span><span style=\\\"color: #FFFFFF\\\"> </span><span style=\\\"color: #B362FF; font-style: italic\\\"># OpenAI</span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 45,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 45,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 50,\n      columnNumber: 1\n    }, this)]\n  }, undefined, true, {\n    fileName: \"<source.js>\",\n    lineNumber: 1,\n    columnNumber: 1\n  }, this);\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsxDEV(MDXLayout, {\n    ...props,\n    children: _jsxDEV(_createMdxContent, {\n      ...props\n    }, undefined, false, {\n      fileName: \"<source.js>\"\n    }, this)\n  }, undefined, false, {\n    fileName: \"<source.js>\"\n  }, this) : _createMdxContent(props);\n}\nreturn {\n  sections,\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component, place) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\" + (place ? \"\\nIt’s referenced in your code at `\" + place + \"`\" : \"\"));\n}\n","frontmatter":{},"scope":{}},"frontmatter":{"url":"https://baseai.dev/docs/getting-started/environment-variables","slug":"environment-variables","title":"Environment Variables - Getting Started","imageUrl":"https://baseai.dev/api/og?title=Environment Variables&section=Getting Started","tags":["baseai","environment variables","langbase"],"section":"Getting Started","description":"Environment variables required to run BaseAI.","modifiedDate":"2024-09-24T00:00:00.000Z","publishedDate":"2024-09-24T00:00:00.000Z"}},{"slug":"logs","section":"getting-started","content":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsxDEV: _jsxDEV} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nconst sections = [{\n  title: \"Overview\",\n  id: \"overview\",\n  ...undefined\n}];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    h3: \"h3\",\n    hr: \"hr\",\n    li: \"li\",\n    ol: \"ol\",\n    p: \"p\",\n    pre: \"pre\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(_components.h1, {\n      children: \"Logs\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 2,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Here's an overview of the BaseAI project structure in your application.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 4,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 6,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"overview\",\n      children: \"Overview\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 8,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"The logging system in BaseAI allows for flexible and hierarchical control over log output. You can view real-time logs in your terminal while running the local BaseAI server.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 10,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"To view logs, make sure you have baseai running in your terminal. You can start the server by running the following command:\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 12,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"bash\",\n      code: \"npx baseai dev\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-bash\",\n        children: \"<span><span style=\\\"color: #FAD000\\\">npx</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">baseai</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">dev</span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 14,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 14,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"This starts the local server of BaseAI in development mode. You will view the logs in your terminal as you run any BaseAI command, like creating a pipe, tool, memory or running your pipes. View all the available commands in the \", _jsxDEV(_components.a, {\n        href: \"/docs/getting-started/cli\",\n        children: \"CLI reference\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 18,\n        columnNumber: 229\n      }, this), \".\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 18,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h3, {\n      children: \"Log Configurations\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 20,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"By default, all logs are enabled. You can customize the logging system by modifying the configuration in the \", _jsxDEV(_components.code, {\n        children: \"baseai.config.ts\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 22,\n        columnNumber: 110\n      }, this), \" file. It is located in the \", _jsxDEV(_components.code, {\n        children: \"baseai\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 22,\n        columnNumber: 156\n      }, this), \" folder at the root of your application.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 22,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"shell\",\n      code: \"# Your project's root directory\\n- baseai\\n  - baseai.config.ts\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-shell\",\n        children: \"<span><span style=\\\"color: #B362FF; font-style: italic\\\"># Your project&#39;s root directory</span></span>\\n<span><span style=\\\"color: #FAD000\\\">-</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">baseai</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">  </span><span style=\\\"color: #FAD000\\\">-</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">baseai.config.ts</span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 24,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 24,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Here is the default configuration of the logging system in BaseAI:\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 30,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"ts\",\n      code: \"export const defaultConfig: BaseAIConfig = {\\n\\tlog: {\\n\\t\\t// Enable or disable logging\\n\\t\\tisEnabled: true,\\n\\t\\t// Log sensitive data\\n\\t\\tlogSensitiveData: false,\\n\\t\\t// Toggle specific log categories\\n\\t\\tpipe: true,\\n\\t\\t'pipe.completion': true,\\n\\t\\t'pipe.request': true,\\n\\t\\t'pipe.response': true,\\n\\t\\ttool: false,\\n\\t\\tmemory: false\\n\\t}\\n\\t// Other default configuration options can be added here\\n};\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-ts\",\n        children: \"<span><span style=\\\"color: #FF9D00\\\">export</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">const</span><span style=\\\"color: #9EFFFF\\\"> defaultConfig</span><span style=\\\"color: #FF9D00\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #80FFBB\\\">BaseAIConfig</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tlog</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">\\t\\t</span><span style=\\\"color: #B362FF; font-style: italic\\\">// Enable or disable logging</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tisEnabled</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">true</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">\\t\\t</span><span style=\\\"color: #B362FF; font-style: italic\\\">// Log sensitive data</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tlogSensitiveData</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">false</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">\\t\\t</span><span style=\\\"color: #B362FF; font-style: italic\\\">// Toggle specific log categories</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tpipe</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">true</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">pipe.completion</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">true</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">pipe.request</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">true</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">pipe.response</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">true</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\ttool</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">false</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tmemory</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">false</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #E1EFFF\\\">}</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">\\t</span><span style=\\\"color: #B362FF; font-style: italic\\\">// Other default configuration options can be added here</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">};</span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 32,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 32,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.ul, {\n      children: [\"\\n\", _jsxDEV(_components.li, {\n        children: [_jsxDEV(_components.code, {\n          children: \"isEnabled\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 51,\n          columnNumber: 3\n        }, this), \": Master switch to enable/disable all logging.\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 51,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: [_jsxDEV(_components.code, {\n          children: \"logSensitiveData\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 52,\n          columnNumber: 3\n        }, this), \": Controls whether sensitive data should be logged.\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 52,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: \"Category toggles: Use dot-notation to enable/disable specific categories and subcategories.\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 53,\n        columnNumber: 1\n      }, this), \"\\n\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 51,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h3, {\n      children: \"Hierarchical Categories\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 55,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"The logging system supports hierarchical categories. This means:\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 57,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.ol, {\n      children: [\"\\n\", _jsxDEV(_components.li, {\n        children: [\"If a parent category is set to \", _jsxDEV(_components.code, {\n          children: \"false\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 59,\n          columnNumber: 35\n        }, this), \", all its subcategories will be disabled, regardless of their individual settings.\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 59,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: [\"If a parent category is not specified or set to \", _jsxDEV(_components.code, {\n          children: \"true\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 60,\n          columnNumber: 52\n        }, this), \", subcategories can be individually controlled.\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 60,\n        columnNumber: 1\n      }, this), \"\\n\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 59,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"For example:\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 62,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.ul, {\n      children: [\"\\n\", _jsxDEV(_components.li, {\n        children: [\"If \", _jsxDEV(_components.code, {\n          children: \"pipe: false\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 64,\n          columnNumber: 6\n        }, this), \", all \", _jsxDEV(_components.code, {\n          children: \"pipe.*\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 64,\n          columnNumber: 25\n        }, this), \" logs will be disabled.\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 64,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: [\"If \", _jsxDEV(_components.code, {\n          children: \"pipe: true\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 65,\n          columnNumber: 6\n        }, this), \" and \", _jsxDEV(_components.code, {\n          children: \"pipe.request: false\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 65,\n          columnNumber: 23\n        }, this), \", all \", _jsxDEV(_components.code, {\n          children: \"pipe.request.*\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 65,\n          columnNumber: 50\n        }, this), \" logs will be disabled, but \", _jsxDEV(_components.code, {\n          children: \"pipe.response.*\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 65,\n          columnNumber: 94\n        }, this), \" logs will still be active (if not explicitly disabled).\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 65,\n        columnNumber: 1\n      }, this), \"\\n\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 64,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 67,\n      columnNumber: 1\n    }, this)]\n  }, undefined, true, {\n    fileName: \"<source.js>\",\n    lineNumber: 1,\n    columnNumber: 1\n  }, this);\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsxDEV(MDXLayout, {\n    ...props,\n    children: _jsxDEV(_createMdxContent, {\n      ...props\n    }, undefined, false, {\n      fileName: \"<source.js>\"\n    }, this)\n  }, undefined, false, {\n    fileName: \"<source.js>\"\n  }, this) : _createMdxContent(props);\n}\nreturn {\n  sections,\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"frontmatter":{"url":"https://baseai.dev/docs/getting-started/logs","slug":"logs","title":"BaseAI Logs - Getting Started","imageUrl":"https://baseai.dev/api/og?title=BaseAI Logs&section=Getting Started","tags":["baseai","logs","langbase"],"section":"Getting Started","description":"Logs in BaseAI.","modifiedDate":"2024-09-24T00:00:00.000Z","publishedDate":"2024-09-24T00:00:00.000Z"}},{"slug":"project-structure","section":"getting-started","content":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsxDEV: _jsxDEV} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nconst sections = [{\n  title: \"Overview\",\n  id: \"overview\",\n  ...undefined\n}];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    h3: \"h3\",\n    hr: \"hr\",\n    p: \"p\",\n    pre: \"pre\",\n    table: \"table\",\n    tbody: \"tbody\",\n    td: \"td\",\n    th: \"th\",\n    thead: \"thead\",\n    tr: \"tr\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(_components.h1, {\n      children: \"Project Structure\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 2,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Here's an overview of the BaseAI project structure in your application.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 4,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 6,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"overview\",\n      children: \"Overview\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 8,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"The \", _jsxDEV(_components.code, {\n        children: \"baseai\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 10,\n        columnNumber: 5\n      }, this), \" folder is present at the root of your application. This folder contains all of the files and folders required to run BaseAI on your local. Here is the structure of the \", _jsxDEV(_components.code, {\n        children: \"baseai\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 10,\n        columnNumber: 182\n      }, this), \" folder:\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 10,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"shell\",\n      code: \"- baseai\\n  - .baseai\\n  - pipes\\n  - memory\\n  - tools\\n  - baseai.config.ts\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-shell\",\n        children: \"<span><span style=\\\"color: #FAD000\\\">-</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">baseai</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">  </span><span style=\\\"color: #FAD000\\\">-</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">.baseai</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">  </span><span style=\\\"color: #FAD000\\\">-</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">pipes</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">  </span><span style=\\\"color: #FAD000\\\">-</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">memory</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">  </span><span style=\\\"color: #FAD000\\\">-</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">tools</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">  </span><span style=\\\"color: #FAD000\\\">-</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">baseai.config.ts</span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 12,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 12,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.table, {\n      children: [_jsxDEV(_components.thead, {\n        children: _jsxDEV(_components.tr, {\n          children: [_jsxDEV(_components.th, {\n            children: \"Name\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 21,\n            columnNumber: 1\n          }, this), _jsxDEV(_components.th, {\n            children: \"Description\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 21,\n            columnNumber: 8\n          }, this)]\n        }, undefined, true, {\n          fileName: \"<source.js>\",\n          lineNumber: 21,\n          columnNumber: 1\n        }, this)\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 21,\n        columnNumber: 1\n      }, this), _jsxDEV(_components.tbody, {\n        children: [_jsxDEV(_components.tr, {\n          children: [_jsxDEV(_components.td, {\n            children: _jsxDEV(_components.code, {\n              children: \".baseai\"\n            }, undefined, false, {\n              fileName: \"<source.js>\",\n              lineNumber: 23,\n              columnNumber: 3\n            }, this)\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 23,\n            columnNumber: 1\n          }, this), _jsxDEV(_components.td, {\n            children: \"Contains the build files of BaseAI\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 23,\n            columnNumber: 13\n          }, this)]\n        }, undefined, true, {\n          fileName: \"<source.js>\",\n          lineNumber: 23,\n          columnNumber: 1\n        }, this), _jsxDEV(_components.tr, {\n          children: [_jsxDEV(_components.td, {\n            children: _jsxDEV(_components.a, {\n              href: \"/docs/pipe/quickstart\",\n              children: _jsxDEV(_components.code, {\n                children: \"pipes\"\n              }, undefined, false, {\n                fileName: \"<source.js>\",\n                lineNumber: 24,\n                columnNumber: 4\n              }, this)\n            }, undefined, false, {\n              fileName: \"<source.js>\",\n              lineNumber: 24,\n              columnNumber: 3\n            }, this)\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 24,\n            columnNumber: 1\n          }, this), _jsxDEV(_components.td, {\n            children: \"Pipes folder\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 24,\n            columnNumber: 36\n          }, this)]\n        }, undefined, true, {\n          fileName: \"<source.js>\",\n          lineNumber: 24,\n          columnNumber: 1\n        }, this), _jsxDEV(_components.tr, {\n          children: [_jsxDEV(_components.td, {\n            children: _jsxDEV(_components.a, {\n              href: \"/docs/memory/quickstart\",\n              children: _jsxDEV(_components.code, {\n                children: \"memory\"\n              }, undefined, false, {\n                fileName: \"<source.js>\",\n                lineNumber: 25,\n                columnNumber: 4\n              }, this)\n            }, undefined, false, {\n              fileName: \"<source.js>\",\n              lineNumber: 25,\n              columnNumber: 3\n            }, this)\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 25,\n            columnNumber: 1\n          }, this), _jsxDEV(_components.td, {\n            children: \"Memory folder\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 25,\n            columnNumber: 39\n          }, this)]\n        }, undefined, true, {\n          fileName: \"<source.js>\",\n          lineNumber: 25,\n          columnNumber: 1\n        }, this), _jsxDEV(_components.tr, {\n          children: [_jsxDEV(_components.td, {\n            children: _jsxDEV(_components.a, {\n              href: \"/docs/tools/quickstart\",\n              children: _jsxDEV(_components.code, {\n                children: \"tools\"\n              }, undefined, false, {\n                fileName: \"<source.js>\",\n                lineNumber: 26,\n                columnNumber: 4\n              }, this)\n            }, undefined, false, {\n              fileName: \"<source.js>\",\n              lineNumber: 26,\n              columnNumber: 3\n            }, this)\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 26,\n            columnNumber: 1\n          }, this), _jsxDEV(_components.td, {\n            children: \"Tools folder\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 26,\n            columnNumber: 37\n          }, this)]\n        }, undefined, true, {\n          fileName: \"<source.js>\",\n          lineNumber: 26,\n          columnNumber: 1\n        }, this), _jsxDEV(_components.tr, {\n          children: [_jsxDEV(_components.td, {\n            children: _jsxDEV(_components.code, {\n              children: \"baseai.config.ts\"\n            }, undefined, false, {\n              fileName: \"<source.js>\",\n              lineNumber: 27,\n              columnNumber: 3\n            }, this)\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 27,\n            columnNumber: 1\n          }, this), _jsxDEV(_components.td, {\n            children: \"BaseAI configuration file\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 27,\n            columnNumber: 22\n          }, this)]\n        }, undefined, true, {\n          fileName: \"<source.js>\",\n          lineNumber: 27,\n          columnNumber: 1\n        }, this)]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 23,\n        columnNumber: 1\n      }, this)]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 21,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 29,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h3, {\n      children: _jsxDEV(_components.code, {\n        children: \"pipes\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 31,\n        columnNumber: 5\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 31,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"This directory contains all of the pipes that are used in the application. Each pipe is a separate file that contains the configurations of that particular pipe.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 33,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Please check out the \", _jsxDEV(_components.a, {\n        href: \"/docs/pipe/quickstart\",\n        children: \"pipes quickstart\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 35,\n        columnNumber: 22\n      }, this), \" to get started.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 35,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 37,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h3, {\n      children: _jsxDEV(_components.code, {\n        children: \"memory\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 39,\n        columnNumber: 5\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 39,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"This directory contains all of the memory files that are used in the application. Each memory is a separate folder that contains an \", _jsxDEV(_components.code, {\n        children: \"index.ts\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 41,\n        columnNumber: 133\n      }, this), \" file to define memory config.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 41,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"The \", _jsxDEV(_components.code, {\n        children: \"memory\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 43,\n        columnNumber: 5\n      }, this), \" folder also contains a \", _jsxDEV(_components.code, {\n        children: \"documents\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 43,\n        columnNumber: 37\n      }, this), \" folder that contains all of the documents that are used by the memory. Each document is a separate file that can be used to perform RAG operations.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 43,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Please check out the \", _jsxDEV(_components.a, {\n        href: \"/docs/memory/quickstart\",\n        children: \"memory quickstart\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 45,\n        columnNumber: 22\n      }, this), \" to get started.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 45,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 47,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h3, {\n      children: _jsxDEV(_components.code, {\n        children: \"tools\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 49,\n        columnNumber: 5\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 49,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [_jsxDEV(_components.code, {\n        children: \"tools\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 51,\n        columnNumber: 1\n      }, this), \" folder contains all of the tools that are used by the pipes of the application. Each tool is a separate file that contains the function definition and configration of a tool.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 51,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Please check out the \", _jsxDEV(_components.a, {\n        href: \"/docs/tools/quickstart\",\n        children: \"tools quickstart\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 53,\n        columnNumber: 22\n      }, this), \" to get started.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 53,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 55,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h3, {\n      children: _jsxDEV(_components.code, {\n        children: \"baseai.config.ts\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 57,\n        columnNumber: 5\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 57,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [_jsxDEV(_components.code, {\n        children: \"baseai.config.ts\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 59,\n        columnNumber: 1\n      }, this), \" file is present in the \", _jsxDEV(_components.code, {\n        children: \"baseai\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 59,\n        columnNumber: 43\n      }, this), \" folder. This file contains the configurations of BaseAI that are used by the CLI during the development of your application.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 59,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 61,\n      columnNumber: 1\n    }, this)]\n  }, undefined, true, {\n    fileName: \"<source.js>\",\n    lineNumber: 1,\n    columnNumber: 1\n  }, this);\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsxDEV(MDXLayout, {\n    ...props,\n    children: _jsxDEV(_createMdxContent, {\n      ...props\n    }, undefined, false, {\n      fileName: \"<source.js>\"\n    }, this)\n  }, undefined, false, {\n    fileName: \"<source.js>\"\n  }, this) : _createMdxContent(props);\n}\nreturn {\n  sections,\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"frontmatter":{"url":"https://baseai.dev/docs/getting-started/project-structure","slug":"project-structure","title":"Project Structure - Getting Started","imageUrl":"https://baseai.dev/api/og?title=Project Structure&section=Getting Started","tags":["baseai","project structure","langbase"],"section":"Getting Started","description":"Project structure of a BaseAI application.","modifiedDate":"2024-09-24T00:00:00.000Z","publishedDate":"2024-09-24T00:00:00.000Z"}},{"slug":"build-ai-pipe-with-tools-and-memory","section":"learn","content":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsxDEV: _jsxDEV} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nconst sections = [{\n  title: \"Step #0: Initialize BaseAI\",\n  id: \"step-0-initialize-base-ai\",\n  ...undefined\n}, {\n  title: \"Step #1: Create a summarizer Pipe\",\n  id: \"step-1-create-a-summarizer-pipe\",\n  ...undefined\n}, {\n  title: \"Step #2: View and configure your pipe\",\n  id: \"step-2-view-and-configure-your-pipe\",\n  ...undefined\n}, {\n  title: \"Step #3: Integrate the pipe with your app\",\n  id: \"step-3-integrate-the-pipe-with-your-app\",\n  ...undefined\n}, {\n  title: \"Step #4: Run the AI pipe\",\n  id: \"step-4-run-the-ai-pipe\",\n  ...undefined\n}, {\n  title: \"Step #5: Create a weather tool\",\n  id: \"step-5-create-a-weather-tool\",\n  ...undefined\n}, {\n  title: \"Step #6: View and configure the tool\",\n  id: \"step-6-view-and-configure-the-tool\",\n  ...undefined\n}, {\n  title: \"Step #7: Integrate the tool in the pipe\",\n  id: \"step-7-integrate-the-tool-in-the-pipe\",\n  ...undefined\n}, {\n  title: \"Step #8: Run the pipe\",\n  id: \"step-8-run-the-pipe\",\n  ...undefined\n}, {\n  title: \"Step #9: Create a memory\",\n  id: \"step-9-create-a-memory\",\n  ...undefined\n}, {\n  title: \"Step #10: Add documents to the memory\",\n  id: \"step-10-add-documents-to-the-memory\",\n  ...undefined\n}, {\n  title: \"Step #11: Embed the memory\",\n  id: \"step-11-embed-the-memory\",\n  ...undefined\n}, {\n  title: \"Step #12: Integrate the memory with the pipe\",\n  id: \"step-12-integrate-the-memory-with-the-pipe\",\n  ...undefined\n}, {\n  title: \"Step #13: Run the pipe with the integrated memory\",\n  id: \"step-13-run-the-pipe-with-the-integrated-memory\",\n  ...undefined\n}];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    h3: \"h3\",\n    hr: \"hr\",\n    li: \"li\",\n    p: \"p\",\n    pre: \"pre\",\n    strong: \"strong\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  }, {CodeGroup, Note} = _components;\n  if (!CodeGroup) _missingMdxReference(\"CodeGroup\", true, \"68:1-102:13\");\n  if (!Note) _missingMdxReference(\"Note\", true, \"780:1-782:8\");\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(_components.h1, {\n      children: \"Build an agentic AI pipe with tools\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 2,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h3, {\n      children: \"Learn how to build an agentic AI pipe with tools and memory\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 4,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 6,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"In this guide, you will learn how to locally:\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 8,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.ul, {\n      children: [\"\\n\", _jsxDEV(_components.li, {\n        children: [_jsxDEV(_components.strong, {\n          children: \"Create\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 10,\n          columnNumber: 4\n        }, this), \" a summarization agent AI pipe.\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 10,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: [_jsxDEV(_components.strong, {\n          children: \"Run\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 11,\n          columnNumber: 4\n        }, this), \" the AI pipe with configuration and meta settings.\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 11,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: [_jsxDEV(_components.strong, {\n          children: \"Create\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 12,\n          columnNumber: 4\n        }, this), \" a weather tool that returns the current weather for a given location.\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 12,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: [_jsxDEV(_components.strong, {\n          children: \"Integrate\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 13,\n          columnNumber: 4\n        }, this), \" the tool in the agent pipe.\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 13,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: [_jsxDEV(_components.strong, {\n          children: \"Run\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 14,\n          columnNumber: 4\n        }, this), \" the AI pipe with the integrated tool.\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 14,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: [_jsxDEV(_components.strong, {\n          children: \"Create\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 15,\n          columnNumber: 4\n        }, this), \" a memory and add documents to it.\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 15,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: [_jsxDEV(_components.strong, {\n          children: \"Embed\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 16,\n          columnNumber: 4\n        }, this), \" the memory to generate embeddings for the documents.\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 16,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: [_jsxDEV(_components.strong, {\n          children: \"Integrate\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 17,\n          columnNumber: 4\n        }, this), \" the memory with the agent pipe.\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 17,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: [_jsxDEV(_components.strong, {\n          children: \"Run\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 18,\n          columnNumber: 4\n        }, this), \" the AI pipe with the integrated memory.\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 18,\n        columnNumber: 1\n      }, this), \"\\n\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 10,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 20,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"step-0-initialize-base-ai\",\n      children: \"Step #0: Initialize BaseAI\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 22,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Please initialize BaseAI in your project using the following command:\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 24,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"bash\",\n      code: \"npx baseai init\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-bash\",\n        children: \"<span><span style=\\\"color: #FAD000\\\">npx</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">baseai</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">init</span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 26,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 26,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 30,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"step-1-create-a-summarizer-pipe\",\n      children: \"Step #1: Create a summarizer Pipe\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 32,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Navigate to your project directory, and create a new pipe using the \", _jsxDEV(_components.code, {\n        children: \"baseai pipe\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 34,\n        columnNumber: 69\n      }, this), \" command. It will ask you for the name, description, and other details of the pipe step-by-step.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 34,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"bash\",\n      code: \"npx baseai pipe\\n\\n# Output\\n# ◇  Name of the pipe\\n# │  summarizer\\n# │\\n# ◇  Description of the pipe\\n# │  A pipe that summarizes content and makes it less wordy\\n# │\\n# ◇  Status of the pipe\\n# │  Public\\n# │\\n# ◇  System prompt\\n# │  You are a helpful AI assistant.\\n# │\\n# ◇  Select memory for this pipe (optional)\\n# │  none\\n# │\\n# ◇  Select tools for this pipe (optional)\\n# │  none\\n# │\\n# └  Pipe created successfully at /baseai/pipes/summarizer.ts\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-bash\",\n        children: \"<span><span style=\\\"color: #FAD000\\\">npx</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">baseai</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">pipe</span></span>\\n<span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># Output</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># ◇  Name of the pipe</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># │  summarizer</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># │</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># ◇  Description of the pipe</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># │  A pipe that summarizes content and makes it less wordy</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># │</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># ◇  Status of the pipe</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># │  Public</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># │</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># ◇  System prompt</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># │  You are a helpful AI assistant.</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># │</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># ◇  Select memory for this pipe (optional)</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># │  none</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># │</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># ◇  Select tools for this pipe (optional)</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># │  none</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># │</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># └  Pipe created successfully at /baseai/pipes/summarizer.ts</span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 36,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 36,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 62,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"step-2-view-and-configure-your-pipe\",\n      children: \"Step #2: View and configure your pipe\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 64,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Your pipe is created successfully at \", _jsxDEV(_components.code, {\n        children: \"/baseai/pipes/summarizer.ts\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 66,\n        columnNumber: 38\n      }, this), \". Open the file, it will look like this:\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 66,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(CodeGroup, {\n      exampleTitle: \"BaseAI Pipe & Tool\",\n      title: \"Weather agent pipe\",\n      children: _jsxDEV(_components.pre, {\n        language: \"ts\",\n        code: \"import { PipeI } from '@baseai/core';\\n\\nconst pipeName = (): PipeI => ({\\n\\tapiKey: 'process.env.LANGBASE_USER_ORG_API_KEY', // Replace with your API key https://langbase.com/docs/api-reference/api-keys\\n\\tname: 'summarizer',\\n\\tdescription: 'A pipe that summarizes content and makes it less wordy',\\n\\tstatus: 'public',\\n\\tmodel: 'openai:gpt-4o-mini',\\n\\tstream: true,\\n\\tjson: false,\\n\\tstore: true,\\n\\tmoderate: true,\\n\\ttop_p: 1,\\n\\tmax_tokens: 1000,\\n\\ttemperature: 0.7,\\n\\tpresence_penalty: 1,\\n\\tfrequency_penalty: 1,\\n\\tstop: [],\\n\\ttool_choice: 'auto',\\n\\tparallel_tool_calls: false,\\n\\tmessages: [\\n\\t\\t{ role: 'system', content: `You are a helpful AI assistant.` },\\n\\t],\\n\\tvariables: [],\\n    memory: [],\\n    tools: [],\\n});\\n\\nexport default pipeName;\\n\",\n        children: _jsxDEV(_components.code, {\n          className: \"language-ts\",\n          children: \"<span><span style=\\\"color: #FF9D00\\\">import</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span><span style=\\\"color: #9EFFFF\\\"> PipeI </span><span style=\\\"color: #E1EFFF\\\">}</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00; font-style: italic\\\">from</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">@baseai/core</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">const</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">pipeName</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FFEE80\\\">()</span><span style=\\\"color: #FF9D00\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #80FFBB\\\">PipeI</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">=&gt;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">({</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tapiKey</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">process.env.LANGBASE_USER_ORG_API_KEY</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #B362FF; font-style: italic\\\">// Replace with your API key https://langbase.com/docs/api-reference/api-keys</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tname</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">summarizer</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tdescription</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">A pipe that summarizes content and makes it less wordy</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tstatus</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">public</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tmodel</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">openai:gpt-4o-mini</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tstream</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">true</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tjson</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">false</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tstore</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">true</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tmoderate</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">true</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\ttop_p</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">1</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tmax_tokens</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">1000</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\ttemperature</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">0</span><span style=\\\"color: #9EFFFF\\\">.</span><span style=\\\"color: #FF628C\\\">7</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tpresence_penalty</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">1</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tfrequency_penalty</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">1</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tstop</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\ttool_choice</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">auto</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tparallel_tool_calls</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">false</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tmessages</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t</span><span style=\\\"color: #E1EFFF\\\">{</span><span style=\\\"color: #9EFFFF\\\"> role</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">system</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> content</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #3AD900\\\">`You are a helpful AI assistant.`</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #E1EFFF\\\">],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tvariables</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">    memory</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">    tools</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[],</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">});</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">export</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">default</span><span style=\\\"color: #9EFFFF\\\"> pipeName</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 70,\n          columnNumber: 1\n        }, this),\n        ...{\n          title: './baseai/pipes/summarizer.ts'\n        }\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 70,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 68,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Let's add the following system prompt to the Pipe. I will also update the pipe name from \", _jsxDEV(_components.code, {\n        children: \"pipeName\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 104,\n        columnNumber: 90\n      }, this), \" to \", _jsxDEV(_components.code, {\n        children: \"pipeSummarizer\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 104,\n        columnNumber: 105\n      }, this), \".\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 104,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"txt\",\n      code: \"You are a content summarizer. You will summarize content without loosing context into less wordy to the point version.\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-txt\",\n        children: \"<span><span style=\\\"color: undefined\\\">You are a content summarizer. You will summarize content without loosing context into less wordy to the point version.</span></span>\\n<span><span style=\\\"color: undefined\\\"></span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 106,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 106,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(CodeGroup, {\n      exampleTitle: \"BaseAI Pipe & Tool\",\n      title: \"Summarizer agent pipe\",\n      children: _jsxDEV(_components.pre, {\n        language: \"ts\",\n        code: \"import { PipeI } from '@baseai/core';\\n\\nconst pipeSummarizer = (): PipeI => ({\\n\\tapiKey: 'process.env.LANGBASE_USER_ORG_API_KEY', // Replace with your API key https://langbase.com/docs/api-reference/api-keys\\n\\tname: 'summarizer',\\n\\tdescription: 'A pipe that summarizes content and make it less wordy',\\n\\tstatus: 'public',\\n\\tmodel: 'openai:gpt-4o-mini',\\n\\tstream: true,\\n\\tjson: false,\\n\\tstore: true,\\n\\tmoderate: true,\\n\\ttop_p: 1,\\n\\tmax_tokens: 1000,\\n\\ttemperature: 0.7,\\n\\tpresence_penalty: 1,\\n\\tfrequency_penalty: 1,\\n\\tstop: [],\\n\\ttool_choice: 'auto',\\n\\tparallel_tool_calls: false,\\n\\tmessages: [\\n\\t\\t{ role: 'system', content: `You are a content summarizer. You will summarize content without loosing context into less wordy to the point version.` },\\n\\t],\\n\\tvariables: [],\\n    memory: [],\\n    tools: [],\\n});\\n\\nexport default pipeSummarizer;\\n\",\n        children: _jsxDEV(_components.code, {\n          className: \"language-ts\",\n          children: \"<span><span style=\\\"color: #FF9D00\\\">import</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span><span style=\\\"color: #9EFFFF\\\"> PipeI </span><span style=\\\"color: #E1EFFF\\\">}</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00; font-style: italic\\\">from</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">@baseai/core</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">const</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">pipeSummarizer</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FFEE80\\\">()</span><span style=\\\"color: #FF9D00\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #80FFBB\\\">PipeI</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">=&gt;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">({</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tapiKey</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">process.env.LANGBASE_USER_ORG_API_KEY</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #B362FF; font-style: italic\\\">// Replace with your API key https://langbase.com/docs/api-reference/api-keys</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tname</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">summarizer</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tdescription</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">A pipe that summarizes content and make it less wordy</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tstatus</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">public</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tmodel</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">openai:gpt-4o-mini</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tstream</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">true</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tjson</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">false</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tstore</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">true</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tmoderate</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">true</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\ttop_p</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">1</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tmax_tokens</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">1000</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\ttemperature</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">0</span><span style=\\\"color: #9EFFFF\\\">.</span><span style=\\\"color: #FF628C\\\">7</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tpresence_penalty</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">1</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tfrequency_penalty</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">1</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tstop</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\ttool_choice</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">auto</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tparallel_tool_calls</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">false</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tmessages</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t</span><span style=\\\"color: #E1EFFF\\\">{</span><span style=\\\"color: #9EFFFF\\\"> role</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">system</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> content</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #3AD900\\\">`You are a content summarizer. You will summarize content without loosing context into less wordy to the point version.`</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #E1EFFF\\\">],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tvariables</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">    memory</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">    tools</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[],</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">});</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">export</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">default</span><span style=\\\"color: #9EFFFF\\\"> pipeSummarizer</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 112,\n          columnNumber: 1\n        }, this),\n        ...{\n          title: './baseai/pipes/summarizer.ts'\n        }\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 112,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 110,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 146,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"step-3-integrate-the-pipe-with-your-app\",\n      children: \"Step #3: Integrate the pipe with your app\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 148,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Create a \", _jsxDEV(_components.code, {\n        children: \"index.ts\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 150,\n        columnNumber: 10\n      }, this), \" file in your project and import the pipe you created in the previous step. We will use the Pipe primitive from \", _jsxDEV(_components.code, {\n        children: \"@baseai/core\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 150,\n        columnNumber: 132\n      }, this), \" to run the pipe.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 150,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"bash\",\n      code: \"# Create a new file index.ts\\ntouch index.ts\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-bash\",\n        children: \"<span><span style=\\\"color: #B362FF; font-style: italic\\\"># Create a new file index.ts</span></span>\\n<span><span style=\\\"color: #FAD000\\\">touch</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">index.ts</span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 152,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 152,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Add the following code to \", _jsxDEV(_components.code, {\n        children: \"index.ts\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 157,\n        columnNumber: 27\n      }, this), \" file:\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 157,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(CodeGroup, {\n      exampleTitle: \"BaseAI Pipe & Tool\",\n      title: \"Run AI agent Pipe with tools\",\n      children: [_jsxDEV(_components.pre, {\n        language: \"ts\",\n        code: \"import 'dotenv/config';\\nimport {Pipe, streamText, getRunner} from '@baseai/core';\\nimport pipeSummarizer from './baseai/pipes/summarizer';\\n\\nconst pipe = new Pipe(pipeSummarizer());\\n\\nconst userMsg = `\\nLangbase studio is your playground to build, collaborate, and deploy AI. It allows you to experiment with your pipes in real-time, with real data, store messages, version your prompts, and truly helps you take your idea from building prototypes to deployed in production with LLMOps on usage, cost, and quality.\\nA complete AI developers platform.\\n- Collaborate: Invite all team members to collaborate on the pipe. Build AI together.\\n- Developers & Stakeholders: All your R&D team, engineering, product, GTM (marketing and sales), literally invlove every stakeholder can collaborate on the same pipe. It's like a powerful version of GitHub x Google Docs for AI. A complete AI developers platform.\\n`;\\n\\nasync function main() {\\n\\tconst {stream} = await streamText({\\n\\t\\tpipe,\\n\\t\\tmessages: [{role: 'user', content: userMsg}],\\n\\t});\\n\\n\\tconst runner = getRunner(stream);\\n\\n\\t// Method 1: Using event listeners\\n\\trunner.on('connect', () => {\\n\\t\\tconsole.log('Stream started.\\\\n');\\n\\t});\\n\\n\\trunner.on('content', content => {\\n\\t\\tprocess.stdout.write(content);\\n\\t});\\n\\n\\trunner.on('end', () => {\\n\\t\\tconsole.log('\\\\nStream ended.');\\n\\t});\\n\\n\\trunner.on('error', error => {\\n\\t\\tconsole.error('Error:', error);\\n\\t});\\n}\\n\\nmain();\\n\",\n        children: _jsxDEV(_components.code, {\n          className: \"language-ts\",\n          children: \"<span><span style=\\\"color: #FF9D00\\\">import</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">dotenv/config</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span><span style=\\\"color: #FF9D00\\\">import</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span><span style=\\\"color: #9EFFFF\\\">Pipe</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> streamText</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> getRunner</span><span style=\\\"color: #E1EFFF\\\">}</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00; font-style: italic\\\">from</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">@baseai/core</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span><span style=\\\"color: #FF9D00\\\">import</span><span style=\\\"color: #9EFFFF\\\"> pipeSummarizer </span><span style=\\\"color: #FF9D00; font-style: italic\\\">from</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">./baseai/pipes/summarizer</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">const</span><span style=\\\"color: #9EFFFF\\\"> pipe </span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">new</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">Pipe</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #FAD000\\\">pipeSummarizer</span><span style=\\\"color: #E1EFFF\\\">());</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">const</span><span style=\\\"color: #9EFFFF\\\"> userMsg </span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #3AD900\\\">`</span></span>\\n<span><span style=\\\"color: #3AD900\\\">Langbase studio is your playground to build, collaborate, and deploy AI. It allows you to experiment with your pipes in real-time, with real data, store messages, version your prompts, and truly helps you take your idea from building prototypes to deployed in production with LLMOps on usage, cost, and quality.</span></span>\\n<span><span style=\\\"color: #3AD900\\\">A complete AI developers platform.</span></span>\\n<span><span style=\\\"color: #3AD900\\\">- Collaborate: Invite all team members to collaborate on the pipe. Build AI together.</span></span>\\n<span><span style=\\\"color: #3AD900\\\">- Developers &amp; Stakeholders: All your R&amp;D team, engineering, product, GTM (marketing and sales), literally invlove every stakeholder can collaborate on the same pipe. It&#39;s like a powerful version of GitHub x Google Docs for AI. A complete AI developers platform.</span></span>\\n<span><span style=\\\"color: #3AD900\\\">`</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00; font-style: italic\\\">async</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">function</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">main</span><span style=\\\"color: #E1EFFF\\\">()</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #FF9D00\\\">const</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span><span style=\\\"color: #9EFFFF\\\">stream</span><span style=\\\"color: #E1EFFF\\\">}</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">await</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">streamText</span><span style=\\\"color: #E1EFFF\\\">({</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tpipe</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tmessages</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[{</span><span style=\\\"color: #9EFFFF\\\">role</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">user</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> content</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> userMsg</span><span style=\\\"color: #E1EFFF\\\">}],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #E1EFFF\\\">});</span></span>\\n<span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #FF9D00\\\">const</span><span style=\\\"color: #9EFFFF\\\"> runner </span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">getRunner</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #9EFFFF\\\">stream</span><span style=\\\"color: #E1EFFF\\\">);</span></span>\\n<span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">\\t</span><span style=\\\"color: #B362FF; font-style: italic\\\">// Method 1: Using event listeners</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\trunner</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FAD000\\\">on</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">connect</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FFEE80\\\">()</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">=&gt;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tconsole</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FAD000\\\">log</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">Stream started.</span><span style=\\\"color: #FF628C\\\">\\\\n</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">);</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #E1EFFF\\\">});</span></span>\\n<span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\trunner</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FAD000\\\">on</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">content</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> content </span><span style=\\\"color: #FAD000\\\">=&gt;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tprocess</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FFEE80\\\">stdout</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FAD000\\\">write</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #9EFFFF\\\">content</span><span style=\\\"color: #E1EFFF\\\">);</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #E1EFFF\\\">});</span></span>\\n<span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\trunner</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FAD000\\\">on</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">end</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FFEE80\\\">()</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">=&gt;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tconsole</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FAD000\\\">log</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #FF628C\\\">\\\\n</span><span style=\\\"color: #A5FF90\\\">Stream ended.</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">);</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #E1EFFF\\\">});</span></span>\\n<span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\trunner</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FAD000\\\">on</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">error</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> error </span><span style=\\\"color: #FAD000\\\">=&gt;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tconsole</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FAD000\\\">error</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">Error:</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> error</span><span style=\\\"color: #E1EFFF\\\">);</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #E1EFFF\\\">});</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">}</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FAD000\\\">main</span><span style=\\\"color: #E1EFFF\\\">();</span></span>\\n<span></span>\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 161,\n          columnNumber: 1\n        }, this),\n        ...{\n          title: 'index.ts'\n        }\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 161,\n        columnNumber: 1\n      }, this), _jsxDEV(_components.pre, {\n        language: \"ts\",\n        code: \"import { PipeI } from '@baseai/core';\\n\\nconst pipeSummarizer = (): PipeI => ({\\n\\tapiKey: 'process.env.LANGBASE_USER_ORG_API_KEY', // Replace with your API key https://langbase.com/docs/api-reference/api-keys\\n\\tname: 'summarizer',\\n\\tdescription: 'A pipe that summarizes content and make it less wordy',\\n\\tstatus: 'public',\\n\\tmodel: 'openai:gpt-4o-mini',\\n\\tstream: true,\\n\\tjson: false,\\n\\tstore: true,\\n\\tmoderate: true,\\n\\ttop_p: 1,\\n\\tmax_tokens: 1000,\\n\\ttemperature: 0.7,\\n\\tpresence_penalty: 1,\\n\\tfrequency_penalty: 1,\\n\\tstop: [],\\n\\ttool_choice: 'auto',\\n\\tparallel_tool_calls: false,\\n\\tmessages: [\\n\\t\\t{ role: 'system', content: `You are a content summarizer. You will summarize content without loosing context into less wordy to the point version.` },\\n\\t],\\n\\tvariables: [],\\n    memory: [],\\n    tools: [],\\n});\\n\\nexport default pipeSummarizer;\\n\",\n        children: _jsxDEV(_components.code, {\n          className: \"language-ts\",\n          children: \"<span><span style=\\\"color: #FF9D00\\\">import</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span><span style=\\\"color: #9EFFFF\\\"> PipeI </span><span style=\\\"color: #E1EFFF\\\">}</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00; font-style: italic\\\">from</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">@baseai/core</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">const</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">pipeSummarizer</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FFEE80\\\">()</span><span style=\\\"color: #FF9D00\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #80FFBB\\\">PipeI</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">=&gt;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">({</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tapiKey</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">process.env.LANGBASE_USER_ORG_API_KEY</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #B362FF; font-style: italic\\\">// Replace with your API key https://langbase.com/docs/api-reference/api-keys</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tname</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">summarizer</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tdescription</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">A pipe that summarizes content and make it less wordy</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tstatus</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">public</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tmodel</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">openai:gpt-4o-mini</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tstream</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">true</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tjson</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">false</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tstore</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">true</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tmoderate</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">true</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\ttop_p</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">1</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tmax_tokens</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">1000</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\ttemperature</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">0</span><span style=\\\"color: #9EFFFF\\\">.</span><span style=\\\"color: #FF628C\\\">7</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tpresence_penalty</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">1</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tfrequency_penalty</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">1</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tstop</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\ttool_choice</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">auto</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tparallel_tool_calls</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">false</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tmessages</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t</span><span style=\\\"color: #E1EFFF\\\">{</span><span style=\\\"color: #9EFFFF\\\"> role</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">system</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> content</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #3AD900\\\">`You are a content summarizer. You will summarize content without loosing context into less wordy to the point version.`</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #E1EFFF\\\">],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tvariables</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">    memory</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">    tools</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[],</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">});</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">export</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">default</span><span style=\\\"color: #9EFFFF\\\"> pipeSummarizer</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 204,\n          columnNumber: 1\n        }, this),\n        ...{\n          title: './baseai/pipes/summarizer.ts'\n        }\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 204,\n        columnNumber: 1\n      }, this)]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 159,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"We have added a user message to the pipe. We will use this message to test the pipe.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 238,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"txt\",\n      code: \"Langbase studio is your playground to build, collaborate, and deploy AI. It allows you to experiment with your pipes in real-time, with real data, store messages, version your prompts, and truly helps you take your idea from building prototypes to deployed in production with LLMOps on usage, cost, and quality.\\n\\n- A complete AI developers platform.\\n- Collaborate: Invite all team members to collaborate on the pipe. Build AI together.\\n- Developers & Stakeholders: All your R&D team, engineering, product, GTM (marketing and sales), literally involve every stakeholder can collaborate on the same pipe.\\nIt's like a powerful version of GitHub x Google Docs for AI. A complete AI developers platform.\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-txt\",\n        children: \"<span><span style=\\\"color: undefined\\\">Langbase studio is your playground to build, collaborate, and deploy AI. It allows you to experiment with your pipes in real-time, with real data, store messages, version your prompts, and truly helps you take your idea from building prototypes to deployed in production with LLMOps on usage, cost, and quality.</span></span>\\n<span><span style=\\\"color: undefined\\\"></span></span>\\n<span><span style=\\\"color: undefined\\\">- A complete AI developers platform.</span></span>\\n<span><span style=\\\"color: undefined\\\">- Collaborate: Invite all team members to collaborate on the pipe. Build AI together.</span></span>\\n<span><span style=\\\"color: undefined\\\">- Developers &amp; Stakeholders: All your R&amp;D team, engineering, product, GTM (marketing and sales), literally involve every stakeholder can collaborate on the same pipe.</span></span>\\n<span><span style=\\\"color: undefined\\\">It&#39;s like a powerful version of GitHub x Google Docs for AI. A complete AI developers platform.</span></span>\\n<span><span style=\\\"color: undefined\\\"></span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 240,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 240,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Since we are using an OpenAI model, your OpenAI key is required. Please create an \", _jsxDEV(_components.code, {\n        children: \".env\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 249,\n        columnNumber: 83\n      }, this), \" file in the root directory using the following command:\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 249,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"bash\",\n      code: \"touch .env\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-bash\",\n        children: \"<span><span style=\\\"color: #FAD000\\\">touch</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">.env</span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 251,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 251,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Once you have created the \", _jsxDEV(_components.code, {\n        children: \".env\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 255,\n        columnNumber: 27\n      }, this), \" file, add your OpenAI key to it.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 255,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"txt\",\n      code: \"OPENAI_API_KEY=\\\"your-open-ai-key\\\" # Add your OpenAI API key in .env file\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-txt\",\n        children: \"<span><span style=\\\"color: undefined\\\">OPENAI_API_KEY=&quot;your-open-ai-key&quot; # Add your OpenAI API key in .env file</span></span>\\n<span><span style=\\\"color: undefined\\\"></span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 257,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 257,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 261,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"step-4-run-the-ai-pipe\",\n      children: \"Step #4: Run the AI pipe\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 263,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Run the \", _jsxDEV(_components.code, {\n        children: \"index.ts\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), \" file using the following command:\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 265,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"bash\",\n      code: \"npx tsx index.ts\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-bash\",\n        children: \"<span><span style=\\\"color: #FAD000\\\">npx</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">tsx</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">index.ts</span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 267,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 267,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"It will prompt the LLM model to summarize the content.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 271,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"txt\",\n      code: \"Langbase Studio is an AI development platform for building, collaborating, and deploying AI pipes. Key features include:\\n\\n- Real-time experimentation with data.\\n- Message storage and prompt versioning.\\n- Collaboration among all team members and stakeholders (R&D, engineering, product, marketing).\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-txt\",\n        children: \"<span><span style=\\\"color: undefined\\\">Langbase Studio is an AI development platform for building, collaborating, and deploying AI pipes. Key features include:</span></span>\\n<span><span style=\\\"color: undefined\\\"></span></span>\\n<span><span style=\\\"color: undefined\\\">- Real-time experimentation with data.</span></span>\\n<span><span style=\\\"color: undefined\\\">- Message storage and prompt versioning.</span></span>\\n<span><span style=\\\"color: undefined\\\">- Collaboration among all team members and stakeholders (R&amp;D, engineering, product, marketing).</span></span>\\n<span><span style=\\\"color: undefined\\\"></span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 273,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 273,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"This all happens locally on your machine and the response should be streamed in your terminal.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 281,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 283,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"step-5-create-a-weather-tool\",\n      children: \"Step #5: Create a weather tool\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 285,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Now that we have successfully created and ran a pipe, let's create a tool. To do it, inside your project, run the following command in the terminal:\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 287,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"bash\",\n      code: \"npx baseai tool\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-bash\",\n        children: \"<span><span style=\\\"color: #FAD000\\\">npx</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">baseai</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">tool</span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 289,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 289,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"The CLI will ask you to provide the name and description of the tool. Let's call it \", _jsxDEV(_components.code, {\n        children: \"getCurrentWeather\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 293,\n        columnNumber: 85\n      }, this), \" and provide a description like \", _jsxDEV(_components.code, {\n        children: \"Get the current weather for a given location\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 293,\n        columnNumber: 136\n      }, this), \".\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 293,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Your tool will be created at \", _jsxDEV(_components.code, {\n        children: \"/baseai/tools/get-current-weather.ts\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 295,\n        columnNumber: 30\n      }, this), \".\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 295,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"step-6-view-and-configure-the-tool\",\n      children: \"Step #6: View and configure the tool\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 297,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Now that we have created a current weather tool, let's open the file and see what we have in there.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 299,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(CodeGroup, {\n      exampleTitle: \"Current weather tool\",\n      title: \"getCurrentWeather tool\",\n      children: [_jsxDEV(_components.pre, {\n        language: \"ts\",\n        code: \"import { ToolI } from '@baseai/core';\\n\\nexport async function getCurrentWeather() {\\n\\t// Your tool logic here\\n}\\n\\nconst getCurrentWeatherTool = (): ToolI => ({\\n\\trun: getCurrentWeather,\\n\\ttype: 'function' as const,\\n\\tfunction: {\\n\\t\\tname: 'getCurrentWeather',\\n\\t\\tdescription: 'Get the current weather for a given location',\\n\\t\\tparameters: {},\\n\\t},\\n});\\n\\nexport default getCurrentWeatherTool;\\n\",\n        children: _jsxDEV(_components.code, {\n          className: \"language-ts\",\n          children: \"<span><span style=\\\"color: #FF9D00\\\">import</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span><span style=\\\"color: #9EFFFF\\\"> ToolI </span><span style=\\\"color: #E1EFFF\\\">}</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00; font-style: italic\\\">from</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">@baseai/core</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">export</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00; font-style: italic\\\">async</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">function</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">getCurrentWeather</span><span style=\\\"color: #E1EFFF\\\">()</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">\\t</span><span style=\\\"color: #B362FF; font-style: italic\\\">// Your tool logic here</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">}</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">const</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">getCurrentWeatherTool</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FFEE80\\\">()</span><span style=\\\"color: #FF9D00\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #80FFBB\\\">ToolI</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">=&gt;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">({</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\trun</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> getCurrentWeather</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\ttype</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">function</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">as</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00; font-style: italic\\\">const</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tfunction</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tname</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">getCurrentWeather</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tdescription</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">Get the current weather for a given location</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tparameters</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{},</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">});</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">export</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">default</span><span style=\\\"color: #9EFFFF\\\"> getCurrentWeatherTool</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 303,\n          columnNumber: 1\n        }, this),\n        ...{\n          title: './baseai/tools/get-current-weather.ts'\n        }\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 303,\n        columnNumber: 1\n      }, this), _jsxDEV(_components.pre, {\n        language: \"ts\",\n        code: \"import { PipeI } from '@baseai/core';\\n\\nconst pipeSummarizer = (): PipeI => ({\\n\\tapiKey: 'process.env.LANGBASE_USER_ORG_API_KEY', // Replace with your API key https://langbase.com/docs/api-reference/api-keys\\n\\tname: 'summarizer',\\n\\tdescription: 'A pipe that summarizes content and make it less wordy',\\n\\tstatus: 'public',\\n\\tmodel: 'openai:gpt-4o-mini',\\n\\tstream: true,\\n\\tjson: false,\\n\\tstore: true,\\n\\tmoderate: true,\\n\\ttop_p: 1,\\n\\tmax_tokens: 1000,\\n\\ttemperature: 0.7,\\n\\tpresence_penalty: 1,\\n\\tfrequency_penalty: 1,\\n\\tstop: [],\\n\\ttool_choice: 'auto',\\n\\tparallel_tool_calls: false,\\n\\tmessages: [\\n\\t\\t{ role: 'system', content: `You are a content summarizer. You will summarize content without loosing context into less wordy to the point version.` },\\n\\t],\\n\\tvariables: [],\\n    memory: [],\\n    tools: [],\\n});\\n\\nexport default pipeSummarizer;\\n\",\n        children: _jsxDEV(_components.code, {\n          className: \"language-ts\",\n          children: \"<span><span style=\\\"color: #FF9D00\\\">import</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span><span style=\\\"color: #9EFFFF\\\"> PipeI </span><span style=\\\"color: #E1EFFF\\\">}</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00; font-style: italic\\\">from</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">@baseai/core</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">const</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">pipeSummarizer</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FFEE80\\\">()</span><span style=\\\"color: #FF9D00\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #80FFBB\\\">PipeI</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">=&gt;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">({</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tapiKey</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">process.env.LANGBASE_USER_ORG_API_KEY</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #B362FF; font-style: italic\\\">// Replace with your API key https://langbase.com/docs/api-reference/api-keys</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tname</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">summarizer</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tdescription</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">A pipe that summarizes content and make it less wordy</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tstatus</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">public</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tmodel</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">openai:gpt-4o-mini</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tstream</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">true</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tjson</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">false</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tstore</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">true</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tmoderate</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">true</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\ttop_p</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">1</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tmax_tokens</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">1000</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\ttemperature</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">0</span><span style=\\\"color: #9EFFFF\\\">.</span><span style=\\\"color: #FF628C\\\">7</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tpresence_penalty</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">1</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tfrequency_penalty</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">1</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tstop</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\ttool_choice</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">auto</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tparallel_tool_calls</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">false</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tmessages</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t</span><span style=\\\"color: #E1EFFF\\\">{</span><span style=\\\"color: #9EFFFF\\\"> role</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">system</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> content</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #3AD900\\\">`You are a content summarizer. You will summarize content without loosing context into less wordy to the point version.`</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #E1EFFF\\\">],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tvariables</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">    memory</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">    tools</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[],</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">});</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">export</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">default</span><span style=\\\"color: #9EFFFF\\\"> pipeSummarizer</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 323,\n          columnNumber: 1\n        }, this),\n        ...{\n          title: './baseai/pipes/summarizer.ts'\n        }\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 323,\n        columnNumber: 1\n      }, this), _jsxDEV(_components.pre, {\n        language: \"ts\",\n        code: \"import 'dotenv/config';\\nimport {Pipe, streamText, getRunner} from '@baseai/core';\\nimport pipeSummarizer from './baseai/pipes/summarizer';\\n\\nconst pipe = new Pipe(pipeSummarizer());\\n\\nconst userMsg = `\\nLangbase studio is your playground to build, collaborate, and deploy AI. It allows you to experiment with your pipes in real-time, with real data, store messages, version your prompts, and truly helps you take your idea from building prototypes to deployed in production with LLMOps on usage, cost, and quality.\\nA complete AI developers platform.\\n- Collaborate: Invite all team members to collaborate on the pipe. Build AI together.\\n- Developers & Stakeholders: All your R&D team, engineering, product, GTM (marketing and sales), literally invlove every stakeholder can collaborate on the same pipe. It's like a powerful version of GitHub x Google Docs for AI. A complete AI developers platform.\\n`;\\n\\nasync function main() {\\n\\tconst {stream} = await streamText({\\n\\t\\tpipe,\\n\\t\\tmessages: [{role: 'user', content: userMsg}],\\n\\t});\\n\\n\\tconst runner = getRunner(stream);\\n\\n\\t// Method 1: Using event listeners\\n\\trunner.on('connect', () => {\\n\\t\\tconsole.log('Stream started.\\\\n');\\n\\t});\\n\\n\\trunner.on('content', content => {\\n\\t\\tprocess.stdout.write(content);\\n\\t});\\n\\n\\trunner.on('end', () => {\\n\\t\\tconsole.log('\\\\nStream ended.');\\n\\t});\\n\\n\\trunner.on('error', error => {\\n\\t\\tconsole.error('Error:', error);\\n\\t});\\n}\\n\\nmain();\\n\",\n        children: _jsxDEV(_components.code, {\n          className: \"language-ts\",\n          children: \"<span><span style=\\\"color: #FF9D00\\\">import</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">dotenv/config</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span><span style=\\\"color: #FF9D00\\\">import</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span><span style=\\\"color: #9EFFFF\\\">Pipe</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> streamText</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> getRunner</span><span style=\\\"color: #E1EFFF\\\">}</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00; font-style: italic\\\">from</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">@baseai/core</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span><span style=\\\"color: #FF9D00\\\">import</span><span style=\\\"color: #9EFFFF\\\"> pipeSummarizer </span><span style=\\\"color: #FF9D00; font-style: italic\\\">from</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">./baseai/pipes/summarizer</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">const</span><span style=\\\"color: #9EFFFF\\\"> pipe </span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">new</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">Pipe</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #FAD000\\\">pipeSummarizer</span><span style=\\\"color: #E1EFFF\\\">());</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">const</span><span style=\\\"color: #9EFFFF\\\"> userMsg </span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #3AD900\\\">`</span></span>\\n<span><span style=\\\"color: #3AD900\\\">Langbase studio is your playground to build, collaborate, and deploy AI. It allows you to experiment with your pipes in real-time, with real data, store messages, version your prompts, and truly helps you take your idea from building prototypes to deployed in production with LLMOps on usage, cost, and quality.</span></span>\\n<span><span style=\\\"color: #3AD900\\\">A complete AI developers platform.</span></span>\\n<span><span style=\\\"color: #3AD900\\\">- Collaborate: Invite all team members to collaborate on the pipe. Build AI together.</span></span>\\n<span><span style=\\\"color: #3AD900\\\">- Developers &amp; Stakeholders: All your R&amp;D team, engineering, product, GTM (marketing and sales), literally invlove every stakeholder can collaborate on the same pipe. It&#39;s like a powerful version of GitHub x Google Docs for AI. A complete AI developers platform.</span></span>\\n<span><span style=\\\"color: #3AD900\\\">`</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00; font-style: italic\\\">async</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">function</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">main</span><span style=\\\"color: #E1EFFF\\\">()</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #FF9D00\\\">const</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span><span style=\\\"color: #9EFFFF\\\">stream</span><span style=\\\"color: #E1EFFF\\\">}</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">await</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">streamText</span><span style=\\\"color: #E1EFFF\\\">({</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tpipe</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tmessages</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[{</span><span style=\\\"color: #9EFFFF\\\">role</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">user</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> content</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> userMsg</span><span style=\\\"color: #E1EFFF\\\">}],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #E1EFFF\\\">});</span></span>\\n<span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #FF9D00\\\">const</span><span style=\\\"color: #9EFFFF\\\"> runner </span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">getRunner</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #9EFFFF\\\">stream</span><span style=\\\"color: #E1EFFF\\\">);</span></span>\\n<span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">\\t</span><span style=\\\"color: #B362FF; font-style: italic\\\">// Method 1: Using event listeners</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\trunner</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FAD000\\\">on</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">connect</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FFEE80\\\">()</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">=&gt;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tconsole</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FAD000\\\">log</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">Stream started.</span><span style=\\\"color: #FF628C\\\">\\\\n</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">);</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #E1EFFF\\\">});</span></span>\\n<span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\trunner</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FAD000\\\">on</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">content</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> content </span><span style=\\\"color: #FAD000\\\">=&gt;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tprocess</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FFEE80\\\">stdout</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FAD000\\\">write</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #9EFFFF\\\">content</span><span style=\\\"color: #E1EFFF\\\">);</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #E1EFFF\\\">});</span></span>\\n<span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\trunner</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FAD000\\\">on</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">end</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FFEE80\\\">()</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">=&gt;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tconsole</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FAD000\\\">log</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #FF628C\\\">\\\\n</span><span style=\\\"color: #A5FF90\\\">Stream ended.</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">);</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #E1EFFF\\\">});</span></span>\\n<span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\trunner</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FAD000\\\">on</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">error</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> error </span><span style=\\\"color: #FAD000\\\">=&gt;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tconsole</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FAD000\\\">error</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">Error:</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> error</span><span style=\\\"color: #E1EFFF\\\">);</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #E1EFFF\\\">});</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">}</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FAD000\\\">main</span><span style=\\\"color: #E1EFFF\\\">();</span></span>\\n<span></span>\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 355,\n          columnNumber: 1\n        }, this),\n        ...{\n          title: 'index.ts'\n        }\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 355,\n        columnNumber: 1\n      }, this)]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 301,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"The \", _jsxDEV(_components.code, {\n        children: \"run\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 400,\n        columnNumber: 5\n      }, this), \" key in the \", _jsxDEV(_components.code, {\n        children: \"getCurrentWeatherTool\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 400,\n        columnNumber: 22\n      }, this), \" object is the function that will be executed when the tool is called. You can write your logic to get the current weather for a given location in the \", _jsxDEV(_components.code, {\n        children: \"getCurrentWeather\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 400,\n        columnNumber: 196\n      }, this), \" function. Let's add a static return for now.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 400,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Here's what the updated \", _jsxDEV(_components.code, {\n        children: \"get-current-weather.ts\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 402,\n        columnNumber: 25\n      }, this), \" file will look like:\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 402,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(CodeGroup, {\n      exampleTitle: \"Current weather tool\",\n      title: \"Configure the weather tool\",\n      children: [_jsxDEV(_components.pre, {\n        language: \"ts\",\n        code: \"import {ToolI} from '@baseai/core';\\n\\nexport async function getCurrentWeather(location: string, unit: string) {\\n\\treturn `Weather in ${location} is 72 degrees ${unit === 'celsius' ? 'Celsius' : 'Fahrenheit'}`;\\n}\\n\\nconst getCurrentWeatherTool = (): ToolI => ({\\n\\trun: getCurrentWeather,\\n\\ttype: 'function' as const,\\n\\tfunction: {\\n\\t\\tname: 'getCurrentWeather',\\n\\t\\tdescription: 'Get the current weather for a given location',\\n\\t\\tparameters: {\\n\\t\\t\\ttype: 'object',\\n\\t\\t\\tproperties: {\\n\\t\\t\\t\\tlocation: {\\n\\t\\t\\t\\t\\ttype: 'string',\\n\\t\\t\\t\\t\\tdescription: 'The city and state, e.g. San Francisco, CA',\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\tunit: {\\n\\t\\t\\t\\t\\ttype: 'string',\\n\\t\\t\\t\\t\\tenum: ['celsius', 'fahrenheit'],\\n\\t\\t\\t\\t},\\n\\t\\t\\t},\\n\\t\\t\\trequired: ['location'],\\n\\t\\t},\\n\\t},\\n});\\n\\nexport default getCurrentWeatherTool;\\n\",\n        children: _jsxDEV(_components.code, {\n          className: \"language-ts\",\n          children: \"<span><span style=\\\"color: #FF9D00\\\">import</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span><span style=\\\"color: #9EFFFF\\\">ToolI</span><span style=\\\"color: #E1EFFF\\\">}</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00; font-style: italic\\\">from</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">@baseai/core</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">export</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00; font-style: italic\\\">async</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">function</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">getCurrentWeather</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #9EFFFF\\\">location</span><span style=\\\"color: #FF9D00\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #80FFBB\\\">string</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> unit</span><span style=\\\"color: #FF9D00\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #80FFBB\\\">string</span><span style=\\\"color: #E1EFFF\\\">)</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #FF9D00\\\">return</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #3AD900\\\">`Weather in </span><span style=\\\"color: #FFEE80\\\">${</span><span style=\\\"color: #9EFFFF\\\">location</span><span style=\\\"color: #FFEE80\\\">}</span><span style=\\\"color: #3AD900\\\"> is 72 degrees </span><span style=\\\"color: #FFEE80\\\">${</span><span style=\\\"color: #9EFFFF\\\">unit </span><span style=\\\"color: #FF9D00\\\">===</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">celsius</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">?</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">Celsius</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">Fahrenheit</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #FFEE80\\\">}</span><span style=\\\"color: #3AD900\\\">`</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">}</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">const</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">getCurrentWeatherTool</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FFEE80\\\">()</span><span style=\\\"color: #FF9D00\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #80FFBB\\\">ToolI</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">=&gt;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">({</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\trun</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> getCurrentWeather</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\ttype</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">function</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">as</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00; font-style: italic\\\">const</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tfunction</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tname</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">getCurrentWeather</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tdescription</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">Get the current weather for a given location</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tparameters</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\ttype</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">object</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\tproperties</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\tlocation</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\t\\ttype</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">string</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\t\\tdescription</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">The city and state, e.g. San Francisco, CA</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\t</span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\tunit</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\t\\ttype</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">string</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\t\\tenum</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">celsius</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">fahrenheit</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\t</span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t</span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\trequired</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">location</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t</span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">});</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">export</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">default</span><span style=\\\"color: #9EFFFF\\\"> getCurrentWeatherTool</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 406,\n          columnNumber: 1\n        }, this),\n        ...{\n          title: './baseai/tools/get-current-weather.ts'\n        }\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 406,\n        columnNumber: 1\n      }, this), _jsxDEV(_components.pre, {\n        language: \"ts\",\n        code: \"import { PipeI } from '@baseai/core';\\n\\nconst pipeSummarizer = (): PipeI => ({\\n\\tapiKey: 'process.env.LANGBASE_USER_ORG_API_KEY', // Replace with your API key https://langbase.com/docs/api-reference/api-keys\\n\\tname: 'summarizer',\\n\\tdescription: 'A pipe that summarizes content and make it less wordy',\\n\\tstatus: 'public',\\n\\tmodel: 'openai:gpt-4o-mini',\\n\\tstream: true,\\n\\tjson: false,\\n\\tstore: true,\\n\\tmoderate: true,\\n\\ttop_p: 1,\\n\\tmax_tokens: 1000,\\n\\ttemperature: 0.7,\\n\\tpresence_penalty: 1,\\n\\tfrequency_penalty: 1,\\n\\tstop: [],\\n\\ttool_choice: 'auto',\\n\\tparallel_tool_calls: false,\\n\\tmessages: [\\n\\t\\t{ role: 'system', content: `You are a content summarizer. You will summarize content without loosing context into less wordy to the point version.` },\\n\\t],\\n\\tvariables: [],\\n    memory: [],\\n    tools: [],\\n});\\n\\nexport default pipeSummarizer;\\n\",\n        children: _jsxDEV(_components.code, {\n          className: \"language-ts\",\n          children: \"<span><span style=\\\"color: #FF9D00\\\">import</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span><span style=\\\"color: #9EFFFF\\\"> PipeI </span><span style=\\\"color: #E1EFFF\\\">}</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00; font-style: italic\\\">from</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">@baseai/core</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">const</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">pipeSummarizer</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FFEE80\\\">()</span><span style=\\\"color: #FF9D00\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #80FFBB\\\">PipeI</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">=&gt;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">({</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tapiKey</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">process.env.LANGBASE_USER_ORG_API_KEY</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #B362FF; font-style: italic\\\">// Replace with your API key https://langbase.com/docs/api-reference/api-keys</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tname</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">summarizer</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tdescription</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">A pipe that summarizes content and make it less wordy</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tstatus</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">public</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tmodel</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">openai:gpt-4o-mini</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tstream</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">true</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tjson</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">false</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tstore</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">true</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tmoderate</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">true</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\ttop_p</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">1</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tmax_tokens</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">1000</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\ttemperature</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">0</span><span style=\\\"color: #9EFFFF\\\">.</span><span style=\\\"color: #FF628C\\\">7</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tpresence_penalty</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">1</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tfrequency_penalty</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">1</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tstop</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\ttool_choice</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">auto</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tparallel_tool_calls</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">false</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tmessages</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t</span><span style=\\\"color: #E1EFFF\\\">{</span><span style=\\\"color: #9EFFFF\\\"> role</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">system</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> content</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #3AD900\\\">`You are a content summarizer. You will summarize content without loosing context into less wordy to the point version.`</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #E1EFFF\\\">],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tvariables</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">    memory</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">    tools</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[],</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">});</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">export</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">default</span><span style=\\\"color: #9EFFFF\\\"> pipeSummarizer</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 439,\n          columnNumber: 1\n        }, this),\n        ...{\n          title: './baseai/pipes/summarizer.ts'\n        }\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 439,\n        columnNumber: 1\n      }, this), _jsxDEV(_components.pre, {\n        language: \"ts\",\n        code: \"import 'dotenv/config';\\nimport {Pipe, streamText, getRunner} from '@baseai/core';\\nimport pipeSummarizer from './baseai/pipes/summarizer';\\n\\nconst pipe = new Pipe(pipeSummarizer());\\n\\nconst userMsg = `\\nLangbase studio is your playground to build, collaborate, and deploy AI. It allows you to experiment with your pipes in real-time, with real data, store messages, version your prompts, and truly helps you take your idea from building prototypes to deployed in production with LLMOps on usage, cost, and quality.\\nA complete AI developers platform.\\n- Collaborate: Invite all team members to collaborate on the pipe. Build AI together.\\n- Developers & Stakeholders: All your R&D team, engineering, product, GTM (marketing and sales), literally invlove every stakeholder can collaborate on the same pipe. It's like a powerful version of GitHub x Google Docs for AI. A complete AI developers platform.\\n`;\\n\\nasync function main() {\\n\\tconst {stream} = await streamText({\\n\\t\\tpipe,\\n\\t\\tmessages: [{role: 'user', content: userMsg}],\\n\\t});\\n\\n\\tconst runner = getRunner(stream);\\n\\n\\t// Method 1: Using event listeners\\n\\trunner.on('connect', () => {\\n\\t\\tconsole.log('Stream started.\\\\n');\\n\\t});\\n\\n\\trunner.on('content', content => {\\n\\t\\tprocess.stdout.write(content);\\n\\t});\\n\\n\\trunner.on('end', () => {\\n\\t\\tconsole.log('\\\\nStream ended.');\\n\\t});\\n\\n\\trunner.on('error', error => {\\n\\t\\tconsole.error('Error:', error);\\n\\t});\\n}\\n\\nmain();\\n\",\n        children: _jsxDEV(_components.code, {\n          className: \"language-ts\",\n          children: \"<span><span style=\\\"color: #FF9D00\\\">import</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">dotenv/config</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span><span style=\\\"color: #FF9D00\\\">import</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span><span style=\\\"color: #9EFFFF\\\">Pipe</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> streamText</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> getRunner</span><span style=\\\"color: #E1EFFF\\\">}</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00; font-style: italic\\\">from</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">@baseai/core</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span><span style=\\\"color: #FF9D00\\\">import</span><span style=\\\"color: #9EFFFF\\\"> pipeSummarizer </span><span style=\\\"color: #FF9D00; font-style: italic\\\">from</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">./baseai/pipes/summarizer</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">const</span><span style=\\\"color: #9EFFFF\\\"> pipe </span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">new</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">Pipe</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #FAD000\\\">pipeSummarizer</span><span style=\\\"color: #E1EFFF\\\">());</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">const</span><span style=\\\"color: #9EFFFF\\\"> userMsg </span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #3AD900\\\">`</span></span>\\n<span><span style=\\\"color: #3AD900\\\">Langbase studio is your playground to build, collaborate, and deploy AI. It allows you to experiment with your pipes in real-time, with real data, store messages, version your prompts, and truly helps you take your idea from building prototypes to deployed in production with LLMOps on usage, cost, and quality.</span></span>\\n<span><span style=\\\"color: #3AD900\\\">A complete AI developers platform.</span></span>\\n<span><span style=\\\"color: #3AD900\\\">- Collaborate: Invite all team members to collaborate on the pipe. Build AI together.</span></span>\\n<span><span style=\\\"color: #3AD900\\\">- Developers &amp; Stakeholders: All your R&amp;D team, engineering, product, GTM (marketing and sales), literally invlove every stakeholder can collaborate on the same pipe. It&#39;s like a powerful version of GitHub x Google Docs for AI. A complete AI developers platform.</span></span>\\n<span><span style=\\\"color: #3AD900\\\">`</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00; font-style: italic\\\">async</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">function</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">main</span><span style=\\\"color: #E1EFFF\\\">()</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #FF9D00\\\">const</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span><span style=\\\"color: #9EFFFF\\\">stream</span><span style=\\\"color: #E1EFFF\\\">}</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">await</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">streamText</span><span style=\\\"color: #E1EFFF\\\">({</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tpipe</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tmessages</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[{</span><span style=\\\"color: #9EFFFF\\\">role</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">user</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> content</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> userMsg</span><span style=\\\"color: #E1EFFF\\\">}],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #E1EFFF\\\">});</span></span>\\n<span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #FF9D00\\\">const</span><span style=\\\"color: #9EFFFF\\\"> runner </span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">getRunner</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #9EFFFF\\\">stream</span><span style=\\\"color: #E1EFFF\\\">);</span></span>\\n<span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">\\t</span><span style=\\\"color: #B362FF; font-style: italic\\\">// Method 1: Using event listeners</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\trunner</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FAD000\\\">on</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">connect</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FFEE80\\\">()</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">=&gt;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tconsole</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FAD000\\\">log</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">Stream started.</span><span style=\\\"color: #FF628C\\\">\\\\n</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">);</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #E1EFFF\\\">});</span></span>\\n<span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\trunner</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FAD000\\\">on</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">content</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> content </span><span style=\\\"color: #FAD000\\\">=&gt;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tprocess</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FFEE80\\\">stdout</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FAD000\\\">write</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #9EFFFF\\\">content</span><span style=\\\"color: #E1EFFF\\\">);</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #E1EFFF\\\">});</span></span>\\n<span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\trunner</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FAD000\\\">on</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">end</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FFEE80\\\">()</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">=&gt;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tconsole</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FAD000\\\">log</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #FF628C\\\">\\\\n</span><span style=\\\"color: #A5FF90\\\">Stream ended.</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">);</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #E1EFFF\\\">});</span></span>\\n<span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\trunner</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FAD000\\\">on</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">error</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> error </span><span style=\\\"color: #FAD000\\\">=&gt;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tconsole</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FAD000\\\">error</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">Error:</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> error</span><span style=\\\"color: #E1EFFF\\\">);</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #E1EFFF\\\">});</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">}</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FAD000\\\">main</span><span style=\\\"color: #E1EFFF\\\">();</span></span>\\n<span></span>\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 471,\n          columnNumber: 1\n        }, this),\n        ...{\n          title: 'index.ts'\n        }\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 471,\n        columnNumber: 1\n      }, this)]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 404,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"You can see that I have also added parameters to the \", _jsxDEV(_components.code, {\n        children: \"getCurrentWeather\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 516,\n        columnNumber: 54\n      }, this), \" function. The LLM will give values to these parameters when it calls the tool.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 516,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 518,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"step-7-integrate-the-tool-in-the-pipe\",\n      children: \"Step #7: Integrate the tool in the pipe\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 520,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Now that we have created a tool, let's integrate it into the pipe. Open the pipe file, import the tool at the top and call it as a function in the \", _jsxDEV(_components.code, {\n        children: \"tools\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 522,\n        columnNumber: 148\n      }, this), \" array.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 522,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(CodeGroup, {\n      exampleTitle: \"Current weather tool\",\n      title: \"Configure the weather tool\",\n      children: [_jsxDEV(_components.pre, {\n        language: \"ts\",\n        code: \"import { PipeI } from '@baseai/core';\\nimport getCurrentWeatherTool from '../tools/get-current-weather';\\n\\nconst pipeSummarizer = (): PipeI => ({\\n\\tapiKey: 'process.env.LANGBASE_USER_ORG_API_KEY', // Replace with your API key https://langbase.com/docs/api-reference/api-keys\\n\\tname: 'summarizer',\\n\\tdescription: 'A pipe that summarizes content and make it less wordy',\\n\\tstatus: 'public',\\n\\tmodel: 'openai:gpt-4o-mini',\\n\\tstream: true,\\n\\tjson: false,\\n\\tstore: true,\\n\\tmoderate: true,\\n\\ttop_p: 1,\\n\\tmax_tokens: 1000,\\n\\ttemperature: 0.7,\\n\\tpresence_penalty: 1,\\n\\tfrequency_penalty: 1,\\n\\tstop: [],\\n\\ttool_choice: 'auto',\\n\\tparallel_tool_calls: false,\\n\\tmessages: [\\n\\t\\t{ role: 'system', content: `You are a content summarizer. You will summarize content without loosing context into less wordy to the point version.` },\\n\\t],\\n\\tvariables: [],\\n    memory: [],\\n    tools: [getCurrentWeatherTool()]\\n});\\n\\nexport default pipeSummarizer;\\n\",\n        children: _jsxDEV(_components.code, {\n          className: \"language-ts\",\n          children: \"<span><span style=\\\"color: #FF9D00\\\">import</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span><span style=\\\"color: #9EFFFF\\\"> PipeI </span><span style=\\\"color: #E1EFFF\\\">}</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00; font-style: italic\\\">from</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">@baseai/core</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span><span style=\\\"color: #FF9D00\\\">import</span><span style=\\\"color: #9EFFFF\\\"> getCurrentWeatherTool </span><span style=\\\"color: #FF9D00; font-style: italic\\\">from</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">../tools/get-current-weather</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">const</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">pipeSummarizer</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FFEE80\\\">()</span><span style=\\\"color: #FF9D00\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #80FFBB\\\">PipeI</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">=&gt;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">({</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tapiKey</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">process.env.LANGBASE_USER_ORG_API_KEY</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #B362FF; font-style: italic\\\">// Replace with your API key https://langbase.com/docs/api-reference/api-keys</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tname</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">summarizer</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tdescription</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">A pipe that summarizes content and make it less wordy</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tstatus</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">public</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tmodel</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">openai:gpt-4o-mini</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tstream</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">true</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tjson</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">false</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tstore</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">true</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tmoderate</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">true</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\ttop_p</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">1</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tmax_tokens</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">1000</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\ttemperature</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">0</span><span style=\\\"color: #9EFFFF\\\">.</span><span style=\\\"color: #FF628C\\\">7</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tpresence_penalty</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">1</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tfrequency_penalty</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">1</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tstop</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\ttool_choice</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">auto</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tparallel_tool_calls</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">false</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tmessages</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t</span><span style=\\\"color: #E1EFFF\\\">{</span><span style=\\\"color: #9EFFFF\\\"> role</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">system</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> content</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #3AD900\\\">`You are a content summarizer. You will summarize content without loosing context into less wordy to the point version.`</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #E1EFFF\\\">],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tvariables</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">    memory</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">    tools</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[</span><span style=\\\"color: #FAD000\\\">getCurrentWeatherTool</span><span style=\\\"color: #E1EFFF\\\">()]</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">});</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">export</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">default</span><span style=\\\"color: #9EFFFF\\\"> pipeSummarizer</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 527,\n          columnNumber: 1\n        }, this),\n        ...{\n          title: './baseai/pipes/summarizer.ts'\n        }\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 527,\n        columnNumber: 1\n      }, this), _jsxDEV(_components.pre, {\n        language: \"ts\",\n        code: \"import {ToolI} from '@baseai/core';\\n\\nexport async function getCurrentWeather(location: string, unit: string) {\\n\\treturn `Weather in ${location} is 72 degrees ${unit === 'celsius' ? 'Celsius' : 'Fahrenheit'}`;\\n}\\n\\nconst getCurrentWeatherTool = (): ToolI => ({\\n\\trun: getCurrentWeather,\\n\\ttype: 'function' as const,\\n\\tfunction: {\\n\\t\\tname: 'getCurrentWeather',\\n\\t\\tdescription: 'Get the current weather for a given location',\\n\\t\\tparameters: {\\n\\t\\t\\ttype: 'object',\\n\\t\\t\\tproperties: {\\n\\t\\t\\t\\tlocation: {\\n\\t\\t\\t\\t\\ttype: 'string',\\n\\t\\t\\t\\t\\tdescription: 'The city and state, e.g. San Francisco, CA',\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\tunit: {\\n\\t\\t\\t\\t\\ttype: 'string',\\n\\t\\t\\t\\t\\tenum: ['celsius', 'fahrenheit'],\\n\\t\\t\\t\\t},\\n\\t\\t\\t},\\n\\t\\t\\trequired: ['location'],\\n\\t\\t},\\n\\t},\\n});\\n\\nexport default getCurrentWeatherTool;\\n\",\n        children: _jsxDEV(_components.code, {\n          className: \"language-ts\",\n          children: \"<span><span style=\\\"color: #FF9D00\\\">import</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span><span style=\\\"color: #9EFFFF\\\">ToolI</span><span style=\\\"color: #E1EFFF\\\">}</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00; font-style: italic\\\">from</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">@baseai/core</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">export</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00; font-style: italic\\\">async</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">function</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">getCurrentWeather</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #9EFFFF\\\">location</span><span style=\\\"color: #FF9D00\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #80FFBB\\\">string</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> unit</span><span style=\\\"color: #FF9D00\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #80FFBB\\\">string</span><span style=\\\"color: #E1EFFF\\\">)</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #FF9D00\\\">return</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #3AD900\\\">`Weather in </span><span style=\\\"color: #FFEE80\\\">${</span><span style=\\\"color: #9EFFFF\\\">location</span><span style=\\\"color: #FFEE80\\\">}</span><span style=\\\"color: #3AD900\\\"> is 72 degrees </span><span style=\\\"color: #FFEE80\\\">${</span><span style=\\\"color: #9EFFFF\\\">unit </span><span style=\\\"color: #FF9D00\\\">===</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">celsius</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">?</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">Celsius</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">Fahrenheit</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #FFEE80\\\">}</span><span style=\\\"color: #3AD900\\\">`</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">}</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">const</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">getCurrentWeatherTool</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FFEE80\\\">()</span><span style=\\\"color: #FF9D00\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #80FFBB\\\">ToolI</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">=&gt;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">({</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\trun</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> getCurrentWeather</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\ttype</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">function</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">as</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00; font-style: italic\\\">const</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tfunction</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tname</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">getCurrentWeather</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tdescription</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">Get the current weather for a given location</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tparameters</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\ttype</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">object</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\tproperties</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\tlocation</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\t\\ttype</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">string</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\t\\tdescription</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">The city and state, e.g. San Francisco, CA</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\t</span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\tunit</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\t\\ttype</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">string</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\t\\tenum</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">celsius</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">fahrenheit</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\t</span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t</span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\trequired</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">location</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t</span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">});</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">export</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">default</span><span style=\\\"color: #9EFFFF\\\"> getCurrentWeatherTool</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 560,\n          columnNumber: 1\n        }, this),\n        ...{\n          title: './baseai/tools/get-current-weather.ts'\n        }\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 560,\n        columnNumber: 1\n      }, this), _jsxDEV(_components.pre, {\n        language: \"ts\",\n        code: \"import 'dotenv/config';\\nimport {Pipe, streamText, getRunner} from '@baseai/core';\\nimport pipeSummarizer from './baseai/pipes/summarizer';\\n\\nconst pipe = new Pipe(pipeSummarizer());\\n\\nconst userMsg = `\\nLangbase studio is your playground to build, collaborate, and deploy AI. It allows you to experiment with your pipes in real-time, with real data, store messages, version your prompts, and truly helps you take your idea from building prototypes to deployed in production with LLMOps on usage, cost, and quality.\\nA complete AI developers platform.\\n- Collaborate: Invite all team members to collaborate on the pipe. Build AI together.\\n- Developers & Stakeholders: All your R&D team, engineering, product, GTM (marketing and sales), literally invlove every stakeholder can collaborate on the same pipe. It's like a powerful version of GitHub x Google Docs for AI. A complete AI developers platform.\\n`;\\n\\nasync function main() {\\n\\tconst {stream} = await streamText({\\n\\t\\tpipe,\\n\\t\\tmessages: [{role: 'user', content: userMsg}],\\n\\t});\\n\\n\\tconst runner = getRunner(stream);\\n\\n\\t// Method 1: Using event listeners\\n\\trunner.on('connect', () => {\\n\\t\\tconsole.log('Stream started.\\\\n');\\n\\t});\\n\\n\\trunner.on('content', content => {\\n\\t\\tprocess.stdout.write(content);\\n\\t});\\n\\n\\trunner.on('end', () => {\\n\\t\\tconsole.log('\\\\nStream ended.');\\n\\t});\\n\\n\\trunner.on('error', error => {\\n\\t\\tconsole.error('Error:', error);\\n\\t});\\n}\\n\\nmain();\\n\",\n        children: _jsxDEV(_components.code, {\n          className: \"language-ts\",\n          children: \"<span><span style=\\\"color: #FF9D00\\\">import</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">dotenv/config</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span><span style=\\\"color: #FF9D00\\\">import</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span><span style=\\\"color: #9EFFFF\\\">Pipe</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> streamText</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> getRunner</span><span style=\\\"color: #E1EFFF\\\">}</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00; font-style: italic\\\">from</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">@baseai/core</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span><span style=\\\"color: #FF9D00\\\">import</span><span style=\\\"color: #9EFFFF\\\"> pipeSummarizer </span><span style=\\\"color: #FF9D00; font-style: italic\\\">from</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">./baseai/pipes/summarizer</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">const</span><span style=\\\"color: #9EFFFF\\\"> pipe </span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">new</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">Pipe</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #FAD000\\\">pipeSummarizer</span><span style=\\\"color: #E1EFFF\\\">());</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">const</span><span style=\\\"color: #9EFFFF\\\"> userMsg </span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #3AD900\\\">`</span></span>\\n<span><span style=\\\"color: #3AD900\\\">Langbase studio is your playground to build, collaborate, and deploy AI. It allows you to experiment with your pipes in real-time, with real data, store messages, version your prompts, and truly helps you take your idea from building prototypes to deployed in production with LLMOps on usage, cost, and quality.</span></span>\\n<span><span style=\\\"color: #3AD900\\\">A complete AI developers platform.</span></span>\\n<span><span style=\\\"color: #3AD900\\\">- Collaborate: Invite all team members to collaborate on the pipe. Build AI together.</span></span>\\n<span><span style=\\\"color: #3AD900\\\">- Developers &amp; Stakeholders: All your R&amp;D team, engineering, product, GTM (marketing and sales), literally invlove every stakeholder can collaborate on the same pipe. It&#39;s like a powerful version of GitHub x Google Docs for AI. A complete AI developers platform.</span></span>\\n<span><span style=\\\"color: #3AD900\\\">`</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00; font-style: italic\\\">async</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">function</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">main</span><span style=\\\"color: #E1EFFF\\\">()</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #FF9D00\\\">const</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span><span style=\\\"color: #9EFFFF\\\">stream</span><span style=\\\"color: #E1EFFF\\\">}</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">await</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">streamText</span><span style=\\\"color: #E1EFFF\\\">({</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tpipe</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tmessages</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[{</span><span style=\\\"color: #9EFFFF\\\">role</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">user</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> content</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> userMsg</span><span style=\\\"color: #E1EFFF\\\">}],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #E1EFFF\\\">});</span></span>\\n<span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #FF9D00\\\">const</span><span style=\\\"color: #9EFFFF\\\"> runner </span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">getRunner</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #9EFFFF\\\">stream</span><span style=\\\"color: #E1EFFF\\\">);</span></span>\\n<span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">\\t</span><span style=\\\"color: #B362FF; font-style: italic\\\">// Method 1: Using event listeners</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\trunner</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FAD000\\\">on</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">connect</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FFEE80\\\">()</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">=&gt;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tconsole</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FAD000\\\">log</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">Stream started.</span><span style=\\\"color: #FF628C\\\">\\\\n</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">);</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #E1EFFF\\\">});</span></span>\\n<span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\trunner</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FAD000\\\">on</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">content</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> content </span><span style=\\\"color: #FAD000\\\">=&gt;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tprocess</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FFEE80\\\">stdout</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FAD000\\\">write</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #9EFFFF\\\">content</span><span style=\\\"color: #E1EFFF\\\">);</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #E1EFFF\\\">});</span></span>\\n<span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\trunner</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FAD000\\\">on</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">end</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FFEE80\\\">()</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">=&gt;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tconsole</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FAD000\\\">log</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #FF628C\\\">\\\\n</span><span style=\\\"color: #A5FF90\\\">Stream ended.</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">);</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #E1EFFF\\\">});</span></span>\\n<span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\trunner</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FAD000\\\">on</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">error</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> error </span><span style=\\\"color: #FAD000\\\">=&gt;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tconsole</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FAD000\\\">error</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">Error:</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> error</span><span style=\\\"color: #E1EFFF\\\">);</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #E1EFFF\\\">});</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">}</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FAD000\\\">main</span><span style=\\\"color: #E1EFFF\\\">();</span></span>\\n<span></span>\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 593,\n          columnNumber: 1\n        }, this),\n        ...{\n          title: 'index.ts'\n        }\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 593,\n        columnNumber: 1\n      }, this)]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 525,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 638,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"step-8-run-the-pipe\",\n      children: \"Step #8: Run the pipe\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 640,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Let's update the user message to the following. This time instead of streaming, let's generate text from LLM.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 642,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"txt\",\n      code: \"What's the weather in San Francisco?\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-txt\",\n        children: \"<span><span style=\\\"color: undefined\\\">What&#39;s the weather in San Francisco?</span></span>\\n<span><span style=\\\"color: undefined\\\"></span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 644,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 644,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(CodeGroup, {\n      exampleTitle: \"Current weather tool\",\n      title: \"Configure the weather tool\",\n      children: [_jsxDEV(_components.pre, {\n        language: \"ts\",\n        code: \"import 'dotenv/config';\\nimport {Pipe, generateText} from '@baseai/core';\\nimport pipeSummarizer from './baseai/pipes/summarizer';\\n\\nconst pipe = new Pipe(pipeSummarizer());\\n\\nconst userMsg = `What's the weather in San Francisco?`;\\n\\nasync function main() {\\n\\tconst response = await generateText({\\n\\t\\tpipe,\\n\\t\\tmessages: [{role: 'user', content: userMsg}],\\n\\t});\\n\\n\\tconsole.log(response.completion);\\n}\\n\\nmain();\\n\",\n        children: _jsxDEV(_components.code, {\n          className: \"language-ts\",\n          children: \"<span><span style=\\\"color: #FF9D00\\\">import</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">dotenv/config</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span><span style=\\\"color: #FF9D00\\\">import</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span><span style=\\\"color: #9EFFFF\\\">Pipe</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> generateText</span><span style=\\\"color: #E1EFFF\\\">}</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00; font-style: italic\\\">from</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">@baseai/core</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span><span style=\\\"color: #FF9D00\\\">import</span><span style=\\\"color: #9EFFFF\\\"> pipeSummarizer </span><span style=\\\"color: #FF9D00; font-style: italic\\\">from</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">./baseai/pipes/summarizer</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">const</span><span style=\\\"color: #9EFFFF\\\"> pipe </span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">new</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">Pipe</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #FAD000\\\">pipeSummarizer</span><span style=\\\"color: #E1EFFF\\\">());</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">const</span><span style=\\\"color: #9EFFFF\\\"> userMsg </span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #3AD900\\\">`What&#39;s the weather in San Francisco?`</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00; font-style: italic\\\">async</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">function</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">main</span><span style=\\\"color: #E1EFFF\\\">()</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #FF9D00\\\">const</span><span style=\\\"color: #9EFFFF\\\"> response </span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">await</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">generateText</span><span style=\\\"color: #E1EFFF\\\">({</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tpipe</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tmessages</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[{</span><span style=\\\"color: #9EFFFF\\\">role</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">user</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> content</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> userMsg</span><span style=\\\"color: #E1EFFF\\\">}],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #E1EFFF\\\">});</span></span>\\n<span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tconsole</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FAD000\\\">log</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #9EFFFF\\\">response</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FAD000\\\">completion</span><span style=\\\"color: #E1EFFF\\\">);</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">}</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FAD000\\\">main</span><span style=\\\"color: #E1EFFF\\\">();</span></span>\\n<span></span>\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 650,\n          columnNumber: 1\n        }, this),\n        ...{\n          title: 'index.ts'\n        }\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 650,\n        columnNumber: 1\n      }, this), _jsxDEV(_components.pre, {\n        language: \"ts\",\n        code: \"import { PipeI } from '@baseai/core';\\nimport getCurrentWeatherTool from '../tools/get-current-weather';\\n\\nconst pipeSummarizer = (): PipeI => ({\\n\\tapiKey: 'process.env.LANGBASE_USER_ORG_API_KEY', // Replace with your API key https://langbase.com/docs/api-reference/api-keys\\n\\tname: 'summarizer',\\n\\tdescription: 'A pipe that summarizes content and make it less wordy',\\n\\tstatus: 'public',\\n\\tmodel: 'openai:gpt-4o-mini',\\n\\tstream: true,\\n\\tjson: false,\\n\\tstore: true,\\n\\tmoderate: true,\\n\\ttop_p: 1,\\n\\tmax_tokens: 1000,\\n\\ttemperature: 0.7,\\n\\tpresence_penalty: 1,\\n\\tfrequency_penalty: 1,\\n\\tstop: [],\\n\\ttool_choice: 'auto',\\n\\tparallel_tool_calls: false,\\n\\tmessages: [\\n\\t\\t{ role: 'system', content: `You are a content summarizer. You will summarize content without loosing context into less wordy to the point version.` },\\n\\t],\\n\\tvariables: [],\\n    memory: [],\\n    tools: [getCurrentWeatherTool()]\\n});\\n\\nexport default pipeSummarizer;\\n\",\n        children: _jsxDEV(_components.code, {\n          className: \"language-ts\",\n          children: \"<span><span style=\\\"color: #FF9D00\\\">import</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span><span style=\\\"color: #9EFFFF\\\"> PipeI </span><span style=\\\"color: #E1EFFF\\\">}</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00; font-style: italic\\\">from</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">@baseai/core</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span><span style=\\\"color: #FF9D00\\\">import</span><span style=\\\"color: #9EFFFF\\\"> getCurrentWeatherTool </span><span style=\\\"color: #FF9D00; font-style: italic\\\">from</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">../tools/get-current-weather</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">const</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">pipeSummarizer</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FFEE80\\\">()</span><span style=\\\"color: #FF9D00\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #80FFBB\\\">PipeI</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">=&gt;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">({</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tapiKey</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">process.env.LANGBASE_USER_ORG_API_KEY</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #B362FF; font-style: italic\\\">// Replace with your API key https://langbase.com/docs/api-reference/api-keys</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tname</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">summarizer</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tdescription</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">A pipe that summarizes content and make it less wordy</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tstatus</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">public</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tmodel</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">openai:gpt-4o-mini</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tstream</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">true</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tjson</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">false</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tstore</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">true</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tmoderate</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">true</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\ttop_p</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">1</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tmax_tokens</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">1000</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\ttemperature</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">0</span><span style=\\\"color: #9EFFFF\\\">.</span><span style=\\\"color: #FF628C\\\">7</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tpresence_penalty</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">1</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tfrequency_penalty</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">1</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tstop</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\ttool_choice</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">auto</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tparallel_tool_calls</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">false</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tmessages</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t</span><span style=\\\"color: #E1EFFF\\\">{</span><span style=\\\"color: #9EFFFF\\\"> role</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">system</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> content</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #3AD900\\\">`You are a content summarizer. You will summarize content without loosing context into less wordy to the point version.`</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #E1EFFF\\\">],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tvariables</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">    memory</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">    tools</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[</span><span style=\\\"color: #FAD000\\\">getCurrentWeatherTool</span><span style=\\\"color: #E1EFFF\\\">()]</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">});</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">export</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">default</span><span style=\\\"color: #9EFFFF\\\"> pipeSummarizer</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 671,\n          columnNumber: 1\n        }, this),\n        ...{\n          title: './baseai/pipes/summarizer.ts'\n        }\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 671,\n        columnNumber: 1\n      }, this), _jsxDEV(_components.pre, {\n        language: \"ts\",\n        code: \"import {ToolI} from '@baseai/core';\\n\\nexport async function getCurrentWeather(location: string, unit: string) {\\n\\treturn `Weather in ${location} is 72 degrees ${unit === 'celsius' ? 'Celsius' : 'Fahrenheit'}`;\\n}\\n\\nconst getCurrentWeatherTool = (): ToolI => ({\\n\\trun: getCurrentWeather,\\n\\ttype: 'function' as const,\\n\\tfunction: {\\n\\t\\tname: 'getCurrentWeather',\\n\\t\\tdescription: 'Get the current weather for a given location',\\n\\t\\tparameters: {\\n\\t\\t\\ttype: 'object',\\n\\t\\t\\tproperties: {\\n\\t\\t\\t\\tlocation: {\\n\\t\\t\\t\\t\\ttype: 'string',\\n\\t\\t\\t\\t\\tdescription: 'The city and state, e.g. San Francisco, CA',\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\tunit: {\\n\\t\\t\\t\\t\\ttype: 'string',\\n\\t\\t\\t\\t\\tenum: ['celsius', 'fahrenheit'],\\n\\t\\t\\t\\t},\\n\\t\\t\\t},\\n\\t\\t\\trequired: ['location'],\\n\\t\\t},\\n\\t},\\n});\\n\\nexport default getCurrentWeatherTool;\\n\",\n        children: _jsxDEV(_components.code, {\n          className: \"language-ts\",\n          children: \"<span><span style=\\\"color: #FF9D00\\\">import</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span><span style=\\\"color: #9EFFFF\\\">ToolI</span><span style=\\\"color: #E1EFFF\\\">}</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00; font-style: italic\\\">from</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">@baseai/core</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">export</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00; font-style: italic\\\">async</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">function</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">getCurrentWeather</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #9EFFFF\\\">location</span><span style=\\\"color: #FF9D00\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #80FFBB\\\">string</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> unit</span><span style=\\\"color: #FF9D00\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #80FFBB\\\">string</span><span style=\\\"color: #E1EFFF\\\">)</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #FF9D00\\\">return</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #3AD900\\\">`Weather in </span><span style=\\\"color: #FFEE80\\\">${</span><span style=\\\"color: #9EFFFF\\\">location</span><span style=\\\"color: #FFEE80\\\">}</span><span style=\\\"color: #3AD900\\\"> is 72 degrees </span><span style=\\\"color: #FFEE80\\\">${</span><span style=\\\"color: #9EFFFF\\\">unit </span><span style=\\\"color: #FF9D00\\\">===</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">celsius</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">?</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">Celsius</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">Fahrenheit</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #FFEE80\\\">}</span><span style=\\\"color: #3AD900\\\">`</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">}</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">const</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">getCurrentWeatherTool</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FFEE80\\\">()</span><span style=\\\"color: #FF9D00\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #80FFBB\\\">ToolI</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">=&gt;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">({</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\trun</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> getCurrentWeather</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\ttype</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">function</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">as</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00; font-style: italic\\\">const</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tfunction</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tname</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">getCurrentWeather</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tdescription</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">Get the current weather for a given location</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tparameters</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\ttype</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">object</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\tproperties</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\tlocation</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\t\\ttype</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">string</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\t\\tdescription</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">The city and state, e.g. San Francisco, CA</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\t</span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\tunit</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\t\\ttype</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">string</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\t\\tenum</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">celsius</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">fahrenheit</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\t</span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t</span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\trequired</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">location</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t</span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">});</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">export</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">default</span><span style=\\\"color: #9EFFFF\\\"> getCurrentWeatherTool</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 704,\n          columnNumber: 1\n        }, this),\n        ...{\n          title: './baseai/tools/get-current-weather.ts'\n        }\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 704,\n        columnNumber: 1\n      }, this)]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 648,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Run the \", _jsxDEV(_components.code, {\n        children: \"index.ts\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 739,\n        columnNumber: 9\n      }, this), \" file using the following command:\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 739,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"bash\",\n      code: \"npx tsx index.ts\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-bash\",\n        children: \"<span><span style=\\\"color: #FAD000\\\">npx</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">tsx</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">index.ts</span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 741,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 741,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"It will prompt the LLM model to get answers to your weather query.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 745,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"txt\",\n      code: \"The current weather in San Francisco is 72 degrees Fahrenheit.\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-txt\",\n        children: \"<span><span style=\\\"color: undefined\\\">The current weather in San Francisco is 72 degrees Fahrenheit.</span></span>\\n<span><span style=\\\"color: undefined\\\"></span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 747,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 747,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Earlier in step no. 6, we added 72 degrees Fahrenheit as a static return of \", _jsxDEV(_components.code, {\n        children: \"getCurrentWeather\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 751,\n        columnNumber: 77\n      }, this), \" function. You can see this value was sent to the LLM and it used it to generate the response.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 751,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"This all happens locally on your machine and the response should be streamed in your terminal.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 753,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"step-9-create-a-memory\",\n      children: \"Step #9: Create a memory\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 756,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Now that we have successfully created and ran a pipe with a tool, let's create a memory. To do it, inside your project, run the following command in the terminal:\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 758,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"bash\",\n      code: \"npx baseai memory\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-bash\",\n        children: \"<span><span style=\\\"color: #FAD000\\\">npx</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">baseai</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">memory</span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 760,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 760,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"The CLI will ask you to provide the name and description of the memory. Let's call it \", _jsxDEV(_components.code, {\n        children: \"chat-with-docs\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 764,\n        columnNumber: 87\n      }, this), \" and provide a description like \", _jsxDEV(_components.code, {\n        children: \"A memory containing Langbase Pipe FAQs docs\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 764,\n        columnNumber: 135\n      }, this), \".\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 764,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Your memory will be created at \", _jsxDEV(_components.code, {\n        children: \"baseai/memory/chat-with-docs\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 766,\n        columnNumber: 32\n      }, this), \".\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 766,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"step-10-add-documents-to-the-memory\",\n      children: \"Step #10: Add documents to the memory\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 768,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Save \", _jsxDEV(_components.a, {\n        href: \"https://langbase.com/docs/pipe/faqs\",\n        children: \"Pipe FAQs\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 770,\n        columnNumber: 6\n      }, this), \" page as a \", _jsxDEV(_components.code, {\n        children: \".pdf\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 770,\n        columnNumber: 65\n      }, this), \" or \", _jsxDEV(_components.code, {\n        children: \".txt\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 770,\n        columnNumber: 75\n      }, this), \" and add it to the memory documents directory at \", _jsxDEV(_components.code, {\n        children: \"baseai/memory/chat-with-docs/documents\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 770,\n        columnNumber: 130\n      }, this), \".\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 770,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"step-11-embed-the-memory\",\n      children: \"Step #11: Embed the memory\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 772,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Now that we have added documents to the memory, let's embed the memory to generate embeddings for the documents. Open the terminal and run the following command:\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 774,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"bash\",\n      code: \"npx baseai embed -m chat-with-docs\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-bash\",\n        children: \"<span><span style=\\\"color: #FAD000\\\">npx</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">baseai</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">embed</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">-m</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">chat-with-docs</span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 776,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 776,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(Note, {\n      children: _jsxDEV(_components.p, {\n        children: [\"Please make sure to add \", _jsxDEV(_components.code, {\n          children: \"OPENAI_API_KEY\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 781,\n          columnNumber: 25\n        }, this), \" to \", _jsxDEV(_components.code, {\n          children: \".env\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 781,\n          columnNumber: 45\n        }, this), \" file in the root of your project. This is required to generate embeddings for the documents in the memory.\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 781,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 780,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"It will generate embeddings for the documents and create an index for search. Your memory is now ready to be used with a Pipe.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 784,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"step-12-integrate-the-memory-with-the-pipe\",\n      children: \"Step #12: Integrate the memory with the pipe\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 786,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Open the pipe file, import the memory at the top and call it as a function in the \", _jsxDEV(_components.code, {\n        children: \"memory\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 788,\n        columnNumber: 83\n      }, this), \" array.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 788,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Note that we have changed the system prompt and also included a RAG prompt to provide context for the answers.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 790,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(CodeGroup, {\n      exampleTitle: \"Chat with docs RAG\",\n      title: \"Integrate memory with the pipe\",\n      children: [_jsxDEV(_components.pre, {\n        language: \"ts\",\n        code: \"import { PipeI } from '@baseai/core';\\nimport getCurrentWeatherTool from '../tools/get-current-weather';\\nimport chatWithDocsMemory from '../memory/chat-with-docs';\\n\\nconst pipeSummarizer = (): PipeI => ({\\n\\tapiKey: 'process.env.LANGBASE_USER_ORG_API_KEY', // Replace with your API key https://langbase.com/docs/api-reference/api-keys\\n\\tname: 'summarizer',\\n\\tdescription: 'A pipe that summarizes content and make it less wordy',\\n\\tstatus: 'public',\\n\\tmodel: 'openai:gpt-4o-mini',\\n\\tstream: true,\\n\\tjson: false,\\n\\tstore: true,\\n\\tmoderate: true,\\n\\ttop_p: 1,\\n\\tmax_tokens: 1000,\\n\\ttemperature: 0.7,\\n\\tpresence_penalty: 1,\\n\\tfrequency_penalty: 1,\\n\\tstop: [],\\n\\ttool_choice: 'auto',\\n\\tparallel_tool_calls: false,\\n\\tmessages: [\\n\\t\\t{ role: 'system', content: `You are a helpful AI assistant.` },\\n\\t\\t{ role: 'system', name: 'rag', content: \\\"Below is some CONTEXT for you to answer the questions. ONLY answer from the CONTEXT. CONTEXT consists of multiple information chunks. Each chunk has a source mentioned at the end.\\\\n\\\\nFor each piece of response you provide, cite the source in brackets like so: [1].\\\\n\\\\nAt the end of the answer, always list each source with its corresponding number and provide the document name. like so [1] Filename.doc.\\\\n\\\\nIf you don't know the answer, just say that you don't know. Ask for more context and better questions if needed.\\\" }\\n\\t],\\n\\tvariables: [],\\n    memory: [chatWithDocsMemory()],\\n    tools: [getCurrentWeatherTool()]\\n});\\n\\nexport default pipeSummarizer;\\n\",\n        children: _jsxDEV(_components.code, {\n          className: \"language-ts\",\n          children: \"<span><span style=\\\"color: #FF9D00\\\">import</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span><span style=\\\"color: #9EFFFF\\\"> PipeI </span><span style=\\\"color: #E1EFFF\\\">}</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00; font-style: italic\\\">from</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">@baseai/core</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span><span style=\\\"color: #FF9D00\\\">import</span><span style=\\\"color: #9EFFFF\\\"> getCurrentWeatherTool </span><span style=\\\"color: #FF9D00; font-style: italic\\\">from</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">../tools/get-current-weather</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span><span style=\\\"color: #FF9D00\\\">import</span><span style=\\\"color: #9EFFFF\\\"> chatWithDocsMemory </span><span style=\\\"color: #FF9D00; font-style: italic\\\">from</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">../memory/chat-with-docs</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">const</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">pipeSummarizer</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FFEE80\\\">()</span><span style=\\\"color: #FF9D00\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #80FFBB\\\">PipeI</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">=&gt;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">({</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tapiKey</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">process.env.LANGBASE_USER_ORG_API_KEY</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #B362FF; font-style: italic\\\">// Replace with your API key https://langbase.com/docs/api-reference/api-keys</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tname</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">summarizer</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tdescription</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">A pipe that summarizes content and make it less wordy</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tstatus</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">public</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tmodel</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">openai:gpt-4o-mini</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tstream</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">true</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tjson</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">false</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tstore</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">true</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tmoderate</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">true</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\ttop_p</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">1</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tmax_tokens</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">1000</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\ttemperature</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">0</span><span style=\\\"color: #9EFFFF\\\">.</span><span style=\\\"color: #FF628C\\\">7</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tpresence_penalty</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">1</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tfrequency_penalty</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">1</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tstop</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\ttool_choice</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">auto</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tparallel_tool_calls</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">false</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tmessages</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t</span><span style=\\\"color: #E1EFFF\\\">{</span><span style=\\\"color: #9EFFFF\\\"> role</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">system</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> content</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #3AD900\\\">`You are a helpful AI assistant.`</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t</span><span style=\\\"color: #E1EFFF\\\">{</span><span style=\\\"color: #9EFFFF\\\"> role</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">system</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> name</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">rag</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> content</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&quot;</span><span style=\\\"color: #A5FF90\\\">Below is some CONTEXT for you to answer the questions. ONLY answer from the CONTEXT. CONTEXT consists of multiple information chunks. Each chunk has a source mentioned at the end.</span><span style=\\\"color: #FF628C\\\">\\\\n\\\\n</span><span style=\\\"color: #A5FF90\\\">For each piece of response you provide, cite the source in brackets like so: [1].</span><span style=\\\"color: #FF628C\\\">\\\\n\\\\n</span><span style=\\\"color: #A5FF90\\\">At the end of the answer, always list each source with its corresponding number and provide the document name. like so [1] Filename.doc.</span><span style=\\\"color: #FF628C\\\">\\\\n\\\\n</span><span style=\\\"color: #A5FF90\\\">If you don&#39;t know the answer, just say that you don&#39;t know. Ask for more context and better questions if needed.</span><span style=\\\"color: #92FC79\\\">&quot;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">}</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #E1EFFF\\\">],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tvariables</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">    memory</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[</span><span style=\\\"color: #FAD000\\\">chatWithDocsMemory</span><span style=\\\"color: #E1EFFF\\\">()],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">    tools</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[</span><span style=\\\"color: #FAD000\\\">getCurrentWeatherTool</span><span style=\\\"color: #E1EFFF\\\">()]</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">});</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">export</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">default</span><span style=\\\"color: #9EFFFF\\\"> pipeSummarizer</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 794,\n          columnNumber: 1\n        }, this),\n        ...{\n          title: './baseai/pipes/summarizer.ts'\n        }\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 794,\n        columnNumber: 1\n      }, this), _jsxDEV(_components.pre, {\n        language: \"ts\",\n        code: \"import 'dotenv/config';\\nimport {Pipe, generateText} from '@baseai/core';\\nimport pipeSummarizer from './baseai/pipes/summarizer';\\n\\nconst pipe = new Pipe(pipeSummarizer());\\n\\nconst userMsg = `What's the weather in San Francisco?`;\\n\\nasync function main() {\\n\\tconst response = await generateText({\\n\\t\\tpipe,\\n\\t\\tmessages: [{role: 'user', content: userMsg}],\\n\\t});\\n\\n\\tconsole.log(response.completion);\\n}\\n\\nmain();\\n\",\n        children: _jsxDEV(_components.code, {\n          className: \"language-ts\",\n          children: \"<span><span style=\\\"color: #FF9D00\\\">import</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">dotenv/config</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span><span style=\\\"color: #FF9D00\\\">import</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span><span style=\\\"color: #9EFFFF\\\">Pipe</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> generateText</span><span style=\\\"color: #E1EFFF\\\">}</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00; font-style: italic\\\">from</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">@baseai/core</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span><span style=\\\"color: #FF9D00\\\">import</span><span style=\\\"color: #9EFFFF\\\"> pipeSummarizer </span><span style=\\\"color: #FF9D00; font-style: italic\\\">from</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">./baseai/pipes/summarizer</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">const</span><span style=\\\"color: #9EFFFF\\\"> pipe </span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">new</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">Pipe</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #FAD000\\\">pipeSummarizer</span><span style=\\\"color: #E1EFFF\\\">());</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">const</span><span style=\\\"color: #9EFFFF\\\"> userMsg </span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #3AD900\\\">`What&#39;s the weather in San Francisco?`</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00; font-style: italic\\\">async</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">function</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">main</span><span style=\\\"color: #E1EFFF\\\">()</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #FF9D00\\\">const</span><span style=\\\"color: #9EFFFF\\\"> response </span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">await</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">generateText</span><span style=\\\"color: #E1EFFF\\\">({</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tpipe</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tmessages</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[{</span><span style=\\\"color: #9EFFFF\\\">role</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">user</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> content</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> userMsg</span><span style=\\\"color: #E1EFFF\\\">}],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #E1EFFF\\\">});</span></span>\\n<span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tconsole</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FAD000\\\">log</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #9EFFFF\\\">response</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FAD000\\\">completion</span><span style=\\\"color: #E1EFFF\\\">);</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">}</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FAD000\\\">main</span><span style=\\\"color: #E1EFFF\\\">();</span></span>\\n<span></span>\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 829,\n          columnNumber: 1\n        }, this),\n        ...{\n          title: 'index.ts'\n        }\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 829,\n        columnNumber: 1\n      }, this), _jsxDEV(_components.pre, {\n        language: \"ts\",\n        code: \"import {ToolI} from '@baseai/core';\\n\\nexport async function getCurrentWeather(location: string, unit: string) {\\n\\treturn `Weather in ${location} is 72 degrees ${unit === 'celsius' ? 'Celsius' : 'Fahrenheit'}`;\\n}\\n\\nconst getCurrentWeatherTool = (): ToolI => ({\\n\\trun: getCurrentWeather,\\n\\ttype: 'function' as const,\\n\\tfunction: {\\n\\t\\tname: 'getCurrentWeather',\\n\\t\\tdescription: 'Get the current weather for a given location',\\n\\t\\tparameters: {\\n\\t\\t\\ttype: 'object',\\n\\t\\t\\tproperties: {\\n\\t\\t\\t\\tlocation: {\\n\\t\\t\\t\\t\\ttype: 'string',\\n\\t\\t\\t\\t\\tdescription: 'The city and state, e.g. San Francisco, CA',\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\tunit: {\\n\\t\\t\\t\\t\\ttype: 'string',\\n\\t\\t\\t\\t\\tenum: ['celsius', 'fahrenheit'],\\n\\t\\t\\t\\t},\\n\\t\\t\\t},\\n\\t\\t\\trequired: ['location'],\\n\\t\\t},\\n\\t},\\n});\\n\\nexport default getCurrentWeatherTool;\\n\",\n        children: _jsxDEV(_components.code, {\n          className: \"language-ts\",\n          children: \"<span><span style=\\\"color: #FF9D00\\\">import</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span><span style=\\\"color: #9EFFFF\\\">ToolI</span><span style=\\\"color: #E1EFFF\\\">}</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00; font-style: italic\\\">from</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">@baseai/core</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">export</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00; font-style: italic\\\">async</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">function</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">getCurrentWeather</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #9EFFFF\\\">location</span><span style=\\\"color: #FF9D00\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #80FFBB\\\">string</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> unit</span><span style=\\\"color: #FF9D00\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #80FFBB\\\">string</span><span style=\\\"color: #E1EFFF\\\">)</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #FF9D00\\\">return</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #3AD900\\\">`Weather in </span><span style=\\\"color: #FFEE80\\\">${</span><span style=\\\"color: #9EFFFF\\\">location</span><span style=\\\"color: #FFEE80\\\">}</span><span style=\\\"color: #3AD900\\\"> is 72 degrees </span><span style=\\\"color: #FFEE80\\\">${</span><span style=\\\"color: #9EFFFF\\\">unit </span><span style=\\\"color: #FF9D00\\\">===</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">celsius</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">?</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">Celsius</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">Fahrenheit</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #FFEE80\\\">}</span><span style=\\\"color: #3AD900\\\">`</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">}</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">const</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">getCurrentWeatherTool</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FFEE80\\\">()</span><span style=\\\"color: #FF9D00\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #80FFBB\\\">ToolI</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">=&gt;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">({</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\trun</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> getCurrentWeather</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\ttype</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">function</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">as</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00; font-style: italic\\\">const</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tfunction</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tname</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">getCurrentWeather</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tdescription</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">Get the current weather for a given location</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tparameters</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\ttype</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">object</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\tproperties</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\tlocation</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\t\\ttype</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">string</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\t\\tdescription</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">The city and state, e.g. San Francisco, CA</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\t</span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\tunit</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\t\\ttype</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">string</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\t\\tenum</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">celsius</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">fahrenheit</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\t</span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t</span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\trequired</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">location</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t</span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">});</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">export</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">default</span><span style=\\\"color: #9EFFFF\\\"> getCurrentWeatherTool</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 850,\n          columnNumber: 1\n        }, this),\n        ...{\n          title: './baseai/tools/get-current-weather.ts'\n        }\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 850,\n        columnNumber: 1\n      }, this)]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 792,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"step-13-run-the-pipe-with-the-integrated-memory\",\n      children: \"Step #13: Run the pipe with the integrated memory\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 884,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Let's update the user message to the following.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 886,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"txt\",\n      code: \"How to create a pipe?\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-txt\",\n        children: \"<span><span style=\\\"color: undefined\\\">How to create a pipe?</span></span>\\n<span><span style=\\\"color: undefined\\\"></span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 888,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 888,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(CodeGroup, {\n      exampleTitle: \"Chat with docs RAG\",\n      title: \"Integrate memory with the pipe\",\n      children: [_jsxDEV(_components.pre, {\n        language: \"ts\",\n        code: \"import 'dotenv/config';\\nimport {Pipe, generateText} from '@baseai/core';\\nimport pipeSummarizer from './baseai/pipes/summarizer';\\n\\nconst pipe = new Pipe(pipeSummarizer());\\n\\nconst userMsg = `How to create a pipe?`;\\n\\nasync function main() {\\n\\tconst response = await generateText({\\n\\t\\tpipe,\\n\\t\\tmessages: [{role: 'user', content: userMsg}],\\n\\t});\\n\\n\\tconsole.log(response.completion);\\n}\\n\\nmain();\\n\",\n        children: _jsxDEV(_components.code, {\n          className: \"language-ts\",\n          children: \"<span><span style=\\\"color: #FF9D00\\\">import</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">dotenv/config</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span><span style=\\\"color: #FF9D00\\\">import</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span><span style=\\\"color: #9EFFFF\\\">Pipe</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> generateText</span><span style=\\\"color: #E1EFFF\\\">}</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00; font-style: italic\\\">from</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">@baseai/core</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span><span style=\\\"color: #FF9D00\\\">import</span><span style=\\\"color: #9EFFFF\\\"> pipeSummarizer </span><span style=\\\"color: #FF9D00; font-style: italic\\\">from</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">./baseai/pipes/summarizer</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">const</span><span style=\\\"color: #9EFFFF\\\"> pipe </span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">new</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">Pipe</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #FAD000\\\">pipeSummarizer</span><span style=\\\"color: #E1EFFF\\\">());</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">const</span><span style=\\\"color: #9EFFFF\\\"> userMsg </span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #3AD900\\\">`How to create a pipe?`</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00; font-style: italic\\\">async</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">function</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">main</span><span style=\\\"color: #E1EFFF\\\">()</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #FF9D00\\\">const</span><span style=\\\"color: #9EFFFF\\\"> response </span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">await</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">generateText</span><span style=\\\"color: #E1EFFF\\\">({</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tpipe</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tmessages</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[{</span><span style=\\\"color: #9EFFFF\\\">role</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">user</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> content</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> userMsg</span><span style=\\\"color: #E1EFFF\\\">}],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #E1EFFF\\\">});</span></span>\\n<span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tconsole</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FAD000\\\">log</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #9EFFFF\\\">response</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FAD000\\\">completion</span><span style=\\\"color: #E1EFFF\\\">);</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">}</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FAD000\\\">main</span><span style=\\\"color: #E1EFFF\\\">();</span></span>\\n<span></span>\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 894,\n          columnNumber: 1\n        }, this),\n        ...{\n          title: 'index.ts'\n        }\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 894,\n        columnNumber: 1\n      }, this), _jsxDEV(_components.pre, {\n        language: \"ts\",\n        code: \"import { PipeI } from '@baseai/core';\\nimport getCurrentWeatherTool from '../tools/get-current-weather';\\n\\nconst pipeSummarizer = (): PipeI => ({\\n\\tapiKey: 'process.env.LANGBASE_USER_ORG_API_KEY', // Replace with your API key https://langbase.com/docs/api-reference/api-keys\\n\\tname: 'summarizer',\\n\\tdescription: 'A pipe that summarizes content and make it less wordy',\\n\\tstatus: 'public',\\n\\tmodel: 'openai:gpt-4o-mini',\\n\\tstream: true,\\n\\tjson: false,\\n\\tstore: true,\\n\\tmoderate: true,\\n\\ttop_p: 1,\\n\\tmax_tokens: 1000,\\n\\ttemperature: 0.7,\\n\\tpresence_penalty: 1,\\n\\tfrequency_penalty: 1,\\n\\tstop: [],\\n\\ttool_choice: 'auto',\\n\\tparallel_tool_calls: false,\\n\\tmessages: [\\n\\t\\t{ role: 'system', content: `You are a helpful AI assistant.` },\\n\\t\\t{ role: 'system', name: 'rag', content: \\\"Below is some CONTEXT for you to answer the questions. ONLY answer from the CONTEXT. CONTEXT consists of multiple information chunks. Each chunk has a source mentioned at the end.\\\\n\\\\nFor each piece of response you provide, cite the source in brackets like so: [1].\\\\n\\\\nAt the end of the answer, always list each source with its corresponding number and provide the document name. like so [1] Filename.doc.\\\\n\\\\nIf you don't know the answer, just say that you don't know. Ask for more context and better questions if needed.\\\" }\\n\\t],\\n\\tvariables: [],\\n    memory: [chatWithDocsMemory()],\\n    tools: [getCurrentWeatherTool()]\\n});\\n\\nexport default pipeSummarizer;\\n\",\n        children: _jsxDEV(_components.code, {\n          className: \"language-ts\",\n          children: \"<span><span style=\\\"color: #FF9D00\\\">import</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span><span style=\\\"color: #9EFFFF\\\"> PipeI </span><span style=\\\"color: #E1EFFF\\\">}</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00; font-style: italic\\\">from</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">@baseai/core</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span><span style=\\\"color: #FF9D00\\\">import</span><span style=\\\"color: #9EFFFF\\\"> getCurrentWeatherTool </span><span style=\\\"color: #FF9D00; font-style: italic\\\">from</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">../tools/get-current-weather</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">const</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">pipeSummarizer</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FFEE80\\\">()</span><span style=\\\"color: #FF9D00\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #80FFBB\\\">PipeI</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">=&gt;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">({</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tapiKey</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">process.env.LANGBASE_USER_ORG_API_KEY</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #B362FF; font-style: italic\\\">// Replace with your API key https://langbase.com/docs/api-reference/api-keys</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tname</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">summarizer</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tdescription</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">A pipe that summarizes content and make it less wordy</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tstatus</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">public</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tmodel</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">openai:gpt-4o-mini</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tstream</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">true</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tjson</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">false</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tstore</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">true</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tmoderate</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">true</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\ttop_p</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">1</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tmax_tokens</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">1000</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\ttemperature</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">0</span><span style=\\\"color: #9EFFFF\\\">.</span><span style=\\\"color: #FF628C\\\">7</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tpresence_penalty</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">1</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tfrequency_penalty</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">1</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tstop</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\ttool_choice</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">auto</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tparallel_tool_calls</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">false</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tmessages</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t</span><span style=\\\"color: #E1EFFF\\\">{</span><span style=\\\"color: #9EFFFF\\\"> role</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">system</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> content</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #3AD900\\\">`You are a helpful AI assistant.`</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t</span><span style=\\\"color: #E1EFFF\\\">{</span><span style=\\\"color: #9EFFFF\\\"> role</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">system</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> name</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">rag</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> content</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&quot;</span><span style=\\\"color: #A5FF90\\\">Below is some CONTEXT for you to answer the questions. ONLY answer from the CONTEXT. CONTEXT consists of multiple information chunks. Each chunk has a source mentioned at the end.</span><span style=\\\"color: #FF628C\\\">\\\\n\\\\n</span><span style=\\\"color: #A5FF90\\\">For each piece of response you provide, cite the source in brackets like so: [1].</span><span style=\\\"color: #FF628C\\\">\\\\n\\\\n</span><span style=\\\"color: #A5FF90\\\">At the end of the answer, always list each source with its corresponding number and provide the document name. like so [1] Filename.doc.</span><span style=\\\"color: #FF628C\\\">\\\\n\\\\n</span><span style=\\\"color: #A5FF90\\\">If you don&#39;t know the answer, just say that you don&#39;t know. Ask for more context and better questions if needed.</span><span style=\\\"color: #92FC79\\\">&quot;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">}</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #E1EFFF\\\">],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tvariables</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">    memory</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[</span><span style=\\\"color: #FAD000\\\">chatWithDocsMemory</span><span style=\\\"color: #E1EFFF\\\">()],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">    tools</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[</span><span style=\\\"color: #FAD000\\\">getCurrentWeatherTool</span><span style=\\\"color: #E1EFFF\\\">()]</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">});</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">export</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">default</span><span style=\\\"color: #9EFFFF\\\"> pipeSummarizer</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 915,\n          columnNumber: 1\n        }, this),\n        ...{\n          title: './baseai/pipes/summarizer.ts'\n        }\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 915,\n        columnNumber: 1\n      }, this), _jsxDEV(_components.pre, {\n        language: \"ts\",\n        code: \"import {ToolI} from '@baseai/core';\\n\\nexport async function getCurrentWeather(location: string, unit: string) {\\n\\treturn `Weather in ${location} is 72 degrees ${unit === 'celsius' ? 'Celsius' : 'Fahrenheit'}`;\\n}\\n\\nconst getCurrentWeatherTool = (): ToolI => ({\\n\\trun: getCurrentWeather,\\n\\ttype: 'function' as const,\\n\\tfunction: {\\n\\t\\tname: 'getCurrentWeather',\\n\\t\\tdescription: 'Get the current weather for a given location',\\n\\t\\tparameters: {\\n\\t\\t\\ttype: 'object',\\n\\t\\t\\tproperties: {\\n\\t\\t\\t\\tlocation: {\\n\\t\\t\\t\\t\\ttype: 'string',\\n\\t\\t\\t\\t\\tdescription: 'The city and state, e.g. San Francisco, CA',\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\tunit: {\\n\\t\\t\\t\\t\\ttype: 'string',\\n\\t\\t\\t\\t\\tenum: ['celsius', 'fahrenheit'],\\n\\t\\t\\t\\t},\\n\\t\\t\\t},\\n\\t\\t\\trequired: ['location'],\\n\\t\\t},\\n\\t},\\n});\\n\\nexport default getCurrentWeatherTool;\\n\",\n        children: _jsxDEV(_components.code, {\n          className: \"language-ts\",\n          children: \"<span><span style=\\\"color: #FF9D00\\\">import</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span><span style=\\\"color: #9EFFFF\\\">ToolI</span><span style=\\\"color: #E1EFFF\\\">}</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00; font-style: italic\\\">from</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">@baseai/core</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">export</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00; font-style: italic\\\">async</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">function</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">getCurrentWeather</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #9EFFFF\\\">location</span><span style=\\\"color: #FF9D00\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #80FFBB\\\">string</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> unit</span><span style=\\\"color: #FF9D00\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #80FFBB\\\">string</span><span style=\\\"color: #E1EFFF\\\">)</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #FF9D00\\\">return</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #3AD900\\\">`Weather in </span><span style=\\\"color: #FFEE80\\\">${</span><span style=\\\"color: #9EFFFF\\\">location</span><span style=\\\"color: #FFEE80\\\">}</span><span style=\\\"color: #3AD900\\\"> is 72 degrees </span><span style=\\\"color: #FFEE80\\\">${</span><span style=\\\"color: #9EFFFF\\\">unit </span><span style=\\\"color: #FF9D00\\\">===</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">celsius</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">?</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">Celsius</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">Fahrenheit</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #FFEE80\\\">}</span><span style=\\\"color: #3AD900\\\">`</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">}</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">const</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">getCurrentWeatherTool</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FFEE80\\\">()</span><span style=\\\"color: #FF9D00\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #80FFBB\\\">ToolI</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">=&gt;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">({</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\trun</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> getCurrentWeather</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\ttype</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">function</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">as</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00; font-style: italic\\\">const</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tfunction</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tname</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">getCurrentWeather</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tdescription</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">Get the current weather for a given location</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tparameters</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\ttype</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">object</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\tproperties</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\tlocation</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\t\\ttype</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">string</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\t\\tdescription</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">The city and state, e.g. San Francisco, CA</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\t</span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\tunit</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\t\\ttype</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">string</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\t\\tenum</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">celsius</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">fahrenheit</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\t</span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t</span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\trequired</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">location</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t</span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">});</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">export</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">default</span><span style=\\\"color: #9EFFFF\\\"> getCurrentWeatherTool</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 949,\n          columnNumber: 1\n        }, this),\n        ...{\n          title: './baseai/tools/get-current-weather.ts'\n        }\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 949,\n        columnNumber: 1\n      }, this)]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 892,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"It will prompt the LLM model to get answers to your questions. It will search the memory and provide you with the best possible answer to your question.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 983,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"For instance, if you ask \\\"How to create a pipe?\\\", it gives you the answer from the memory.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 985,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"txt\",\n      code: \"To create a Pipe, you need to follow these steps:\\n\\n1. Select any LLM model (by default, OpenAI gpt-4o-mini is selected).\\n2. If the Pipe is of type generate, simply run it.\\n3. If it is a chat pipe, write \\\"hello\\\" in Playground and then run the Pipe.\\n\\nAdditionally, keep in mind that when you create a Pipe, it already contains a readme which can be edited at any time [1].\\n\\nSources:\\n[1] pipe faqs.txt\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-txt\",\n        children: \"<span><span style=\\\"color: undefined\\\">To create a Pipe, you need to follow these steps:</span></span>\\n<span><span style=\\\"color: undefined\\\"></span></span>\\n<span><span style=\\\"color: undefined\\\">1. Select any LLM model (by default, OpenAI gpt-4o-mini is selected).</span></span>\\n<span><span style=\\\"color: undefined\\\">2. If the Pipe is of type generate, simply run it.</span></span>\\n<span><span style=\\\"color: undefined\\\">3. If it is a chat pipe, write &quot;hello&quot; in Playground and then run the Pipe.</span></span>\\n<span><span style=\\\"color: undefined\\\"></span></span>\\n<span><span style=\\\"color: undefined\\\">Additionally, keep in mind that when you create a Pipe, it already contains a readme which can be edited at any time [1].</span></span>\\n<span><span style=\\\"color: undefined\\\"></span></span>\\n<span><span style=\\\"color: undefined\\\">Sources:</span></span>\\n<span><span style=\\\"color: undefined\\\">[1] pipe faqs.txt</span></span>\\n<span><span style=\\\"color: undefined\\\"></span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 987,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 987,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"This all happens locally on your machine and you should see the response in your terminal.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 999,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 1001,\n      columnNumber: 1\n    }, this)]\n  }, undefined, true, {\n    fileName: \"<source.js>\",\n    lineNumber: 1,\n    columnNumber: 1\n  }, this);\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsxDEV(MDXLayout, {\n    ...props,\n    children: _jsxDEV(_createMdxContent, {\n      ...props\n    }, undefined, false, {\n      fileName: \"<source.js>\"\n    }, this)\n  }, undefined, false, {\n    fileName: \"<source.js>\"\n  }, this) : _createMdxContent(props);\n}\nreturn {\n  sections,\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component, place) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\" + (place ? \"\\nIt’s referenced in your code at `\" + place + \"`\" : \"\"));\n}\n","frontmatter":{},"scope":{}},"frontmatter":{"url":"https://baseai.dev/docs/learn/build-ai-pipe-with-tools-and-memory","slug":"build-ai-pipe-with-tools-and-memory","title":"Build an agentic AI pipe with tools and memory - Learn","imageUrl":"https://baseai.dev/api/og?title=Build an agentic AI pipe with tools and memory&section=Learn","tags":["baseai","langbase","learn"],"section":"Learn","description":"Learn how to build an agentic AI pipe with tools and memory.","modifiedDate":"2024-09-24T00:00:00.000Z","publishedDate":"2024-09-24T00:00:00.000Z"}},{"slug":"create","section":"memory","content":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsxDEV: _jsxDEV} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nconst sections = [{\n  title: \"Step #1 Create memory\",\n  id: \"step-1-create-memory\",\n  ...undefined\n}, {\n  title: \"Step #2 Add documents\",\n  id: \"step-2-add-documents\",\n  ...undefined\n}, {\n  title: \"Step #3 Embed memory\",\n  id: \"step-3-embed-memory\",\n  ...undefined\n}];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    hr: \"hr\",\n    p: \"p\",\n    pre: \"pre\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(_components.h1, {\n      children: \"Create a Memory\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 2,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Create a memory locally using BaseAI CLI.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 4,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 6,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"step-1-create-memory\",\n      children: \"Step #1 Create memory\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 8,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Create a new memory using the \", _jsxDEV(_components.code, {\n        children: \"memory\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 10,\n        columnNumber: 31\n      }, this), \" command. It will ask you for name and description of the memory.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 10,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Let's use the name \", _jsxDEV(_components.code, {\n        children: \"chat-with-docs\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 12,\n        columnNumber: 20\n      }, this), \" for this example.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 12,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"bash\",\n      code: \"baseai memory\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-bash\",\n        children: \"<span><span style=\\\"color: #FAD000\\\">baseai</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">memory</span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 14,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 14,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"It creates a memory at \", _jsxDEV(_components.code, {\n        children: \"baseai/memory/chat-with-docs\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 18,\n        columnNumber: 24\n      }, this), \" in your current directory. Add documents to \", _jsxDEV(_components.code, {\n        children: \"baseai/memory/chat-with-docs/documents\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 18,\n        columnNumber: 99\n      }, this), \" for use.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 18,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"step-2-add-documents\",\n      children: \"Step #2 Add documents\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 20,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Add documents to the memory by placing them in the \", _jsxDEV(_components.code, {\n        children: \"documents\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 22,\n        columnNumber: 52\n      }, this), \" directory of the memory.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 22,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"step-3-embed-memory\",\n      children: \"Step #3 Embed memory\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 25,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Use the \", _jsxDEV(_components.a, {\n        href: \"/docs/memory/embed\",\n        children: [_jsxDEV(_components.code, {\n          children: \"embed\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 27,\n          columnNumber: 10\n        }, this), \" command to generate embeddings\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), \" for the documents in the memory.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 27,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 29,\n      columnNumber: 1\n    }, this)]\n  }, undefined, true, {\n    fileName: \"<source.js>\",\n    lineNumber: 1,\n    columnNumber: 1\n  }, this);\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsxDEV(MDXLayout, {\n    ...props,\n    children: _jsxDEV(_createMdxContent, {\n      ...props\n    }, undefined, false, {\n      fileName: \"<source.js>\"\n    }, this)\n  }, undefined, false, {\n    fileName: \"<source.js>\"\n  }, this) : _createMdxContent(props);\n}\nreturn {\n  sections,\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"frontmatter":{"url":"https://baseai.dev/docs/memory/create","slug":"create","title":"Create - Memory","imageUrl":"https://baseai.dev/api/og?title=Create&section=Memory","tags":["baseai","memory","langbase"],"section":"Memory","description":"Create a memory using BaseAI CLI.","modifiedDate":"2024-09-24T00:00:00.000Z","publishedDate":"2024-09-24T00:00:00.000Z"}},{"slug":"embed-document","section":"memory","content":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsxDEV: _jsxDEV} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nconst sections = [{\n  title: \"Embed a document\",\n  id: \"embed-a-document\",\n  ...undefined\n}];\nfunction _createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    hr: \"hr\",\n    p: \"p\",\n    pre: \"pre\",\n    ..._provideComponents(),\n    ...props.components\n  }, {Note} = _components;\n  if (!Note) _missingMdxReference(\"Note\", true, \"7:1-9:8\");\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(_components.h1, {\n      children: \"Embed a Memory Document\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 2,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"If you add a new document to the memory or change the document, you need to embed the document to use it with the memory.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 4,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(Note, {\n      children: _jsxDEV(_components.p, {\n        children: [\"Please make sure to add \", _jsxDEV(_components.code, {\n          children: \"OPENAI_API_KEY\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 8,\n          columnNumber: 25\n        }, this), \" to \", _jsxDEV(_components.code, {\n          children: \".env\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 8,\n          columnNumber: 45\n        }, this), \" file in the root of your project. This is required to generate embeddings for the documents in the memory.\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 8,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 7,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 12,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"embed-a-document\",\n      children: \"Embed a document\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 14,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Pass the memory name and document name to the \", _jsxDEV(_components.code, {\n        children: \"embed\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 16,\n        columnNumber: 47\n      }, this), \" command using the \", _jsxDEV(_components.code, {\n        children: \"--memory\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 16,\n        columnNumber: 73\n      }, this), \" flag or \", _jsxDEV(_components.code, {\n        children: \"-m\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 16,\n        columnNumber: 92\n      }, this), \" for short and \", _jsxDEV(_components.code, {\n        children: \"--document\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 16,\n        columnNumber: 111\n      }, this), \" flag or \", _jsxDEV(_components.code, {\n        children: \"-d\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 16,\n        columnNumber: 132\n      }, this), \" for short.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 16,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"bash\",\n      code: \"baseai embed -m chat-with-docs -d document-name\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-bash\",\n        children: \"<span><span style=\\\"color: #FAD000\\\">baseai</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">embed</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">-m</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">chat-with-docs</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">-d</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">document-name</span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 18,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 18,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"It will generate embeddings and update the memory index. If the document is already embedded, it will update the embeddings for the document.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 22,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 24,\n      columnNumber: 1\n    }, this)]\n  }, undefined, true, {\n    fileName: \"<source.js>\",\n    lineNumber: 1,\n    columnNumber: 1\n  }, this);\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsxDEV(MDXLayout, {\n    ...props,\n    children: _jsxDEV(_createMdxContent, {\n      ...props\n    }, undefined, false, {\n      fileName: \"<source.js>\"\n    }, this)\n  }, undefined, false, {\n    fileName: \"<source.js>\"\n  }, this) : _createMdxContent(props);\n}\nreturn {\n  sections,\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component, place) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\" + (place ? \"\\nIt’s referenced in your code at `\" + place + \"`\" : \"\"));\n}\n","frontmatter":{},"scope":{}},"frontmatter":{"url":"https://baseai.dev/docs/memory/embed-document","slug":"embed-document","title":"Embed Document - Memory","imageUrl":"https://baseai.dev/api/og?title=Embed Document&section=Memory","tags":["baseai","memory","langbase","embed documents"],"section":"Memory","description":"Embed a memory document locally using BaseAI CLI.","modifiedDate":"2024-09-24T00:00:00.000Z","publishedDate":"2024-09-24T00:00:00.000Z"}},{"slug":"embed","section":"memory","content":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsxDEV: _jsxDEV} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nconst sections = [{\n  title: \"Step 0 Create memory\",\n  id: \"step-0-create-memory\",\n  ...undefined\n}, {\n  title: \"Step #1 Embed memory\",\n  id: \"step-1-embed-memory\",\n  ...undefined\n}];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    hr: \"hr\",\n    p: \"p\",\n    pre: \"pre\",\n    ..._provideComponents(),\n    ...props.components\n  }, {Note} = _components;\n  if (!Note) _missingMdxReference(\"Note\", true, \"7:1-9:8\");\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(_components.h1, {\n      children: \"Embed a Memory\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 2,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Embed a memory locally using BaseAI CLI.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 4,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(Note, {\n      children: _jsxDEV(_components.p, {\n        children: [\"Please make sure to add \", _jsxDEV(_components.code, {\n          children: \"OPENAI_API_KEY\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 8,\n          columnNumber: 25\n        }, this), \" to \", _jsxDEV(_components.code, {\n          children: \".env\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 8,\n          columnNumber: 45\n        }, this), \" file in the root of your project. This is required to generate embeddings for the documents in the memory.\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 8,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 7,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 12,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"step-0-create-memory\",\n      children: \"Step 0 Create memory\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 14,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Make sure you have a memory \", _jsxDEV(_components.a, {\n        href: \"/docs/memory/create\",\n        children: \"created\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 16,\n        columnNumber: 29\n      }, this), \" a memory and added documents to it.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 16,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"step-1-embed-memory\",\n      children: \"Step #1 Embed memory\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 18,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Embed all memory documents and create a semantic index for the memory. Pass the memory name to the \", _jsxDEV(_components.code, {\n        children: \"embed\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 20,\n        columnNumber: 100\n      }, this), \" command using the \", _jsxDEV(_components.code, {\n        children: \"--memory\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 20,\n        columnNumber: 126\n      }, this), \" flag or \", _jsxDEV(_components.code, {\n        children: \"-m\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 20,\n        columnNumber: 145\n      }, this), \" for short.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 20,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"bash\",\n      code: \"baseai embed -m chat-with-docs\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-bash\",\n        children: \"<span><span style=\\\"color: #FAD000\\\">baseai</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">embed</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">-m</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">chat-with-docs</span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 22,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 22,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"It will generate embeddings for the documents and create an index for search. Your memory is now ready to be used with a Pipe.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 26,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 28,\n      columnNumber: 1\n    }, this)]\n  }, undefined, true, {\n    fileName: \"<source.js>\",\n    lineNumber: 1,\n    columnNumber: 1\n  }, this);\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsxDEV(MDXLayout, {\n    ...props,\n    children: _jsxDEV(_createMdxContent, {\n      ...props\n    }, undefined, false, {\n      fileName: \"<source.js>\"\n    }, this)\n  }, undefined, false, {\n    fileName: \"<source.js>\"\n  }, this) : _createMdxContent(props);\n}\nreturn {\n  sections,\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component, place) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\" + (place ? \"\\nIt’s referenced in your code at `\" + place + \"`\" : \"\"));\n}\n","frontmatter":{},"scope":{}},"frontmatter":{"url":"https://baseai.dev/docs/memory/embed","slug":"embed","title":"Embed - Memory","imageUrl":"https://baseai.dev/api/og?title=Embed&section=Memory","tags":["baseai","memory","langbase","embed memory"],"section":"Memory","description":"Embed a memory using BaseAI CLI.","modifiedDate":"2024-09-24T00:00:00.000Z","publishedDate":"2024-09-24T00:00:00.000Z"}},{"slug":"faqs","section":"memory","content":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsxDEV: _jsxDEV} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nconst sections = [{\n  title: \"What is a Memory?\",\n  id: \"what-is-a-memory\",\n  ...undefined\n}, {\n  title: \"What is the maximum size of a document that can be added to Memory?\",\n  id: \"what-is-the-maximum-size-of-a-document-that-can-be-added-to-memory\",\n  ...undefined\n}, {\n  title: \"Which file formats are supported for importing data into Memory?\",\n  id: \"which-file-formats-are-supported-for-importing-data-into-memory\",\n  ...undefined\n}, {\n  title: \"How can I import data from unsupported file formats?\",\n  id: \"how-can-i-import-data-from-unsupported-file-formats\",\n  ...undefined\n}, {\n  title: \"Can I attach multiple Memory to a single Pipe?\",\n  id: \"can-i-attach-multiple-memory-to-a-single-pipe\",\n  ...undefined\n}];\nfunction _createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    hr: \"hr\",\n    p: \"p\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(_components.h1, {\n      children: \"FAQs\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 2,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Let's take a look at some frequently asked questions about Memory.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 4,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 6,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"what-is-a-memory\",\n      children: \"What is a Memory?\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 8,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Memory allows you to store, organize, and retrieve information. It can be used to build powerful Retrieval Augmented Generation (RAG) based AI agents which can use your data to assist with your queries.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 10,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 12,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"what-is-the-maximum-size-of-a-document-that-can-be-added-to-memory\",\n      children: \"What is the maximum size of a document that can be added to Memory?\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 14,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Single document size should not exceed 10MB. There is no limit on the number of documents that can be added to Memory.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 16,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 18,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"which-file-formats-are-supported-for-importing-data-into-memory\",\n      children: \"Which file formats are supported for importing data into Memory?\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 21,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Currently we support \", _jsxDEV(_components.code, {\n        children: \".txt\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 23,\n        columnNumber: 22\n      }, this), \", \", _jsxDEV(_components.code, {\n        children: \".pdf\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 23,\n        columnNumber: 30\n      }, this), \", \", _jsxDEV(_components.code, {\n        children: \".md\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 23,\n        columnNumber: 38\n      }, this), \", \", _jsxDEV(_components.code, {\n        children: \".xlsx\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 23,\n        columnNumber: 45\n      }, this), \", \", _jsxDEV(_components.code, {\n        children: \".xls\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 23,\n        columnNumber: 54\n      }, this), \", \", _jsxDEV(_components.code, {\n        children: \".csv\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 23,\n        columnNumber: 62\n      }, this), \", and all coding files.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 23,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 25,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"how-can-i-import-data-from-unsupported-file-formats\",\n      children: \"How can I import data from unsupported file formats?\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 27,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"You can convert your data into a supported format before importing it into Memory. We are working on supporting more file formats.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 29,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 31,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"can-i-attach-multiple-memory-to-a-single-pipe\",\n      children: \"Can I attach multiple Memory to a single Pipe?\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 33,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Yes, you can attach multiple Memory to a single Pipe.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 35,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 37,\n      columnNumber: 1\n    }, this)]\n  }, undefined, true, {\n    fileName: \"<source.js>\",\n    lineNumber: 1,\n    columnNumber: 1\n  }, this);\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsxDEV(MDXLayout, {\n    ...props,\n    children: _jsxDEV(_createMdxContent, {\n      ...props\n    }, undefined, false, {\n      fileName: \"<source.js>\"\n    }, this)\n  }, undefined, false, {\n    fileName: \"<source.js>\"\n  }, this) : _createMdxContent(props);\n}\nreturn {\n  sections,\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"frontmatter":{"url":"https://baseai.dev/docs/memory/faqs","slug":"faqs","title":"FAQs - Memory","imageUrl":"https://baseai.dev/api/og?title=FAQs&section=Memory","tags":["baseai","memory","langbase","faqs"],"section":"Memory","description":"Let's take a look at some frequently asked questions about Memory.","modifiedDate":"2024-09-24T00:00:00.000Z","publishedDate":"2024-09-24T00:00:00.000Z"}},{"slug":"list","section":"memory","content":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsxDEV: _jsxDEV} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nconst sections = [];\nfunction _createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    h1: \"h1\",\n    hr: \"hr\",\n    p: \"p\",\n    pre: \"pre\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(_components.h1, {\n      children: \"List all memory\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 2,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"List all memory in your current project directory.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 4,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 6,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Use the \", _jsxDEV(_components.code, {\n        children: \"memory list\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 8,\n        columnNumber: 9\n      }, this), \" command to list all memory in your current project directory.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 8,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"bash\",\n      code: \"baseai memory --list\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-bash\",\n        children: \"<span><span style=\\\"color: #FAD000\\\">baseai</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">memory</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">--list</span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 10,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 10,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"It will list all memory in the current project directory.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 14,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 16,\n      columnNumber: 1\n    }, this)]\n  }, undefined, true, {\n    fileName: \"<source.js>\",\n    lineNumber: 1,\n    columnNumber: 1\n  }, this);\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsxDEV(MDXLayout, {\n    ...props,\n    children: _jsxDEV(_createMdxContent, {\n      ...props\n    }, undefined, false, {\n      fileName: \"<source.js>\"\n    }, this)\n  }, undefined, false, {\n    fileName: \"<source.js>\"\n  }, this) : _createMdxContent(props);\n}\nreturn {\n  sections,\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"frontmatter":{"url":"https://baseai.dev/docs/memory/list","slug":"list","title":"List - Memory","imageUrl":"https://baseai.dev/api/og?title=List&section=Memory","tags":["baseai","memory","langbase","list"],"section":"Memory","description":"List all memory in your current project directory.","modifiedDate":"2024-09-24T00:00:00.000Z","publishedDate":"2024-09-24T00:00:00.000Z"}},{"slug":"quickstart","section":"memory","content":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsxDEV: _jsxDEV} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nconst sections = [{\n  title: \"Step #0: Setup\",\n  id: \"step-0-setup\",\n  ...undefined\n}, {\n  title: \"Step #1: Create a Memory\",\n  id: \"step-1-create-a-memory\",\n  ...undefined\n}, {\n  title: \"Step #2: Add OpenAI API Key\",\n  id: \"step-2-add-open-ai-api-key\",\n  ...undefined\n}, {\n  title: \"Step #2: Create embeddings\",\n  id: \"step-2-create-embeddings\",\n  ...undefined\n}, {\n  title: \"Step #3: Create a Pipe and Connect Memory\",\n  id: \"step-3-create-a-pipe-and-connect-memory\",\n  ...undefined\n}, {\n  title: \"Step #4: Use the Pipe\",\n  id: \"step-4-use-the-pipe\",\n  ...undefined\n}, {\n  title: \"Step #5: Run the code\",\n  id: \"step-5-run-the-code\",\n  ...undefined\n}, {\n  title: \"Next Steps\",\n  id: \"next-steps\",\n  ...undefined\n}];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    h3: \"h3\",\n    hr: \"hr\",\n    li: \"li\",\n    ol: \"ol\",\n    p: \"p\",\n    pre: \"pre\",\n    strong: \"strong\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(_components.h1, {\n      children: \"Quickstart: Build FAQs RAG using Memory\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 2,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Retrieval-Augmented Generation (RAG) is a technique where a large language model (LLM) is supplemented with external information from a retrieval system to improve response quality. Here’s how it works:\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 4,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.ol, {\n      children: [\"\\n\", _jsxDEV(_components.li, {\n        children: [_jsxDEV(_components.strong, {\n          children: \"Query\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 6,\n          columnNumber: 4\n        }, this), \": The user submits a query, and embeddings are generated.\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 6,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: [_jsxDEV(_components.strong, {\n          children: \"Retrieval\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 7,\n          columnNumber: 4\n        }, this), \": Relevant information is retrieved from memory using similarity search.\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 7,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: [_jsxDEV(_components.strong, {\n          children: \"Augmentation\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 8,\n          columnNumber: 4\n        }, this), \": The retrieved data is combined with the query.\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 8,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: [_jsxDEV(_components.strong, {\n          children: \"Generation\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 9,\n          columnNumber: 4\n        }, this), \": The augmented input is passed to LLM to generate a more accurate response.\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 9,\n        columnNumber: 1\n      }, this), \"\\n\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 6,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: _jsxDEV(_components.strong, {\n        children: \"Let's build your first RAG using memory in a minute.\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 11,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 11,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 13,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"In this quickstart guide, you will locally:\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 15,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.ul, {\n      children: [\"\\n\", _jsxDEV(_components.li, {\n        children: [_jsxDEV(_components.strong, {\n          children: \"Create\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 17,\n          columnNumber: 5\n        }, this), \" a \", _jsxDEV(_components.a, {\n          href: \"https://langbase.com/docs/memorysets/overview\",\n          children: \"memory\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 17,\n          columnNumber: 18\n        }, this), \" in BaseAI.\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 17,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: [_jsxDEV(_components.strong, {\n          children: \"Build\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 18,\n          columnNumber: 5\n        }, this), \" a RAG by connecting your \", _jsxDEV(_components.a, {\n          href: \"https://langbase.com/docs/pipe\",\n          children: \"pipe\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 18,\n          columnNumber: 40\n        }, this), \" and memory.\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 18,\n        columnNumber: 1\n      }, this), \"\\n\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 17,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 20,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h3, {\n      children: \"Let's get started\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 22,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Let's create a chat with docs system for \", _jsxDEV(_components.a, {\n        href: \"https://langbase.com/docs/pipe/faqs\",\n        children: \"Pipe FAQs\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 24,\n        columnNumber: 42\n      }, this), \" using memory to answer questions about Pipe.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 24,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 26,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"step-0-setup\",\n      children: \"Step #0: Setup\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 28,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Initialize BaseAI in root of your project using the following command:\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 30,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"bash\",\n      code: \"npx baseai init\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-bash\",\n        children: \"<span><span style=\\\"color: #FAD000\\\">npx</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">baseai</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">init</span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 32,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 32,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"step-1-create-a-memory\",\n      children: \"Step #1: Create a Memory\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 36,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Create a new memory using the \", _jsxDEV(_components.code, {\n        children: \"memory\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 38,\n        columnNumber: 31\n      }, this), \" command. It will ask you for name and description of the memory. Use \", _jsxDEV(_components.code, {\n        children: \"chat-with-docs\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 38,\n        columnNumber: 109\n      }, this), \" as the memory name.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 38,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"bash\",\n      code: \"baseai memory\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-bash\",\n        children: \"<span><span style=\\\"color: #FAD000\\\">baseai</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">memory</span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 40,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 40,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"It creates a memory at \", _jsxDEV(_components.code, {\n        children: \"baseai/memory/chat-with-docs\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 44,\n        columnNumber: 24\n      }, this), \" in your current directory. Add documents to \", _jsxDEV(_components.code, {\n        children: \"baseai/memory/chat-with-docs/documents\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 44,\n        columnNumber: 99\n      }, this), \" to use them in the memory.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 44,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"step-2-add-open-ai-api-key\",\n      children: \"Step #2: Add OpenAI API Key\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 46,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Add your OpenAI API key to the \", _jsxDEV(_components.code, {\n        children: \".env\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 48,\n        columnNumber: 32\n      }, this), \" file in the root of your project. It is required to generate embeddings for the documents.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 48,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"bash\",\n      code: \"OPENAI_API_KEY=your-openai-api-key\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-bash\",\n        children: \"<span><span style=\\\"color: #E1EFFF\\\">OPENAI_API_KEY</span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #A5FF90\\\">your-openai-api-key</span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 50,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 50,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"step-2-create-embeddings\",\n      children: \"Step #2: Create embeddings\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 54,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Save \", _jsxDEV(_components.a, {\n        href: \"https://langbase.com/docs/pipe/faqs\",\n        children: \"Pipe FAQs\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 56,\n        columnNumber: 6\n      }, this), \" page as a \", _jsxDEV(_components.code, {\n        children: \".pdf\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 56,\n        columnNumber: 65\n      }, this), \" or \", _jsxDEV(_components.code, {\n        children: \".txt\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 56,\n        columnNumber: 75\n      }, this), \" and add it to the memory. Next, create embeddings for the documents using the \", _jsxDEV(_components.code, {\n        children: \"embed\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 56,\n        columnNumber: 160\n      }, this), \" command. It will embed the documents and create a semantic index for the memory. Pass the memory name to the \", _jsxDEV(_components.code, {\n        children: \"embed\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 56,\n        columnNumber: 277\n      }, this), \" command using the \", _jsxDEV(_components.code, {\n        children: \"--memory\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 56,\n        columnNumber: 303\n      }, this), \" flag or \", _jsxDEV(_components.code, {\n        children: \"-m\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 56,\n        columnNumber: 322\n      }, this), \" for short.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 56,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"bash\",\n      code: \"baseai embed -m chat-with-docs\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-bash\",\n        children: \"<span><span style=\\\"color: #FAD000\\\">baseai</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">embed</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">-m</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">chat-with-docs</span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 58,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 58,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Once the embeddings are created, it will print a success message in the terminal.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 62,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"step-3-create-a-pipe-and-connect-memory\",\n      children: \"Step #3: Create a Pipe and Connect Memory\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 64,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Let's create a \", _jsxDEV(_components.a, {\n        href: \"/docs/pipe/quickstart\",\n        children: \"Pipe\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 66,\n        columnNumber: 16\n      }, this), \" and connect memory to it. Use the \", _jsxDEV(_components.code, {\n        children: \"pipe\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 66,\n        columnNumber: 80\n      }, this), \" command to create a new pipe. In addition to the pipe name and description, it will ask you to select the memory to use.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 66,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Use \", _jsxDEV(_components.code, {\n        children: \"chat-with-docs-rag\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 68,\n        columnNumber: 5\n      }, this), \" as the pipe name and select the memory \", _jsxDEV(_components.code, {\n        children: \"chat-with-docs\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 68,\n        columnNumber: 65\n      }, this), \" to connect it to the pipe.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 68,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"bash\",\n      code: \"baseai pipe\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-bash\",\n        children: \"<span><span style=\\\"color: #FAD000\\\">baseai</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">pipe</span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 70,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 70,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"It will create a pipe in your current directory under \", _jsxDEV(_components.code, {\n        children: \"baseai/pipes/chat-with-docs-rag.ts\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 74,\n        columnNumber: 55\n      }, this), \". It prints the path in the terminal. You can open the file and see the details.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 74,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"step-4-use-the-pipe\",\n      children: \"Step #4: Use the Pipe\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 77,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"In your \", _jsxDEV(_components.code, {\n        children: \"src/index.ts\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), \" file, add the following code:\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 79,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Add the following code to index.ts\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 81,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"ts\",\n      code: \"import { Pipe, streamText, getRunner } from '@baseai/core';\\nimport chatWithDocsPipeConfig from './baseai/pipes/chat-with-docs-rag';\\n\\n// Instantiate the pipe\\nconst pipe = new Pipe(chatWithDocsPipeConfig());\\n\\nasync function main() {\\n\\tconst {stream} = await streamText({\\n\\t\\tpipe,\\n\\t\\tmessages: [{role: 'user', content: 'How to create a pipe?'}],\\n\\t});\\n\\n\\t// Convert the stream to a stream runner.\\n\\tconst runner = getRunner(stream);\\n\\n\\t// Listen for events.\\n\\trunner.on('connect', () => {\\n\\t\\tconsole.log('Stream started.\\\\n');\\n\\t});\\n\\n\\trunner.on('content', content => {\\n\\t\\tprocess.stdout.write(content);\\n\\t});\\n\\n\\trunner.on('end', () => {\\n\\t\\tconsole.log('\\\\nStream ended.');\\n\\t});\\n\\n\\trunner.on('error', error => {\\n\\t\\tconsole.error('Error:', error);\\n\\t});\\n}\\n\\nmain();\\n\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-ts\",\n        children: \"<span><span style=\\\"color: #FF9D00\\\">import</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span><span style=\\\"color: #9EFFFF\\\"> Pipe</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> streamText</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> getRunner </span><span style=\\\"color: #E1EFFF\\\">}</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00; font-style: italic\\\">from</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">@baseai/core</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span><span style=\\\"color: #FF9D00\\\">import</span><span style=\\\"color: #9EFFFF\\\"> chatWithDocsPipeConfig </span><span style=\\\"color: #FF9D00; font-style: italic\\\">from</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">./baseai/pipes/chat-with-docs-rag</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\">// Instantiate the pipe</span></span>\\n<span><span style=\\\"color: #FF9D00\\\">const</span><span style=\\\"color: #9EFFFF\\\"> pipe </span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">new</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">Pipe</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #FAD000\\\">chatWithDocsPipeConfig</span><span style=\\\"color: #E1EFFF\\\">());</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00; font-style: italic\\\">async</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">function</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">main</span><span style=\\\"color: #E1EFFF\\\">()</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #FF9D00\\\">const</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span><span style=\\\"color: #9EFFFF\\\">stream</span><span style=\\\"color: #E1EFFF\\\">}</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">await</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">streamText</span><span style=\\\"color: #E1EFFF\\\">({</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tpipe</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tmessages</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[{</span><span style=\\\"color: #9EFFFF\\\">role</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">user</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> content</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">How to create a pipe?</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">}],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #E1EFFF\\\">});</span></span>\\n<span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">\\t</span><span style=\\\"color: #B362FF; font-style: italic\\\">// Convert the stream to a stream runner.</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #FF9D00\\\">const</span><span style=\\\"color: #9EFFFF\\\"> runner </span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">getRunner</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #9EFFFF\\\">stream</span><span style=\\\"color: #E1EFFF\\\">);</span></span>\\n<span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">\\t</span><span style=\\\"color: #B362FF; font-style: italic\\\">// Listen for events.</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\trunner</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FAD000\\\">on</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">connect</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FFEE80\\\">()</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">=&gt;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tconsole</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FAD000\\\">log</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">Stream started.</span><span style=\\\"color: #FF628C\\\">\\\\n</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">);</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #E1EFFF\\\">});</span></span>\\n<span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\trunner</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FAD000\\\">on</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">content</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> content </span><span style=\\\"color: #FAD000\\\">=&gt;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tprocess</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FFEE80\\\">stdout</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FAD000\\\">write</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #9EFFFF\\\">content</span><span style=\\\"color: #E1EFFF\\\">);</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #E1EFFF\\\">});</span></span>\\n<span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\trunner</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FAD000\\\">on</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">end</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FFEE80\\\">()</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">=&gt;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tconsole</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FAD000\\\">log</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #FF628C\\\">\\\\n</span><span style=\\\"color: #A5FF90\\\">Stream ended.</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">);</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #E1EFFF\\\">});</span></span>\\n<span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\trunner</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FAD000\\\">on</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">error</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> error </span><span style=\\\"color: #FAD000\\\">=&gt;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tconsole</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FAD000\\\">error</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">Error:</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> error</span><span style=\\\"color: #E1EFFF\\\">);</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #E1EFFF\\\">});</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">}</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FAD000\\\">main</span><span style=\\\"color: #E1EFFF\\\">();</span></span>\\n<span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 84,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 84,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"step-5-run-the-code\",\n      children: \"Step #5: Run the code\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 123,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Run the \", _jsxDEV(_components.code, {\n        children: \"index.ts\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), \" file using the following command:\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 125,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"bash\",\n      code: \"npx tsx index.ts\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-bash\",\n        children: \"<span><span style=\\\"color: #FAD000\\\">npx</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">tsx</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">index.ts</span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 127,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 127,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"It will prompt the LLM model to get answers to your questions. It will search the memory and provide you with the best possible answer to your question.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 131,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"For instance, if you ask \\\"How to create a pipe?\\\", it gives you the answer from the memory.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 133,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"txt\",\n      code: \"To create a Pipe, you need to follow these steps:\\n\\n1. Select any LLM model (by default, OpenAI gpt-4o-mini is selected).\\n2. If the Pipe is of type generate, simply run it.\\n3. If it is a chat pipe, write \\\"hello\\\" in Playground and then run the Pipe.\\n\\nAdditionally, keep in mind that when you create a Pipe, it already contains a readme which can be edited at any time [1].\\n\\nSources:\\n[1] pipe faqs.txt\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-txt\",\n        children: \"<span><span style=\\\"color: undefined\\\">To create a Pipe, you need to follow these steps:</span></span>\\n<span><span style=\\\"color: undefined\\\"></span></span>\\n<span><span style=\\\"color: undefined\\\">1. Select any LLM model (by default, OpenAI gpt-4o-mini is selected).</span></span>\\n<span><span style=\\\"color: undefined\\\">2. If the Pipe is of type generate, simply run it.</span></span>\\n<span><span style=\\\"color: undefined\\\">3. If it is a chat pipe, write &quot;hello&quot; in Playground and then run the Pipe.</span></span>\\n<span><span style=\\\"color: undefined\\\"></span></span>\\n<span><span style=\\\"color: undefined\\\">Additionally, keep in mind that when you create a Pipe, it already contains a readme which can be edited at any time [1].</span></span>\\n<span><span style=\\\"color: undefined\\\"></span></span>\\n<span><span style=\\\"color: undefined\\\">Sources:</span></span>\\n<span><span style=\\\"color: undefined\\\">[1] pipe faqs.txt</span></span>\\n<span><span style=\\\"color: undefined\\\"></span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 135,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 135,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 150,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"next-steps\",\n      children: \"Next Steps\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 152,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"✨ \", _jsxDEV(_components.strong, {\n        children: \"Congratulations!\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 154,\n        columnNumber: 3\n      }, this), \" You have successfully created a RAG system using memory. You can deploy this system to Langbase using the \", _jsxDEV(_components.a, {\n        href: \"/deployment/deploy\",\n        children: \"deploy\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 154,\n        columnNumber: 130\n      }, this), \" command.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 154,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 156,\n      columnNumber: 1\n    }, this)]\n  }, undefined, true, {\n    fileName: \"<source.js>\",\n    lineNumber: 1,\n    columnNumber: 1\n  }, this);\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsxDEV(MDXLayout, {\n    ...props,\n    children: _jsxDEV(_createMdxContent, {\n      ...props\n    }, undefined, false, {\n      fileName: \"<source.js>\"\n    }, this)\n  }, undefined, false, {\n    fileName: \"<source.js>\"\n  }, this) : _createMdxContent(props);\n}\nreturn {\n  sections,\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"frontmatter":{"url":"https://baseai.dev/docs/memory/quickstart","slug":"quickstart","title":"Quickstart - Memory","imageUrl":"https://baseai.dev/api/og?title=Quickstart&section=Memory","tags":["baseai","memory","langbase","quickstart"],"section":"Memory","description":"Let's create a Chat With Docs RAG system using memory and AI LLM models like GPT, Llama, and Mistral. Build and deploy with ease.","modifiedDate":"2024-09-24T00:00:00.000Z","publishedDate":"2024-09-24T00:00:00.000Z"}},{"slug":"retrieve","section":"memory","content":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsxDEV: _jsxDEV} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nconst sections = [{\n  title: \"Step #0 Prerequisites\",\n  id: \"step-0-prerequisites\",\n  ...undefined\n}, {\n  title: \"Step #1 Retrieve information\",\n  id: \"step-1-retrieve-information\",\n  ...undefined\n}];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    hr: \"hr\",\n    p: \"p\",\n    pre: \"pre\",\n    strong: \"strong\",\n    ..._provideComponents(),\n    ...props.components\n  }, {Note} = _components;\n  if (!Note) _missingMdxReference(\"Note\", true, \"6:1-8:8\");\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(_components.h1, {\n      children: \"Retrieve Memory\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 2,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Retrieve similar chunks of information from memory using BaseAI CLI.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 4,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(Note, {\n      children: _jsxDEV(_components.p, {\n        children: [\"Please make sure to add \", _jsxDEV(_components.code, {\n          children: \"OPENAI_API_KEY\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 7,\n          columnNumber: 25\n        }, this), \" to \", _jsxDEV(_components.code, {\n          children: \".env\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 7,\n          columnNumber: 45\n        }, this), \" file in the root of your project. This is required to generate embeddings for the documents in the memory.\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 7,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 6,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 10,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"step-0-prerequisites\",\n      children: \"Step #0 Prerequisites\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 12,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Make sure you have a memory \", _jsxDEV(_components.a, {\n        href: \"/docs/memory/create\",\n        children: \"created and embedded\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 14,\n        columnNumber: 29\n      }, this), \".\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 14,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 16,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"step-1-retrieve-information\",\n      children: \"Step #1 Retrieve information\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 18,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Retrieve similar chunks of information from memory using the \", _jsxDEV(_components.code, {\n        children: \"retrieve\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 20,\n        columnNumber: 62\n      }, this), \" command. You need to provide the memory name and the query to retrieve the information.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 20,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [_jsxDEV(_components.strong, {\n        children: \"Upto 20 similar chunks\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 22,\n        columnNumber: 1\n      }, this), \" of information are retrieved from the memory for the query. The output contains the information, similarity score, and the source of the information.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 22,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"The output is from memory created in \", _jsxDEV(_components.a, {\n        href: \"/docs/memory/quickstart\",\n        children: \"quickstart guide\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 24,\n        columnNumber: 38\n      }, this), \".\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 24,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"bash\",\n      code: \"\\nbaseai retrieve -m agent-memory -q \\\"Default LLM\\\"\\n\\n# Output\\n\\n# │  1.\\n# │\\n# │  FAQ\\n# │  Let's take a look at some frequently asked questions about Pipe.\\n# │\\n# │  What is a Pipe?\\n# │  Pipe is a high-level layer to Large Language Models (LLMs) that creates a personalized AI assistant for your queries. It can leverage any LLM models, tools, and knowledge with your datasets to assist with your queries.\\n# │\\n# │  What is a System Prompt Instruction?\\n# │  Initial setup or instruction for the LLM that configures or instructs the LLM on how to behave.\\n# │\\n# │  What is a User Prompt?\\n# │  A text input that a user provides to an LLM to which the model responds.\\n# │\\n# │  What is an AI Prompt?\\n# │  The LLM's generated output in response to a user prompt.\\n# │\\n# │  How to run Playground in Pipe?\\n# │  Assuming the Pipe API keys are configured:\\n# │\\n# │  Select any LLM model. By default OpenAI gpt-4o-mini is selected.\\n# │  If the Pipe is of type generate, simply run it.\\n# │  If it is a chat pipe, write hello in Playground and run the Pipe.\\n# │  Can I add readme to a pipe?\\n# │  Yes, you can add readme to any Pipe.\\n# │\\n# │  Similarity: 0.19975483630794752\\n# │  Source: pipe faqs.txt\\n# │\\n# │  --------------------\\n# │\\n# │  2.\\n# │\\n# │  Select any LLM model. By default OpenAI gpt-4o-mini is selected.\\n# │  If the Pipe is of type generate, simply run it.\\n# │  If it is a chat pipe, write hello in Playground and run the Pipe.\\n# │  Can I add readme to a pipe?\\n# │  Yes, you can add readme to any Pipe.\\n# │\\n# │  When you create a Pipe, it already contains a readme. Go all the way down in a Pipe. You will find a readme there. Simply edit it.\\n# │\\n# │  Can I run experiments on a chat Pipe?\\n# │  No, only generate type Pipes can run experiments.\\n# │\\n# │  Similarity: 0.17905735369261633\\n# │  Source: pipe faqs.txt\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-bash\",\n        children: \"<span></span>\\n<span><span style=\\\"color: #FAD000\\\">baseai</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">retrieve</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">-m</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">agent-memory</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">-q</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&quot;</span><span style=\\\"color: #A5FF90\\\">Default LLM</span><span style=\\\"color: #92FC79\\\">&quot;</span></span>\\n<span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># Output</span></span>\\n<span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># │  1.</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># │</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># │  FAQ</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># │  Let&#39;s take a look at some frequently asked questions about Pipe.</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># │</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># │  What is a Pipe?</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># │  Pipe is a high-level layer to Large Language Models (LLMs) that creates a personalized AI assistant for your queries. It can leverage any LLM models, tools, and knowledge with your datasets to assist with your queries.</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># │</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># │  What is a System Prompt Instruction?</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># │  Initial setup or instruction for the LLM that configures or instructs the LLM on how to behave.</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># │</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># │  What is a User Prompt?</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># │  A text input that a user provides to an LLM to which the model responds.</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># │</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># │  What is an AI Prompt?</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># │  The LLM&#39;s generated output in response to a user prompt.</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># │</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># │  How to run Playground in Pipe?</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># │  Assuming the Pipe API keys are configured:</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># │</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># │  Select any LLM model. By default OpenAI gpt-4o-mini is selected.</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># │  If the Pipe is of type generate, simply run it.</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># │  If it is a chat pipe, write hello in Playground and run the Pipe.</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># │  Can I add readme to a pipe?</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># │  Yes, you can add readme to any Pipe.</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># │</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># │  Similarity: 0.19975483630794752</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># │  Source: pipe faqs.txt</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># │</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># │  --------------------</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># │</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># │  2.</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># │</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># │  Select any LLM model. By default OpenAI gpt-4o-mini is selected.</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># │  If the Pipe is of type generate, simply run it.</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># │  If it is a chat pipe, write hello in Playground and run the Pipe.</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># │  Can I add readme to a pipe?</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># │  Yes, you can add readme to any Pipe.</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># │</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># │  When you create a Pipe, it already contains a readme. Go all the way down in a Pipe. You will find a readme there. Simply edit it.</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># │</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># │  Can I run experiments on a chat Pipe?</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># │  No, only generate type Pipes can run experiments.</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># │</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># │  Similarity: 0.17905735369261633</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># │  Source: pipe faqs.txt</span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 27,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 27,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 81,\n      columnNumber: 1\n    }, this)]\n  }, undefined, true, {\n    fileName: \"<source.js>\",\n    lineNumber: 1,\n    columnNumber: 1\n  }, this);\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsxDEV(MDXLayout, {\n    ...props,\n    children: _jsxDEV(_createMdxContent, {\n      ...props\n    }, undefined, false, {\n      fileName: \"<source.js>\"\n    }, this)\n  }, undefined, false, {\n    fileName: \"<source.js>\"\n  }, this) : _createMdxContent(props);\n}\nreturn {\n  sections,\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component, place) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\" + (place ? \"\\nIt’s referenced in your code at `\" + place + \"`\" : \"\"));\n}\n","frontmatter":{},"scope":{}},"frontmatter":{"url":"https://baseai.dev/docs/memory/retrieve","slug":"retrieve","title":"Retrieve - Memory","imageUrl":"https://baseai.dev/api/og?title=Retrieve&section=Memory","tags":["baseai","memory","langbase","retrieve"],"section":"Memory","description":"Retrieve similar chunks of information from memory using BaseAI CLI.","modifiedDate":"2024-09-24T00:00:00.000Z","publishedDate":"2024-09-24T00:00:00.000Z"}},{"slug":"concepts","section":"pipe","content":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsxDEV: _jsxDEV} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nconst sections = [{\n  title: \"Meta\",\n  id: \"meta\",\n  ...undefined\n}, {\n  title: \"Variables\",\n  id: \"variables\",\n  ...undefined\n}, {\n  title: \"Safety\",\n  id: \"safety\",\n  ...undefined\n}, {\n  title: \"Experiments\",\n  id: \"experiments\",\n  ...undefined\n}, {\n  title: \"Few-shot training\",\n  id: \"few-shot-training\",\n  ...undefined\n}, {\n  title: \"Pipe level keysets\",\n  id: \"pipe-level-keysets\",\n  ...undefined\n}];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    h3: \"h3\",\n    hr: \"hr\",\n    p: \"p\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(_components.h1, {\n      children: \"Concepts\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 2,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Pipe is the fastest way to turn ideas into AI. Pipe is like an AI feature. It is a high-level layer to Large Language Models (LLMs) that creates a personalized AI assistant for your queries.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 4,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Let's understand the key concepts of Pipe:\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 6,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 8,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"meta\",\n      children: \"Meta\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 10,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"The Pipe meta defines its configuration. It contains the following information:\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 12,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h3, {\n      children: \"Stream mode\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 14,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Handles whether the Pipe should \", _jsxDEV(_components.a, {\n        href: \"https://langbase.com/docs/features/stream\",\n        children: \"stream\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 16,\n        columnNumber: 33\n      }, this), \" the response or not. If enabled, the Pipe will stream the response in real-time.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 16,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h3, {\n      children: \"Store messages\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 18,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Pipe can store both prompts and their completions if the \", _jsxDEV(_components.a, {\n        href: \"https://langbase.com/docs/features/store-messages\",\n        children: \"Store messages\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 20,\n        columnNumber: 58\n      }, this), \" in Pipe meta is enabled on. Otherwise, only \", _jsxDEV(_components.a, {\n        href: \"https://langbase.com/docs/features/prompt\",\n        children: \"system prompts\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 20,\n        columnNumber: 170\n      }, this), \" and \", _jsxDEV(_components.a, {\n        href: \"https://langbase.com/docs/features/few-shot\",\n        children: \"few-shot messages\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 20,\n        columnNumber: 234\n      }, this), \" will be saved. No completions, final prompts or variables will be retained to ensure privacy.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 20,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h3, {\n      children: \"Moderate\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 22,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Available only for OpenAI models. \", _jsxDEV(_components.a, {\n        href: \"https://langbase.com/docs/features/moderation\",\n        children: \"Moderation\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 24,\n        columnNumber: 35\n      }, this), \" endpoint by OpenAI identifies harmful content. If enabled, Langbase blocks flagged requests automatically.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 24,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h3, {\n      children: \"JSON\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 26,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Enforces the completion to be in \", _jsxDEV(_components.a, {\n        href: \"https://langbase.com/docs/features/json-mode\",\n        children: \"JSON format\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 28,\n        columnNumber: 34\n      }, this), \". If enabled, the completion will be in JSON format.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 28,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 30,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"variables\",\n      children: \"Variables\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 32,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Any text written between \", _jsxDEV(_components.code, {\n        children: \"{{}}\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 34,\n        columnNumber: 26\n      }, this), \" in your prompt instructions acts as a \", _jsxDEV(_components.a, {\n        href: \"https://langbase.com/docs/features/variables\",\n        children: \"variable\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 34,\n        columnNumber: 71\n      }, this), \" to which you can assign different values using the variable section. Variables will appear once you add them using \", _jsxDEV(_components.code, {\n        children: \"{{variableName}}\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 34,\n        columnNumber: 243\n      }, this), \".\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 34,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"On runtime, these \", _jsxDEV(_components.a, {\n        href: \"https://langbase.com/docs/features/variables\",\n        children: \"variable\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 36,\n        columnNumber: 19\n      }, this), \" will dynamically populate with the assigned values during execution\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 36,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 38,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"safety\",\n      children: \"Safety\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 40,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Define AI \", _jsxDEV(_components.a, {\n        href: \"https://langbase.com/docs/features/safety\",\n        children: \"safety\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), \" prompt for any LLM inside a Pipe. For instance, do not answer questions outside of the given context.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 42,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"One of its use cases can be to ensure the LLM does not provide any sensitive information in its response from the provided context.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 44,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 46,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"experiments\",\n      children: \"Experiments\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 48,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"They help you learn how your latest Pipe config will affect LLM response by running it against your previous \", _jsxDEV(_components.code, {\n        children: \"generate\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 50,\n        columnNumber: 110\n      }, this), \" requests.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 50,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"One example of \", _jsxDEV(_components.a, {\n        href: \"https://langbase.com/docs/features/experiments\",\n        children: \"Experiments\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 52,\n        columnNumber: 16\n      }, this), \" can be changing Pipe's LLM model to \", _jsxDEV(_components.code, {\n        children: \"gemma-7b-it\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 52,\n        columnNumber: 114\n      }, this), \" from \", _jsxDEV(_components.code, {\n        children: \"gpt-4-turbo-preview\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 52,\n        columnNumber: 133\n      }, this), \" to check how the response will look like.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 52,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 54,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"few-shot-training\",\n      children: \"Few-shot training\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 56,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"It helps AI LLM pick up and apply knowledge from just a handful of examples.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 58,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Pipe lets you define multiple user and AI assistant prompts and completion pairs that can be used to \", _jsxDEV(_components.a, {\n        href: \"https://langbase.com/docs/features/few-shot\",\n        children: \"few-shot train\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 60,\n        columnNumber: 102\n      }, this), \" any LLM.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 60,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 62,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"pipe-level-keysets\",\n      children: \"Pipe level keysets\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 64,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Pipe LLM keyset is specific to each individual pipe. When selected, the Pipe doesn't use the user/org LLM API keys but instead use the Pipe level \", _jsxDEV(_components.a, {\n        href: \"https://langbase.com/docs/features/keysets\",\n        children: \"keyset\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 66,\n        columnNumber: 147\n      }, this), \" added to it in its settings.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 66,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 68,\n      columnNumber: 1\n    }, this)]\n  }, undefined, true, {\n    fileName: \"<source.js>\",\n    lineNumber: 1,\n    columnNumber: 1\n  }, this);\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsxDEV(MDXLayout, {\n    ...props,\n    children: _jsxDEV(_createMdxContent, {\n      ...props\n    }, undefined, false, {\n      fileName: \"<source.js>\"\n    }, this)\n  }, undefined, false, {\n    fileName: \"<source.js>\"\n  }, this) : _createMdxContent(props);\n}\nreturn {\n  sections,\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"frontmatter":{"url":"https://baseai.dev/docs/pipe/concepts","slug":"concepts","title":"Concepts - Pipe","imageUrl":"https://baseai.dev/api/og?title=Concepts&section=Pipe","tags":["baseai","concepts","langbase"],"section":"Pipe","description":"Core concepts of Pipe like variables, safety, experiments, few-shot training, etc.","modifiedDate":"2024-09-24T00:00:00.000Z","publishedDate":"2024-09-24T00:00:00.000Z"}},{"slug":"faqs","section":"pipe","content":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsxDEV: _jsxDEV} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nconst sections = [{\n  title: \"What is a Pipe?\",\n  id: \"what-is-a-pipe\",\n  ...undefined\n}, {\n  title: \"What is a System Prompt Instruction?\",\n  id: \"what-is-a-system-prompt-instruction\",\n  ...undefined\n}, {\n  title: \"What is a User Prompt?\",\n  id: \"what-is-a-user-prompt\",\n  ...undefined\n}, {\n  title: \"What is an AI Prompt?\",\n  id: \"what-is-an-ai-prompt\",\n  ...undefined\n}];\nfunction _createMdxContent(props) {\n  const _components = {\n    h1: \"h1\",\n    h2: \"h2\",\n    hr: \"hr\",\n    p: \"p\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(_components.h1, {\n      children: \"FAQ\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 2,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Let's take a look at some frequently asked questions about Pipe.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 4,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 6,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"what-is-a-pipe\",\n      children: \"What is a Pipe?\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 8,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Pipe is a high-level layer to Large Language Models (LLMs) that creates a personalized AI assistant for your queries. It can leverage any LLM models, tools, and knowledge with your datasets to assist with your queries.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 10,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 12,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"what-is-a-system-prompt-instruction\",\n      children: \"What is a System Prompt Instruction?\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 14,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Initial setup or instruction for the LLM that configures or instructs the LLM on how to behave.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 16,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 18,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"what-is-a-user-prompt\",\n      children: \"What is a User Prompt?\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 20,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"A text input that a user provides to an LLM to which the model responds.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 22,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 24,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"what-is-an-ai-prompt\",\n      children: \"What is an AI Prompt?\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 26,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"The LLM's generated output in response to a user prompt.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 28,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 30,\n      columnNumber: 1\n    }, this)]\n  }, undefined, true, {\n    fileName: \"<source.js>\",\n    lineNumber: 1,\n    columnNumber: 1\n  }, this);\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsxDEV(MDXLayout, {\n    ...props,\n    children: _jsxDEV(_createMdxContent, {\n      ...props\n    }, undefined, false, {\n      fileName: \"<source.js>\"\n    }, this)\n  }, undefined, false, {\n    fileName: \"<source.js>\"\n  }, this) : _createMdxContent(props);\n}\nreturn {\n  sections,\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"frontmatter":{"url":"https://baseai.dev/docs/pipe/faqs","slug":"faqs","title":"FAQ - Pipe","imageUrl":"https://baseai.dev/api/og?title=FAQ&section=Pipe","tags":["baseai","pipe","langbase"],"section":"Pipe","description":"Let's take a look at some frequently asked questions about Pipe.","modifiedDate":"2024-09-24T00:00:00.000Z","publishedDate":"2024-09-24T00:00:00.000Z"}},{"slug":"quickstart","section":"pipe","content":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsxDEV: _jsxDEV} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nconst sections = [{\n  title: \"Step #0: Initialize BaseAI\",\n  id: \"step-0-initialize-base-ai\",\n  ...undefined\n}, {\n  title: \"Step #1: Create a Pipe\",\n  id: \"step-1-create-a-pipe\",\n  ...undefined\n}, {\n  title: \"Step #2: Add your prompt\",\n  id: \"step-2-add-your-prompt\",\n  ...undefined\n}, {\n  title: \"Step #3: View and Configure your pipe\",\n  id: \"step-3-view-and-configure-your-pipe\",\n  ...undefined\n}, {\n  title: \"Step #4: Use the Pipe\",\n  id: \"step-4-use-the-pipe\",\n  ...undefined\n}, {\n  title: \"Step #6 Start baseai server\",\n  id: \"step-6-start-baseai-server\",\n  ...undefined\n}, {\n  title: \"Step #5: Run the code\",\n  id: \"step-5-run-the-code\",\n  ...undefined\n}, {\n  title: \"Next Steps\",\n  id: \"next-steps\",\n  ...undefined\n}];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    em: \"em\",\n    h1: \"h1\",\n    h2: \"h2\",\n    h3: \"h3\",\n    hr: \"hr\",\n    li: \"li\",\n    p: \"p\",\n    pre: \"pre\",\n    strong: \"strong\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  }, {CTAButtons, Img} = _components;\n  if (!CTAButtons) _missingMdxReference(\"CTAButtons\", true, \"28:1-30:3\");\n  if (!Img) _missingMdxReference(\"Img\", true, \"32:1-37:3\");\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(_components.h1, {\n      children: \"Quickstart: Build an AI to Generate Titles\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 2,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h3, {\n      children: \"Let's build your first AI pipe in a minute.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 4,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 6,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"In this quickstart guide, you will locally:\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 8,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.ul, {\n      children: [\"\\n\", _jsxDEV(_components.li, {\n        children: [_jsxDEV(_components.strong, {\n          children: \"Create\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 10,\n          columnNumber: 5\n        }, this), \" an AI \", _jsxDEV(_components.a, {\n          href: \"https://langbase.com/docs/pipe\",\n          children: \"pipe\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 10,\n          columnNumber: 22\n        }, this), \" that uses an LLM to generate titles.\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 10,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: [_jsxDEV(_components.strong, {\n          children: \"Use\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 11,\n          columnNumber: 5\n        }, this), \" an LLM model like GPT, Llama, Mistral, etc.\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 11,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: [_jsxDEV(_components.strong, {\n          children: \"Build\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 12,\n          columnNumber: 5\n        }, this), \" your pipe with configuration and meta settings.\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 12,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: [_jsxDEV(_components.strong, {\n          children: \"Design\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 13,\n          columnNumber: 5\n        }, this), \" a prompt with system, safety, and few-shot messages.\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 13,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: [_jsxDEV(_components.strong, {\n          children: \"Experiment\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 14,\n          columnNumber: 5\n        }, this), \" with your AI pipe locally using BaseAI.\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 14,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: [_jsxDEV(_components.strong, {\n          children: \"Observe\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 15,\n          columnNumber: 5\n        }, this), \" real-time performance, usage, and logs.\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 15,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: [_jsxDEV(_components.strong, {\n          children: \"Deploy\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 16,\n          columnNumber: 5\n        }, this), \" your AI features to Langbase API (global, highly available, and scalable) for production.\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 16,\n        columnNumber: 1\n      }, this), \"\\n\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 10,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 18,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h3, {\n      children: \"Let's get started\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 20,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Let’s build a Pipe locally using BaseAI that will generate title ideas for your next blog using \", _jsxDEV(_components.a, {\n        href: \"/docs/supported-models-and-providers/\",\n        children: \"any LLM\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 22,\n        columnNumber: 97\n      }, this), \" from OpenAI, Together, Anthropic, etc. This is going to be fun. \", _jsxDEV(_components.em, {\n        children: \"Much fun!\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 22,\n        columnNumber: 210\n      }, this)]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 22,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 24,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Pipe is your custom-built AI agent as an API. It's the fastest way to ship AI features/apps.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 26,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(CTAButtons, {\n      className: \"mt-2 mb-2\",\n      primary: {\n        href: '/pipe/quickstart',\n        text: '⌘ What is a Pipe?',\n        sub: '(Learn more)'\n      }\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 28,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(Img, {\n      light: \"https://langbase.com/docs/pipe/pipe.png\",\n      dark: \"https://langbase.com/docs/pipe/pipe.png\",\n      alt: \"What is a Pipe\",\n      caption: \"What is a Pipe\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 32,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 39,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"step-0-initialize-base-ai\",\n      children: \"Step #0: Initialize BaseAI\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 41,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Please initialize BaseAI in your project using the following command:\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 43,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"bash\",\n      code: \"npx baseai init\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-bash\",\n        children: \"<span><span style=\\\"color: #FAD000\\\">npx</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">baseai</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">init</span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 45,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 45,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"step-1-create-a-pipe\",\n      children: \"Step #1: Create a Pipe\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 49,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Navigate to your project directory, and create a new pipe using the \", _jsxDEV(_components.code, {\n        children: \"baseai pipe\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 51,\n        columnNumber: 69\n      }, this), \" command. It will ask you for the name, description, and other details of the pipe step-by-step. Add the name, description, and set status to private:\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 51,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"bash\",\n      code: \"npx baseai pipe\\n\\n# Output\\n# ◇  Name of the pipe\\n# │  ai-title-generator\\n# │\\n# ◇  Description of the pipe\\n# │  Pipe to create title ideas with AI\\n# │\\n# ◇  Status of the pipe\\n# │  Private\\n# │\\n\\n# continued in the next step...\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-bash\",\n        children: \"<span><span style=\\\"color: #FAD000\\\">npx</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">baseai</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">pipe</span></span>\\n<span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># Output</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># ◇  Name of the pipe</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># │  ai-title-generator</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># │</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># ◇  Description of the pipe</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># │  Pipe to create title ideas with AI</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># │</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># ◇  Status of the pipe</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># │  Private</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># │</span></span>\\n<span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># continued in the next step...</span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 53,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 53,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"step-2-add-your-prompt\",\n      children: \"Step #2: Add your prompt\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 70,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"It will ask for the system prompt next. We will use the following system prompt to generate title ideas:\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 72,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"bash\",\n      code: \"You're a helpful AI assistant. Give me 5 title ideas for an article about the topic given by the user.\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-bash\",\n        children: \"<span><span style=\\\"color: #FAD000\\\">You</span><span style=\\\"color: #FAD000\\\">&#39;re a helpful AI assistant. Give me 5 title ideas for an article about the topic given by the user.</span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 74,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 74,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Enter this prompt in the terminal. It will create a pipe in your current directory under \", _jsxDEV(_components.code, {\n        children: \"baseai/pipes/ai-title-generator.ts\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 78,\n        columnNumber: 90\n      }, this), \".\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 78,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"bash\",\n      code: \"# ◇  System prompt\\n# │  You're a helpful AI assistant. Give me 5 title ideas for an article about the topic given by the user.\\n# │\\n# ◇  Select memory for this pipe (optional)\\n# │  none\\n# │\\n# ◇  Select tools for this pipe (optional)\\n# │  none\\n# │\\n# └  Pipe created successfully at /baseai/pipes/ai-title-generator.ts\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-bash\",\n        children: \"<span><span style=\\\"color: #B362FF; font-style: italic\\\"># ◇  System prompt</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># │  You&#39;re a helpful AI assistant. Give me 5 title ideas for an article about the topic given by the user.</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># │</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># ◇  Select memory for this pipe (optional)</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># │  none</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># │</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># ◇  Select tools for this pipe (optional)</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># │  none</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># │</span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># └  Pipe created successfully at /baseai/pipes/ai-title-generator.ts</span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 80,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 80,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"step-3-view-and-configure-your-pipe\",\n      children: \"Step #3: View and Configure your pipe\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 93,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Your pipe is created successfully at \", _jsxDEV(_components.code, {\n        children: \"/baseai/pipes/ai-title-generator.ts\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 95,\n        columnNumber: 38\n      }, this), \". Open the file, it will look like this:\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 95,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"ts\",\n      code: \"// baseai/pipes/ai-title-generator.ts\\nimport {PipeI} from '@baseai/core';\\n\\nconst pipeName = (): PipeI => ({\\n\\tapiKey: 'process.env.LANGBASE_USER_ORG_API_KEY', // Replace with your API key https://langbase.com/docs/api-reference/api-keys\\n\\tname: 'ai-title-generator',\\n\\tdescription: 'Pipe to create title ideas with AI',\\n\\tstatus: 'private',\\n\\tmodel: 'openai:gpt-4o-mini',\\n\\tstream: true,\\n\\tjson: false,\\n\\tstore: true,\\n\\tmoderate: true,\\n\\ttop_p: 1,\\n\\tmax_tokens: 1000,\\n\\ttemperature: 0.7,\\n\\tpresence_penalty: 1,\\n\\tfrequency_penalty: 1,\\n\\tstop: [],\\n\\ttool_choice: 'auto',\\n\\tparallel_tool_calls: false,\\n\\tmessages: [\\n\\t\\t{\\n\\t\\t\\trole: 'system',\\n\\t\\t\\tcontent: `You're a helpful AI assistant. Give me 5 title ideas for an article about the topic given by the user.`,\\n\\t\\t},\\n\\t],\\n\\tvariables: [],\\n\\tmemory: [],\\n\\ttools: [],\\n});\\n\\nexport default pipeName;\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-ts\",\n        children: \"<span><span style=\\\"color: #B362FF; font-style: italic\\\">// baseai/pipes/ai-title-generator.ts</span></span>\\n<span><span style=\\\"color: #FF9D00\\\">import</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span><span style=\\\"color: #9EFFFF\\\">PipeI</span><span style=\\\"color: #E1EFFF\\\">}</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00; font-style: italic\\\">from</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">@baseai/core</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">const</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">pipeName</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FFEE80\\\">()</span><span style=\\\"color: #FF9D00\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #80FFBB\\\">PipeI</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">=&gt;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">({</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tapiKey</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">process.env.LANGBASE_USER_ORG_API_KEY</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #B362FF; font-style: italic\\\">// Replace with your API key https://langbase.com/docs/api-reference/api-keys</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tname</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">ai-title-generator</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tdescription</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">Pipe to create title ideas with AI</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tstatus</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">private</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tmodel</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">openai:gpt-4o-mini</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tstream</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">true</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tjson</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">false</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tstore</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">true</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tmoderate</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">true</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\ttop_p</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">1</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tmax_tokens</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">1000</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\ttemperature</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">0</span><span style=\\\"color: #9EFFFF\\\">.</span><span style=\\\"color: #FF628C\\\">7</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tpresence_penalty</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">1</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tfrequency_penalty</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">1</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tstop</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\ttool_choice</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">auto</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tparallel_tool_calls</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">false</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tmessages</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t</span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\trole</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">system</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\tcontent</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #3AD900\\\">`You&#39;re a helpful AI assistant. Give me 5 title ideas for an article about the topic given by the user.`</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t</span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #E1EFFF\\\">],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tvariables</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tmemory</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\ttools</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[],</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">});</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">export</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">default</span><span style=\\\"color: #9EFFFF\\\"> pipeName</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 97,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 97,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"In the file, you can see the configuration of the pipe. You can modify the configuration as per your requirements. For instance, you can change the model, temperature, max_tokens, etc.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 133,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"It is called \", _jsxDEV(_components.code, {\n        children: \"pipeName\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 135,\n        columnNumber: 14\n      }, this), \" by default. You can change the name of the function as per your requirements. Let's name it \", _jsxDEV(_components.code, {\n        children: \"titleGeneratorPipeConfig\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 135,\n        columnNumber: 118\n      }, this), \".\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 135,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"ts\",\n      code: \"// baseai/pipes/ai-title-generator.ts\\nimport {PipeI} from '@baseai/core';\\n\\nexport const titleGeneratorPipeConfig = (): PipeI => ({\\n\\t... // Configuration\\n});\\n\\nexport default titleGeneratorPipeConfig;\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-ts\",\n        children: \"<span><span style=\\\"color: #B362FF; font-style: italic\\\">// baseai/pipes/ai-title-generator.ts</span></span>\\n<span><span style=\\\"color: #FF9D00\\\">import</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span><span style=\\\"color: #9EFFFF\\\">PipeI</span><span style=\\\"color: #E1EFFF\\\">}</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00; font-style: italic\\\">from</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">@baseai/core</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">export</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">const</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">titleGeneratorPipeConfig</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FFEE80\\\">()</span><span style=\\\"color: #FF9D00\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #80FFBB\\\">PipeI</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">=&gt;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">({</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #FF9D00\\\">...</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #B362FF; font-style: italic\\\">// Configuration</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">});</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">export</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">default</span><span style=\\\"color: #9EFFFF\\\"> titleGeneratorPipeConfig</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 137,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 137,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"step-4-use-the-pipe\",\n      children: \"Step #4: Use the Pipe\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 148,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Now that you have created the pipe, let's see it in action. Create a \", _jsxDEV(_components.code, {\n        children: \"index.ts\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 150,\n        columnNumber: 70\n      }, this), \" file in your project directory.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 150,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"bash\",\n      code: \"# Create a new file index.ts\\ntouch index.ts\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-bash\",\n        children: \"<span><span style=\\\"color: #B362FF; font-style: italic\\\"># Create a new file index.ts</span></span>\\n<span><span style=\\\"color: #FAD000\\\">touch</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">index.ts</span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 152,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 152,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"We will use the \", _jsxDEV(_components.code, {\n        children: \"Pipe\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 157,\n        columnNumber: 17\n      }, this), \" primitive from \", _jsxDEV(_components.code, {\n        children: \"@baseai/core\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 157,\n        columnNumber: 39\n      }, this), \" to run the pipe. Add the following code to \", _jsxDEV(_components.code, {\n        children: \"index.ts\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 157,\n        columnNumber: 97\n      }, this), \" file:\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 157,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"ts\",\n      code: \"import { Pipe, getRunner } from '@baseai/core';\\nimport { titleGeneratorPipeConfig } from './baseai/pipes/ai-title-generator';\\n\\n// Instantiate the pipe\\nconst pipe = new Pipe({\\n\\t...titleGeneratorPipeConfig(),\\n});\\n\\n// Demo user message\\nconst userMsg = 'Generate 5 blog title ideas for an article about Large Language Models';\\n\\n// Run the pipe in streaming mode\\n(async () => {\\n\\t{\\n\\t\\t// Run Stream\\n\\t\\tconst {stream} = await pipe.run({\\n\\t\\t\\tmessages: [{role: 'user', content: userMsg}],\\n\\t\\t\\tstream: true,\\n\\t\\t\\trawResponse: true,\\n\\t\\t});\\n\\n\\t\\tconst runner = getRunner(stream);\\n\\n\\t\\trunner.on('error', error => {\\n\\t\\t\\tconsole.error('Error:', error);\\n\\t\\t});\\n\\n\\t\\trunner.on('content', content => {\\n\\t\\t\\tprocess.stdout.write(content);\\n\\t\\t});\\n\\t}\\n})();\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-ts\",\n        children: \"<span><span style=\\\"color: #FF9D00\\\">import</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span><span style=\\\"color: #9EFFFF\\\"> Pipe</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> getRunner </span><span style=\\\"color: #E1EFFF\\\">}</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00; font-style: italic\\\">from</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">@baseai/core</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span><span style=\\\"color: #FF9D00\\\">import</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span><span style=\\\"color: #9EFFFF\\\"> titleGeneratorPipeConfig </span><span style=\\\"color: #E1EFFF\\\">}</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00; font-style: italic\\\">from</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">./baseai/pipes/ai-title-generator</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\">// Instantiate the pipe</span></span>\\n<span><span style=\\\"color: #FF9D00\\\">const</span><span style=\\\"color: #9EFFFF\\\"> pipe </span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">new</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">Pipe</span><span style=\\\"color: #E1EFFF\\\">({</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #FF9D00\\\">...</span><span style=\\\"color: #FAD000\\\">titleGeneratorPipeConfig</span><span style=\\\"color: #E1EFFF\\\">(),</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">});</span></span>\\n<span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\">// Demo user message</span></span>\\n<span><span style=\\\"color: #FF9D00\\\">const</span><span style=\\\"color: #9EFFFF\\\"> userMsg </span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">Generate 5 blog title ideas for an article about Large Language Models</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\">// Run the pipe in streaming mode</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #FF9D00; font-style: italic\\\">async</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FFEE80\\\">()</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">=&gt;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">\\t\\t</span><span style=\\\"color: #B362FF; font-style: italic\\\">// Run Stream</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t</span><span style=\\\"color: #FF9D00\\\">const</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span><span style=\\\"color: #9EFFFF\\\">stream</span><span style=\\\"color: #E1EFFF\\\">}</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">await</span><span style=\\\"color: #9EFFFF\\\"> pipe</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FAD000\\\">run</span><span style=\\\"color: #E1EFFF\\\">({</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\tmessages</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[{</span><span style=\\\"color: #9EFFFF\\\">role</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">user</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> content</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> userMsg</span><span style=\\\"color: #E1EFFF\\\">}],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\tstream</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">true</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\trawResponse</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">true</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t</span><span style=\\\"color: #E1EFFF\\\">});</span></span>\\n<span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t</span><span style=\\\"color: #FF9D00\\\">const</span><span style=\\\"color: #9EFFFF\\\"> runner </span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">getRunner</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #9EFFFF\\\">stream</span><span style=\\\"color: #E1EFFF\\\">);</span></span>\\n<span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\trunner</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FAD000\\\">on</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">error</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> error </span><span style=\\\"color: #FAD000\\\">=&gt;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\tconsole</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FAD000\\\">error</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">Error:</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> error</span><span style=\\\"color: #E1EFFF\\\">);</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t</span><span style=\\\"color: #E1EFFF\\\">});</span></span>\\n<span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\trunner</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FAD000\\\">on</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">content</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> content </span><span style=\\\"color: #FAD000\\\">=&gt;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\tprocess</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FFEE80\\\">stdout</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FAD000\\\">write</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #9EFFFF\\\">content</span><span style=\\\"color: #E1EFFF\\\">);</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t</span><span style=\\\"color: #E1EFFF\\\">});</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #E1EFFF\\\">}</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">})();</span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 159,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 159,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"We have added a demo user message to generate 5 blog title ideas for an article about LLMs. You can change this user message as per your requirements.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 194,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"txt\",\n      code: \"Generate 5 blog title ideas for an article about Large Language Models\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-txt\",\n        children: \"<span><span style=\\\"color: undefined\\\">Generate 5 blog title ideas for an article about Large Language Models</span></span>\\n<span><span style=\\\"color: undefined\\\"></span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 196,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 196,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Since we are using an OpenAI model, your OpenAI key is required. Create a \", _jsxDEV(_components.code, {\n        children: \".env\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 200,\n        columnNumber: 75\n      }, this), \" file in your project's root directory and add your OpenAI API key like this.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 200,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"bash\",\n      code: \"touch .env\\n\\nOPENAI_API_KEY=\\\"your-open-ai-key\\\" # Add your OpenAI API key in .env file\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-bash\",\n        children: \"<span><span style=\\\"color: #FAD000\\\">touch</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">.env</span></span>\\n<span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">OPENAI_API_KEY</span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #92FC79\\\">&quot;</span><span style=\\\"color: #A5FF90\\\">your-open-ai-key</span><span style=\\\"color: #92FC79\\\">&quot;</span><span style=\\\"color: #FFFFFF\\\"> </span><span style=\\\"color: #B362FF; font-style: italic\\\"># Add your OpenAI API key in .env file</span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 202,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 202,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"step-6-start-baseai-server\",\n      children: \"Step #6 Start baseai server\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 207,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"To run the pipe locally, you need to start the BaseAI server. Run the following command in your terminal:\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 209,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"bash\",\n      code: \"npx baseai dev\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-bash\",\n        children: \"<span><span style=\\\"color: #FAD000\\\">npx</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">baseai</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">dev</span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 211,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 211,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"This command will start the BaseAI server. You will also see the real-time logs in your terminal for observability.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 215,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"step-5-run-the-code\",\n      children: \"Step #5: Run the code\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 217,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Run the \", _jsxDEV(_components.code, {\n        children: \"index.ts\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), \" file using the following command:\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 219,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"bash\",\n      code: \"npx tsx index.ts\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-bash\",\n        children: \"<span><span style=\\\"color: #FAD000\\\">npx</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">tsx</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">index.ts</span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 221,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 221,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"It will prompt the LLM model to get the response for your title generation query. It will look something like this:\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 225,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"txt\",\n      code: \"Here are five blog title ideas for an article about Large Language Models (LLMs):\\n\\n1. **\\\"Unlocking the Power of Large Language Models: How They’re Shaping the Future of AI\\\"**\\n2. **\\\"The Rise of Large Language Models: Transforming Communication and Knowledge Processing\\\"**\\n3. **\\\"Exploring the Potential of LLMs: From GPT to BERT and Beyond\\\"**\\n4. **\\\"Large Language Models Explained: What They Are and Why They Matter in AI\\\"**\\n5. **\\\"Demystifying LLMs: How These AI Models Are Revolutionizing Industries\\\"**\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-txt\",\n        children: \"<span><span style=\\\"color: undefined\\\">Here are five blog title ideas for an article about Large Language Models (LLMs):</span></span>\\n<span><span style=\\\"color: undefined\\\"></span></span>\\n<span><span style=\\\"color: undefined\\\">1. **&quot;Unlocking the Power of Large Language Models: How They’re Shaping the Future of AI&quot;**</span></span>\\n<span><span style=\\\"color: undefined\\\">2. **&quot;The Rise of Large Language Models: Transforming Communication and Knowledge Processing&quot;**</span></span>\\n<span><span style=\\\"color: undefined\\\">3. **&quot;Exploring the Potential of LLMs: From GPT to BERT and Beyond&quot;**</span></span>\\n<span><span style=\\\"color: undefined\\\">4. **&quot;Large Language Models Explained: What They Are and Why They Matter in AI&quot;**</span></span>\\n<span><span style=\\\"color: undefined\\\">5. **&quot;Demystifying LLMs: How These AI Models Are Revolutionizing Industries&quot;**</span></span>\\n<span><span style=\\\"color: undefined\\\"></span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 227,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 227,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"This all happens locally on your machine and the response should be streamed in your terminal.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 237,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 239,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"next-steps\",\n      children: \"Next Steps\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 241,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"✨ \", _jsxDEV(_components.strong, {\n        children: \"Congratulations!\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 243,\n        columnNumber: 3\n      }, this), \" You have successfully created an AI Title generator pipe locally using BaseAI.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 243,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"After testing locally, you can deploy this pipe seamlessly to Langbase using the \", _jsxDEV(_components.a, {\n        href: \"/docs/deployment/deploy\",\n        children: \"deploy\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 245,\n        columnNumber: 82\n      }, this), \" command.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 245,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 247,\n      columnNumber: 1\n    }, this)]\n  }, undefined, true, {\n    fileName: \"<source.js>\",\n    lineNumber: 1,\n    columnNumber: 1\n  }, this);\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsxDEV(MDXLayout, {\n    ...props,\n    children: _jsxDEV(_createMdxContent, {\n      ...props\n    }, undefined, false, {\n      fileName: \"<source.js>\"\n    }, this)\n  }, undefined, false, {\n    fileName: \"<source.js>\"\n  }, this) : _createMdxContent(props);\n}\nreturn {\n  sections,\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component, place) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\" + (place ? \"\\nIt’s referenced in your code at `\" + place + \"`\" : \"\"));\n}\n","frontmatter":{},"scope":{}},"frontmatter":{"url":"https://baseai.dev/docs/pipe/quickstart","slug":"quickstart","title":"Pipe Quickstart - Create your first Pipe - Pipe","imageUrl":"https://baseai.dev/api/og?title=Pipe Quickstart - Create your first Pipe&section=Pipe","tags":["baseai","pipe","langbase"],"section":"Pipe","description":"A step-by-step guide to creating your first AI pipe in just one minute. Run locally, build, experiment, and deploy your AI features with BaseAI.","modifiedDate":"2024-09-24T00:00:00.000Z","publishedDate":"2024-09-24T00:00:00.000Z"}},{"slug":"create","section":"tools","content":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsxDEV: _jsxDEV} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nconst sections = [{\n  title: \"Step #0: Initialize BaseAI\",\n  id: \"step-0-initialize-base-ai\",\n  ...undefined\n}, {\n  title: \"Step #1 Create a tool\",\n  id: \"step-1-create-a-tool\",\n  ...undefined\n}, {\n  title: \"Step #2: View and configure the tool\",\n  id: \"step-2-view-and-configure-the-tool\",\n  ...undefined\n}];\nfunction _createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    hr: \"hr\",\n    p: \"p\",\n    pre: \"pre\",\n    ..._provideComponents(),\n    ...props.components\n  }, {CodeGroup} = _components;\n  if (!CodeGroup) _missingMdxReference(\"CodeGroup\", true, \"32:1-54:13\");\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(_components.h1, {\n      children: \"Create a tool\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 2,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Create a tool locally using BaseAI CLI.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 4,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 6,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"step-0-initialize-base-ai\",\n      children: \"Step #0: Initialize BaseAI\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 8,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Please initialize BaseAI in your project using the following command:\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 10,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"bash\",\n      code: \"npx baseai init\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-bash\",\n        children: \"<span><span style=\\\"color: #FAD000\\\">npx</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">baseai</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">init</span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 12,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 12,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"step-1-create-a-tool\",\n      children: \"Step #1 Create a tool\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 16,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Create a new tool using the \", _jsxDEV(_components.code, {\n        children: \"tool\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 18,\n        columnNumber: 29\n      }, this), \" command. It will ask you for name and description of the tool.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 18,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"bash\",\n      code: \"npx baseai tool\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-bash\",\n        children: \"<span><span style=\\\"color: #FAD000\\\">npx</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">baseai</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">tool</span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 20,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 20,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"The CLI will ask you to provide the name and description of the tool. Let's call it \", _jsxDEV(_components.code, {\n        children: \"getCurrentWeather\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 24,\n        columnNumber: 85\n      }, this), \" and provide a description like \", _jsxDEV(_components.code, {\n        children: \"Get the current weather for a given location\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 24,\n        columnNumber: 136\n      }, this), \".\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 24,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Your tool will be created at \", _jsxDEV(_components.code, {\n        children: \"/baseai/tools/get-current-weather.ts\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 26,\n        columnNumber: 30\n      }, this), \".\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 26,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"step-2-view-and-configure-the-tool\",\n      children: \"Step #2: View and configure the tool\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 28,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Now that we have created a current weather tool, let's open the file and see what we have in there.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 30,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(CodeGroup, {\n      exampleTitle: \"Current weather tool\",\n      title: \"getCurrentWeather tool\",\n      children: _jsxDEV(_components.pre, {\n        language: \"ts\",\n        code: \"import { ToolI } from '@baseai/core';\\n\\nexport async function getCurrentWeather() {\\n\\t// Your tool logic here\\n}\\n\\nconst getCurrentWeatherTool = (): ToolI => ({\\n\\trun: getCurrentWeather,\\n\\ttype: 'function' as const,\\n\\tfunction: {\\n\\t\\tname: 'getCurrentWeather',\\n\\t\\tdescription: 'Get the current weather for a given location',\\n\\t\\tparameters: {},\\n\\t},\\n});\\n\\nexport default getCurrentWeatherTool;\\n\",\n        children: _jsxDEV(_components.code, {\n          className: \"language-ts\",\n          children: \"<span><span style=\\\"color: #FF9D00\\\">import</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span><span style=\\\"color: #9EFFFF\\\"> ToolI </span><span style=\\\"color: #E1EFFF\\\">}</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00; font-style: italic\\\">from</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">@baseai/core</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">export</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00; font-style: italic\\\">async</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">function</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">getCurrentWeather</span><span style=\\\"color: #E1EFFF\\\">()</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">\\t</span><span style=\\\"color: #B362FF; font-style: italic\\\">// Your tool logic here</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">}</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">const</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">getCurrentWeatherTool</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FFEE80\\\">()</span><span style=\\\"color: #FF9D00\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #80FFBB\\\">ToolI</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">=&gt;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">({</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\trun</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> getCurrentWeather</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\ttype</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">function</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">as</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00; font-style: italic\\\">const</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tfunction</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tname</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">getCurrentWeather</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tdescription</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">Get the current weather for a given location</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tparameters</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{},</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">});</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">export</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">default</span><span style=\\\"color: #9EFFFF\\\"> getCurrentWeatherTool</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 34,\n          columnNumber: 1\n        }, this),\n        ...{\n          title: './baseai/tools/get-current-weather.ts'\n        }\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 34,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 32,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"The \", _jsxDEV(_components.code, {\n        children: \"run\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 56,\n        columnNumber: 5\n      }, this), \" key in the \", _jsxDEV(_components.code, {\n        children: \"getCurrentWeatherTool\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 56,\n        columnNumber: 22\n      }, this), \" object is the function that will be executed when the tool is called. You can write your logic to get the current weather for a given location in the \", _jsxDEV(_components.code, {\n        children: \"getCurrentWeather\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 56,\n        columnNumber: 196\n      }, this), \" function. Let's add a static return for now.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 56,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Here's what the updated \", _jsxDEV(_components.code, {\n        children: \"get-current-weather.ts\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 58,\n        columnNumber: 25\n      }, this), \" file will look like:\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 58,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(CodeGroup, {\n      exampleTitle: \"Current weather tool\",\n      title: \"Configure the weather tool\",\n      children: _jsxDEV(_components.pre, {\n        language: \"ts\",\n        code: \"import {ToolI} from '@baseai/core';\\n\\nexport async function getCurrentWeather(location: string, unit: string) {\\n\\treturn `Weather in ${location} is 72 degrees ${unit === 'celsius' ? 'Celsius' : 'Fahrenheit'}`;\\n}\\n\\nconst getCurrentWeatherTool = (): ToolI => ({\\n\\trun: getCurrentWeather,\\n\\ttype: 'function' as const,\\n\\tfunction: {\\n\\t\\tname: 'getCurrentWeather',\\n\\t\\tdescription: 'Get the current weather for a given location',\\n\\t\\tparameters: {\\n\\t\\t\\ttype: 'object',\\n\\t\\t\\tproperties: {\\n\\t\\t\\t\\tlocation: {\\n\\t\\t\\t\\t\\ttype: 'string',\\n\\t\\t\\t\\t\\tdescription: 'The city and state, e.g. San Francisco, CA',\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\tunit: {\\n\\t\\t\\t\\t\\ttype: 'string',\\n\\t\\t\\t\\t\\tenum: ['celsius', 'fahrenheit'],\\n\\t\\t\\t\\t},\\n\\t\\t\\t},\\n\\t\\t\\trequired: ['location'],\\n\\t\\t},\\n\\t},\\n});\\n\\nexport default getCurrentWeatherTool;\\n\",\n        children: _jsxDEV(_components.code, {\n          className: \"language-ts\",\n          children: \"<span><span style=\\\"color: #FF9D00\\\">import</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span><span style=\\\"color: #9EFFFF\\\">ToolI</span><span style=\\\"color: #E1EFFF\\\">}</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00; font-style: italic\\\">from</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">@baseai/core</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">export</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00; font-style: italic\\\">async</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">function</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">getCurrentWeather</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #9EFFFF\\\">location</span><span style=\\\"color: #FF9D00\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #80FFBB\\\">string</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> unit</span><span style=\\\"color: #FF9D00\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #80FFBB\\\">string</span><span style=\\\"color: #E1EFFF\\\">)</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #FF9D00\\\">return</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #3AD900\\\">`Weather in </span><span style=\\\"color: #FFEE80\\\">${</span><span style=\\\"color: #9EFFFF\\\">location</span><span style=\\\"color: #FFEE80\\\">}</span><span style=\\\"color: #3AD900\\\"> is 72 degrees </span><span style=\\\"color: #FFEE80\\\">${</span><span style=\\\"color: #9EFFFF\\\">unit </span><span style=\\\"color: #FF9D00\\\">===</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">celsius</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">?</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">Celsius</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">Fahrenheit</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #FFEE80\\\">}</span><span style=\\\"color: #3AD900\\\">`</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">}</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">const</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">getCurrentWeatherTool</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FFEE80\\\">()</span><span style=\\\"color: #FF9D00\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #80FFBB\\\">ToolI</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">=&gt;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">({</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\trun</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> getCurrentWeather</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\ttype</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">function</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">as</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00; font-style: italic\\\">const</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tfunction</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tname</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">getCurrentWeather</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tdescription</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">Get the current weather for a given location</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tparameters</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\ttype</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">object</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\tproperties</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\tlocation</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\t\\ttype</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">string</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\t\\tdescription</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">The city and state, e.g. San Francisco, CA</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\t</span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\tunit</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\t\\ttype</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">string</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\t\\tenum</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">celsius</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">fahrenheit</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\t</span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t</span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\trequired</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">location</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t</span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">});</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">export</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">default</span><span style=\\\"color: #9EFFFF\\\"> getCurrentWeatherTool</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 62,\n          columnNumber: 1\n        }, this),\n        ...{\n          title: './baseai/tools/get-current-weather.ts'\n        }\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 62,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 60,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"You can see that I have also added parameters to the \", _jsxDEV(_components.code, {\n        children: \"getCurrentWeather\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 97,\n        columnNumber: 54\n      }, this), \" function. The LLM will give values to these parameters when it calls the tool.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 97,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 99,\n      columnNumber: 1\n    }, this)]\n  }, undefined, true, {\n    fileName: \"<source.js>\",\n    lineNumber: 1,\n    columnNumber: 1\n  }, this);\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsxDEV(MDXLayout, {\n    ...props,\n    children: _jsxDEV(_createMdxContent, {\n      ...props\n    }, undefined, false, {\n      fileName: \"<source.js>\"\n    }, this)\n  }, undefined, false, {\n    fileName: \"<source.js>\"\n  }, this) : _createMdxContent(props);\n}\nreturn {\n  sections,\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component, place) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\" + (place ? \"\\nIt’s referenced in your code at `\" + place + \"`\" : \"\"));\n}\n","frontmatter":{},"scope":{}},"frontmatter":{"url":"https://baseai.dev/docs/tools/create","slug":"create","title":"Create - Tools","imageUrl":"https://baseai.dev/api/og?title=Create&section=Tools","tags":["baseai","tools","langbase"],"section":"Tool","description":"Create a tool locally using BaseAI CLI.","modifiedDate":"2024-09-24T00:00:00.000Z","publishedDate":"2024-09-24T00:00:00.000Z"}},{"slug":"faqs","section":"tools","content":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsxDEV: _jsxDEV} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nconst sections = [{\n  title: \"What is tool calling?\",\n  id: \"what-is-tool-calling\",\n  ...undefined\n}, {\n  title: \"How to create a tool using BaseAI?\",\n  id: \"how-to-create-a-tool-using-base-ai\",\n  ...undefined\n}, {\n  title: \"What models in BaseAI support tool calling?\",\n  id: \"what-models-in-base-ai-support-tool-calling\",\n  ...undefined\n}, {\n  title: \"How to use tool calling in BaseAI?\",\n  id: \"how-to-use-tool-calling-in-base-ai\",\n  ...undefined\n}, {\n  title: \"Can I use tool calling in my private AI agent pipe?\",\n  id: \"can-i-use-tool-calling-in-my-private-ai-agent-pipe\",\n  ...undefined\n}, {\n  title: \"Can I call other pipes from a tool?\",\n  id: \"can-i-call-other-pipes-from-a-tool\",\n  ...undefined\n}, {\n  title: \"Are my tools deployed on Langbase when I deploy a Pipe?\",\n  id: \"are-my-tools-deployed-on-langbase-when-i-deploy-a-pipe\",\n  ...undefined\n}];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    h3: \"h3\",\n    hr: \"hr\",\n    li: \"li\",\n    p: \"p\",\n    pre: \"pre\",\n    strong: \"strong\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(_components.h1, {\n      children: \"FAQ\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 2,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Let's take a look at some frequently asked questions about tools.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 4,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 6,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"what-is-tool-calling\",\n      children: \"What is tool calling?\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 8,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"LLM tool calling allows a language model (like GPT) to use external tools (functions inside your codebase) to \", _jsxDEV(_components.strong, {\n        children: \"perform\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 10,\n        columnNumber: 111\n      }, this), \" tasks it can't handle alone.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 10,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Instead of just generating text, the model can \", _jsxDEV(_components.strong, {\n        children: \"respond with a tool call\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 12,\n        columnNumber: 48\n      }, this), \" (name of the function to call with parameters) that triggers a function in your code.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 12,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"You can use tool calling to get the model to do things like fetch live information, run code for complex calculations, get some data from a database, or interact with other systems.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 14,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h3, {\n      children: \"Key benefits:\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 16,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.ul, {\n      children: [\"\\n\", _jsxDEV(_components.li, {\n        children: [_jsxDEV(_components.strong, {\n          children: \"Enhanced capabilities\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 18,\n          columnNumber: 3\n        }, this), \": Lets the model go beyond text generation, enabling it to do more practical tasks.\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 18,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: [_jsxDEV(_components.strong, {\n          children: \"Better accuracy\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 19,\n          columnNumber: 3\n        }, this), \": For tasks like precise calculations or up-to-date data, it ensures correct, reliable results.\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 19,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: [_jsxDEV(_components.strong, {\n          children: \"Wider applications\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 20,\n          columnNumber: 3\n        }, this), \": Makes the model more useful in real-world situations, allowing it to interact with other systems seamlessly.\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 20,\n        columnNumber: 1\n      }, this), \"\\n\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 18,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 22,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"how-to-create-a-tool-using-base-ai\",\n      children: \"How to create a tool using BaseAI?\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 24,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"You can create a \", _jsxDEV(_components.code, {\n        children: \"tool\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 26,\n        columnNumber: 18\n      }, this), \" command by running the following command in your terminal:\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 26,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"bash\",\n      code: \"npx baseai tool\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-bash\",\n        children: \"<span><span style=\\\"color: #FAD000\\\">npx</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">baseai</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">tool</span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 28,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 28,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"You can learn more about it \", _jsxDEV(_components.a, {\n        href: \"/docs/tool/quickstart\",\n        children: \"here\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 32,\n        columnNumber: 29\n      }, this), \".\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 32,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 34,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"what-models-in-base-ai-support-tool-calling\",\n      children: \"What models in BaseAI support tool calling?\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 36,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Currently all the OpenAI models like GPT-3, GPT-4, etc., support tool calling in BaseAI.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 38,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 40,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"how-to-use-tool-calling-in-base-ai\",\n      children: \"How to use tool calling in BaseAI?\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 42,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"We have a detailed guide on how to use tool calling in BaseAI. You can learn more \", _jsxDEV(_components.a, {\n        href: \"/docs/tools/quickstart\",\n        children: \"here\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 44,\n        columnNumber: 83\n      }, this), \".\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 44,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 46,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"can-i-use-tool-calling-in-my-private-ai-agent-pipe\",\n      children: \"Can I use tool calling in my private AI agent pipe?\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 48,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Yes, you can use tool calling in any AI agent pipe configured with OpenAI models.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 50,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 52,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"can-i-call-other-pipes-from-a-tool\",\n      children: \"Can I call other pipes from a tool?\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 54,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Yes, you can call other pipes from a tool. Since tool is a function in your code, you can call any pipe from it.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 56,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 58,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"are-my-tools-deployed-on-langbase-when-i-deploy-a-pipe\",\n      children: \"Are my tools deployed on Langbase when I deploy a Pipe?\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 60,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Yes, all your Pipe tools are deployed when you deploy a Pipe. Please note that only the tool definition is deployed, not the actual code. So you will need to ensure that the code is available in your codebase.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 62,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"You can learn more about deploying a Pipe \", _jsxDEV(_components.a, {\n        href: \"/docs/deployment/deploy\",\n        children: \"here\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 64,\n        columnNumber: 43\n      }, this), \".\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 64,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 66,\n      columnNumber: 1\n    }, this)]\n  }, undefined, true, {\n    fileName: \"<source.js>\",\n    lineNumber: 1,\n    columnNumber: 1\n  }, this);\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsxDEV(MDXLayout, {\n    ...props,\n    children: _jsxDEV(_createMdxContent, {\n      ...props\n    }, undefined, false, {\n      fileName: \"<source.js>\"\n    }, this)\n  }, undefined, false, {\n    fileName: \"<source.js>\"\n  }, this) : _createMdxContent(props);\n}\nreturn {\n  sections,\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"frontmatter":{"url":"https://baseai.dev/docs/tools/faqs","slug":"faqs","title":"FAQs - Tools","imageUrl":"https://baseai.dev/api/og?title=FAQs&section=Tools","tags":["baseai","tools","langbase"],"section":"Tool","description":"Let's take a look at some frequently asked questions about tools.","modifiedDate":"2024-09-24T00:00:00.000Z","publishedDate":"2024-09-24T00:00:00.000Z"}},{"slug":"quickstart","section":"tools","content":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsxDEV: _jsxDEV} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nconst sections = [{\n  title: \"Step #0: Initialize BaseAI\",\n  id: \"step-0-initialize-base-ai\",\n  ...undefined\n}, {\n  title: \"Step #1: Create a weather tool\",\n  id: \"step-1-create-a-weather-tool\",\n  ...undefined\n}, {\n  title: \"Step #2: View and configure the tool\",\n  id: \"step-2-view-and-configure-the-tool\",\n  ...undefined\n}, {\n  title: \"Step #3: Create an AI agent Pipe\",\n  id: \"step-3-create-an-ai-agent-pipe\",\n  ...undefined\n}, {\n  title: \"Step #4: View and configure your pipe\",\n  id: \"step-4-view-and-configure-your-pipe\",\n  ...undefined\n}, {\n  title: \"Step #5: Integrate the pipe with your app\",\n  id: \"step-5-integrate-the-pipe-with-your-app\",\n  ...undefined\n}, {\n  title: \"Step #4: Run the code\",\n  id: \"step-4-run-the-code\",\n  ...undefined\n}, {\n  title: \"Next Steps\",\n  id: \"next-steps\",\n  ...undefined\n}];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    h3: \"h3\",\n    hr: \"hr\",\n    li: \"li\",\n    p: \"p\",\n    pre: \"pre\",\n    strong: \"strong\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  }, {CodeGroup} = _components;\n  if (!CodeGroup) _missingMdxReference(\"CodeGroup\", true, \"50:1-72:13\");\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(_components.h1, {\n      children: \"Quickstart: Build a weather tool\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 2,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h3, {\n      children: \"Let's build your first tool in a minute.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 4,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 6,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"In this quickstart guide, you will locally:\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 8,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.ul, {\n      children: [\"\\n\", _jsxDEV(_components.li, {\n        children: [_jsxDEV(_components.strong, {\n          children: \"Create\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 10,\n          columnNumber: 4\n        }, this), \" a weather tool that returns the current weather for a given location.\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 10,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: [_jsxDEV(_components.strong, {\n          children: \"Create\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 11,\n          columnNumber: 4\n        }, this), \" a local AI agent pipe that uses the tool to generate weather information.\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 11,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: [_jsxDEV(_components.strong, {\n          children: \"Integrate\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 12,\n          columnNumber: 4\n        }, this), \" the tool in the agent pipe.\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 12,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: [_jsxDEV(_components.strong, {\n          children: \"Run\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 13,\n          columnNumber: 4\n        }, this), \" the AI pipe with configuration and meta settings.\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 13,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: [_jsxDEV(_components.strong, {\n          children: \"Build\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 14,\n          columnNumber: 4\n        }, this), \" your pipe with integrated tools.\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 14,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: [_jsxDEV(_components.strong, {\n          children: \"Deploy\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 15,\n          columnNumber: 4\n        }, this), \" your AI features to Langbase API (global, highly available, and scalable) for production.\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 15,\n        columnNumber: 1\n      }, this), \"\\n\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 10,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 17,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h3, {\n      children: \"Let's get started\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 19,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Let's build a tool locally using BaseAI that will return the current weather for a given location.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 21,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 23,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"step-0-initialize-base-ai\",\n      children: \"Step #0: Initialize BaseAI\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 26,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Please initialize BaseAI in your project using the following command:\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 28,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"bash\",\n      code: \"npx baseai init\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-bash\",\n        children: \"<span><span style=\\\"color: #FAD000\\\">npx</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">baseai</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">init</span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 30,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 30,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"step-1-create-a-weather-tool\",\n      children: \"Step #1: Create a weather tool\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 34,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"We need to create a tool now. To do it, inside your project, run the following command in the terminal:\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 36,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"bash\",\n      code: \"npx baseai tool\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-bash\",\n        children: \"<span><span style=\\\"color: #FAD000\\\">npx</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">baseai</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">tool</span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 38,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 38,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"The CLI will ask you to provide the name and description of the tool. Let's call it \", _jsxDEV(_components.code, {\n        children: \"getCurrentWeather\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 42,\n        columnNumber: 85\n      }, this), \" and provide a description like \", _jsxDEV(_components.code, {\n        children: \"Get the current weather for a given location\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 42,\n        columnNumber: 136\n      }, this), \".\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 42,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Your tool will be created at \", _jsxDEV(_components.code, {\n        children: \"/baseai/tools/get-current-weather.ts\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 44,\n        columnNumber: 30\n      }, this), \".\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 44,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"step-2-view-and-configure-the-tool\",\n      children: \"Step #2: View and configure the tool\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 46,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Now that we have created a current weather tool, let's open the file and see what we have in there.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 48,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(CodeGroup, {\n      exampleTitle: \"Current weather tool\",\n      title: \"getCurrentWeather tool\",\n      children: _jsxDEV(_components.pre, {\n        language: \"ts\",\n        code: \"import { ToolI } from '@baseai/core';\\n\\nexport async function getCurrentWeather() {\\n\\t// Your tool logic here\\n}\\n\\nconst getCurrentWeatherTool = (): ToolI => ({\\n\\trun: getCurrentWeather,\\n\\ttype: 'function' as const,\\n\\tfunction: {\\n\\t\\tname: 'getCurrentWeather',\\n\\t\\tdescription: 'Get the current weather for a given location',\\n\\t\\tparameters: {},\\n\\t},\\n});\\n\\nexport default getCurrentWeatherTool;\\n\",\n        children: _jsxDEV(_components.code, {\n          className: \"language-ts\",\n          children: \"<span><span style=\\\"color: #FF9D00\\\">import</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span><span style=\\\"color: #9EFFFF\\\"> ToolI </span><span style=\\\"color: #E1EFFF\\\">}</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00; font-style: italic\\\">from</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">@baseai/core</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">export</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00; font-style: italic\\\">async</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">function</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">getCurrentWeather</span><span style=\\\"color: #E1EFFF\\\">()</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">\\t</span><span style=\\\"color: #B362FF; font-style: italic\\\">// Your tool logic here</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">}</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">const</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">getCurrentWeatherTool</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FFEE80\\\">()</span><span style=\\\"color: #FF9D00\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #80FFBB\\\">ToolI</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">=&gt;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">({</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\trun</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> getCurrentWeather</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\ttype</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">function</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">as</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00; font-style: italic\\\">const</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tfunction</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tname</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">getCurrentWeather</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tdescription</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">Get the current weather for a given location</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tparameters</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{},</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">});</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">export</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">default</span><span style=\\\"color: #9EFFFF\\\"> getCurrentWeatherTool</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 52,\n          columnNumber: 1\n        }, this),\n        ...{\n          title: './baseai/tools/get-current-weather.ts'\n        }\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 52,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 50,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"The \", _jsxDEV(_components.code, {\n        children: \"run\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 74,\n        columnNumber: 5\n      }, this), \" key in the \", _jsxDEV(_components.code, {\n        children: \"getCurrentWeatherTool\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 74,\n        columnNumber: 22\n      }, this), \" object is the function that will be executed when the tool is called. You can write your logic to get the current weather for a given location in the \", _jsxDEV(_components.code, {\n        children: \"getCurrentWeather\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 74,\n        columnNumber: 196\n      }, this), \" function. Let's add a static return for now.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 74,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Here's what the updated \", _jsxDEV(_components.code, {\n        children: \"get-current-weather.ts\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 76,\n        columnNumber: 25\n      }, this), \" file will look like:\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 76,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(CodeGroup, {\n      exampleTitle: \"Current weather tool\",\n      title: \"Configure the weather tool\",\n      children: _jsxDEV(_components.pre, {\n        language: \"ts\",\n        code: \"import {ToolI} from '@baseai/core';\\n\\nexport async function getCurrentWeather(location: string, unit: string) {\\n\\treturn `Weather in ${location} is 72 degrees ${unit === 'celsius' ? 'Celsius' : 'Fahrenheit'}`;\\n}\\n\\nconst getCurrentWeatherTool = (): ToolI => ({\\n\\trun: getCurrentWeather,\\n\\ttype: 'function' as const,\\n\\tfunction: {\\n\\t\\tname: 'getCurrentWeather',\\n\\t\\tdescription: 'Get the current weather for a given location',\\n\\t\\tparameters: {\\n\\t\\t\\ttype: 'object',\\n\\t\\t\\tproperties: {\\n\\t\\t\\t\\tlocation: {\\n\\t\\t\\t\\t\\ttype: 'string',\\n\\t\\t\\t\\t\\tdescription: 'The city and state, e.g. San Francisco, CA',\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\tunit: {\\n\\t\\t\\t\\t\\ttype: 'string',\\n\\t\\t\\t\\t\\tenum: ['celsius', 'fahrenheit'],\\n\\t\\t\\t\\t},\\n\\t\\t\\t},\\n\\t\\t\\trequired: ['location'],\\n\\t\\t},\\n\\t},\\n});\\n\\nexport default getCurrentWeatherTool;\\n\",\n        children: _jsxDEV(_components.code, {\n          className: \"language-ts\",\n          children: \"<span><span style=\\\"color: #FF9D00\\\">import</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span><span style=\\\"color: #9EFFFF\\\">ToolI</span><span style=\\\"color: #E1EFFF\\\">}</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00; font-style: italic\\\">from</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">@baseai/core</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">export</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00; font-style: italic\\\">async</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">function</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">getCurrentWeather</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #9EFFFF\\\">location</span><span style=\\\"color: #FF9D00\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #80FFBB\\\">string</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> unit</span><span style=\\\"color: #FF9D00\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #80FFBB\\\">string</span><span style=\\\"color: #E1EFFF\\\">)</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #FF9D00\\\">return</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #3AD900\\\">`Weather in </span><span style=\\\"color: #FFEE80\\\">${</span><span style=\\\"color: #9EFFFF\\\">location</span><span style=\\\"color: #FFEE80\\\">}</span><span style=\\\"color: #3AD900\\\"> is 72 degrees </span><span style=\\\"color: #FFEE80\\\">${</span><span style=\\\"color: #9EFFFF\\\">unit </span><span style=\\\"color: #FF9D00\\\">===</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">celsius</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">?</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">Celsius</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">Fahrenheit</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #FFEE80\\\">}</span><span style=\\\"color: #3AD900\\\">`</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">}</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">const</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">getCurrentWeatherTool</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FFEE80\\\">()</span><span style=\\\"color: #FF9D00\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #80FFBB\\\">ToolI</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">=&gt;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">({</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\trun</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> getCurrentWeather</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\ttype</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">function</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">as</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00; font-style: italic\\\">const</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tfunction</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tname</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">getCurrentWeather</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tdescription</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">Get the current weather for a given location</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tparameters</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\ttype</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">object</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\tproperties</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\tlocation</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\t\\ttype</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">string</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\t\\tdescription</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">The city and state, e.g. San Francisco, CA</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\t</span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\tunit</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\t\\ttype</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">string</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\t\\tenum</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">celsius</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">fahrenheit</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\t</span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t</span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\trequired</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">location</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t</span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">});</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">export</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">default</span><span style=\\\"color: #9EFFFF\\\"> getCurrentWeatherTool</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 80,\n          columnNumber: 1\n        }, this),\n        ...{\n          title: './baseai/tools/get-current-weather.ts'\n        }\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 80,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 78,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"You can see that I have also added parameters to the \", _jsxDEV(_components.code, {\n        children: \"getCurrentWeather\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 115,\n        columnNumber: 54\n      }, this), \" function. The LLM will give values to these parameters when it calls the tool.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 115,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"step-3-create-an-ai-agent-pipe\",\n      children: \"Step #3: Create an AI agent Pipe\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 117,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Navigate to your project directory, and create a new pipe using the \", _jsxDEV(_components.code, {\n        children: \"baseai pipe\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 119,\n        columnNumber: 69\n      }, this), \" command. It will ask you for the name, description, and other details of the pipe step-by-step.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 119,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Since we already created a tool in preview step, \", _jsxDEV(_components.code, {\n        children: \"baseai pipe\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 121,\n        columnNumber: 50\n      }, this), \" will ask you to select the tool you want to use in the pipe. Select the \", _jsxDEV(_components.code, {\n        children: \"get-current-weather\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 121,\n        columnNumber: 136\n      }, this), \" tool in this case.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 121,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"bash\",\n      code: \"npx baseai pipe\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-bash\",\n        children: \"<span><span style=\\\"color: #FAD000\\\">npx</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">baseai</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">pipe</span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 123,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 123,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"step-4-view-and-configure-your-pipe\",\n      children: \"Step #4: View and configure your pipe\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 127,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Your pipe is created successfully at \", _jsxDEV(_components.code, {\n        children: \"/baseai/pipes/weather-agent.ts\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 129,\n        columnNumber: 38\n      }, this), \". Open the file, it will look like this:\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 129,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(CodeGroup, {\n      exampleTitle: \"BaseAI Pipe & Tool\",\n      title: \"Weather agent pipe\",\n      children: [_jsxDEV(_components.pre, {\n        language: \"ts\",\n        code: \"import {PipeI} from '@baseai/core';\\nimport getCurrentWeatherTool from '../tools/get-current-weather';\\n\\nconst pipeName = (): PipeI => ({\\n\\tapiKey: 'process.env.LANGBASE_USER_ORG_API_KEY', // Replace with your API key https://langbase.com/docs/api-reference/api-keys\\n\\tname: 'weather-agent',\\n\\tdescription: '',\\n\\tstatus: 'private',\\n\\tmodel: 'openai:gpt-4o-mini',\\n\\tstream: false,\\n\\tjson: false,\\n\\tstore: true,\\n\\tmoderate: true,\\n\\ttop_p: 1,\\n\\tmax_tokens: 1000,\\n\\ttemperature: 0.7,\\n\\tpresence_penalty: 1,\\n\\tfrequency_penalty: 1,\\n\\tstop: [],\\n\\ttool_choice: 'auto',\\n\\tparallel_tool_calls: false,\\n\\tmessages: [\\n\\t\\t{role: 'system', content: `You are a helpful AI assistant.`},\\n\\t\\t{\\n\\t\\t\\trole: 'system',\\n\\t\\t\\tname: 'rag',\\n\\t\\t\\tcontent:\\n\\t\\t\\t\\t\\\"Below is some CONTEXT for you to answer the questions. ONLY answer from the CONTEXT. CONTEXT consists of multiple information chunks. Each chunk has a source mentioned at the end.\\\\n\\\\nFor each piece of response you provide, cite the source in brackets like so: [1].\\\\n\\\\nAt the end of the answer, always list each source with its corresponding number and provide the document name. like so [1] Filename.doc.\\\\n\\\\nIf you don't know the answer, just say that you don't know. Ask for more context and better questions if needed.\\\",\\n\\t\\t},\\n\\t],\\n\\tvariables: [],\\n\\tmemory: [],\\n\\ttools: [getCurrentWeatherTool()],\\n});\\n\\nexport default pipeName;\\n\",\n        children: _jsxDEV(_components.code, {\n          className: \"language-ts\",\n          children: \"<span><span style=\\\"color: #FF9D00\\\">import</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span><span style=\\\"color: #9EFFFF\\\">PipeI</span><span style=\\\"color: #E1EFFF\\\">}</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00; font-style: italic\\\">from</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">@baseai/core</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span><span style=\\\"color: #FF9D00\\\">import</span><span style=\\\"color: #9EFFFF\\\"> getCurrentWeatherTool </span><span style=\\\"color: #FF9D00; font-style: italic\\\">from</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">../tools/get-current-weather</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">const</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">pipeName</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FFEE80\\\">()</span><span style=\\\"color: #FF9D00\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #80FFBB\\\">PipeI</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">=&gt;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">({</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tapiKey</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">process.env.LANGBASE_USER_ORG_API_KEY</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #B362FF; font-style: italic\\\">// Replace with your API key https://langbase.com/docs/api-reference/api-keys</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tname</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">weather-agent</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tdescription</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tstatus</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">private</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tmodel</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">openai:gpt-4o-mini</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tstream</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">false</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tjson</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">false</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tstore</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">true</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tmoderate</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">true</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\ttop_p</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">1</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tmax_tokens</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">1000</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\ttemperature</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">0</span><span style=\\\"color: #9EFFFF\\\">.</span><span style=\\\"color: #FF628C\\\">7</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tpresence_penalty</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">1</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tfrequency_penalty</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">1</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tstop</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\ttool_choice</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">auto</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tparallel_tool_calls</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">false</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tmessages</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t</span><span style=\\\"color: #E1EFFF\\\">{</span><span style=\\\"color: #9EFFFF\\\">role</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">system</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> content</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #3AD900\\\">`You are a helpful AI assistant.`</span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t</span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\trole</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">system</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\tname</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">rag</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\tcontent</span><span style=\\\"color: #E1EFFF\\\">:</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\t</span><span style=\\\"color: #92FC79\\\">&quot;</span><span style=\\\"color: #A5FF90\\\">Below is some CONTEXT for you to answer the questions. ONLY answer from the CONTEXT. CONTEXT consists of multiple information chunks. Each chunk has a source mentioned at the end.</span><span style=\\\"color: #FF628C\\\">\\\\n\\\\n</span><span style=\\\"color: #A5FF90\\\">For each piece of response you provide, cite the source in brackets like so: [1].</span><span style=\\\"color: #FF628C\\\">\\\\n\\\\n</span><span style=\\\"color: #A5FF90\\\">At the end of the answer, always list each source with its corresponding number and provide the document name. like so [1] Filename.doc.</span><span style=\\\"color: #FF628C\\\">\\\\n\\\\n</span><span style=\\\"color: #A5FF90\\\">If you don&#39;t know the answer, just say that you don&#39;t know. Ask for more context and better questions if needed.</span><span style=\\\"color: #92FC79\\\">&quot;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t</span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #E1EFFF\\\">],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tvariables</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tmemory</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\ttools</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[</span><span style=\\\"color: #FAD000\\\">getCurrentWeatherTool</span><span style=\\\"color: #E1EFFF\\\">()],</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">});</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">export</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">default</span><span style=\\\"color: #9EFFFF\\\"> pipeName</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 133,\n          columnNumber: 1\n        }, this),\n        ...{\n          title: './baseai/pipes/weather-agent.ts'\n        }\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 133,\n        columnNumber: 1\n      }, this), _jsxDEV(_components.pre, {\n        language: \"ts\",\n        code: \"import {ToolI} from '@baseai/core';\\n\\nexport async function getCurrentWeather(location: string, unit: string) {\\n\\treturn `Weather in ${location} is 72 degrees ${unit === 'celsius' ? 'Celsius' : 'Fahrenheit'}`;\\n}\\n\\nconst getCurrentWeatherTool = (): ToolI => ({\\n\\trun: getCurrentWeather,\\n\\ttype: 'function' as const,\\n\\tfunction: {\\n\\t\\tname: 'getCurrentWeather',\\n\\t\\tdescription: 'Get the current weather for a given location',\\n\\t\\tparameters: {\\n\\t\\t\\ttype: 'object',\\n\\t\\t\\tproperties: {\\n\\t\\t\\t\\tlocation: {\\n\\t\\t\\t\\t\\ttype: 'string',\\n\\t\\t\\t\\t\\tdescription: 'The city and state, e.g. San Francisco, CA',\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\tunit: {\\n\\t\\t\\t\\t\\ttype: 'string',\\n\\t\\t\\t\\t\\tenum: ['celsius', 'fahrenheit'],\\n\\t\\t\\t\\t},\\n\\t\\t\\t},\\n\\t\\t\\trequired: ['location'],\\n\\t\\t},\\n\\t},\\n});\\n\\nexport default getCurrentWeatherTool;\\n\",\n        children: _jsxDEV(_components.code, {\n          className: \"language-ts\",\n          children: \"<span><span style=\\\"color: #FF9D00\\\">import</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span><span style=\\\"color: #9EFFFF\\\">ToolI</span><span style=\\\"color: #E1EFFF\\\">}</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00; font-style: italic\\\">from</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">@baseai/core</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">export</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00; font-style: italic\\\">async</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">function</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">getCurrentWeather</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #9EFFFF\\\">location</span><span style=\\\"color: #FF9D00\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #80FFBB\\\">string</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> unit</span><span style=\\\"color: #FF9D00\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #80FFBB\\\">string</span><span style=\\\"color: #E1EFFF\\\">)</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #FF9D00\\\">return</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #3AD900\\\">`Weather in </span><span style=\\\"color: #FFEE80\\\">${</span><span style=\\\"color: #9EFFFF\\\">location</span><span style=\\\"color: #FFEE80\\\">}</span><span style=\\\"color: #3AD900\\\"> is 72 degrees </span><span style=\\\"color: #FFEE80\\\">${</span><span style=\\\"color: #9EFFFF\\\">unit </span><span style=\\\"color: #FF9D00\\\">===</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">celsius</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">?</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">Celsius</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">Fahrenheit</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #FFEE80\\\">}</span><span style=\\\"color: #3AD900\\\">`</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">}</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">const</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">getCurrentWeatherTool</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FFEE80\\\">()</span><span style=\\\"color: #FF9D00\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #80FFBB\\\">ToolI</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">=&gt;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">({</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\trun</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> getCurrentWeather</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\ttype</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">function</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">as</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00; font-style: italic\\\">const</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tfunction</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tname</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">getCurrentWeather</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tdescription</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">Get the current weather for a given location</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tparameters</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\ttype</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">object</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\tproperties</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\tlocation</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\t\\ttype</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">string</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\t\\tdescription</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">The city and state, e.g. San Francisco, CA</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\t</span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\tunit</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\t\\ttype</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">string</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\t\\tenum</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">celsius</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">fahrenheit</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\t</span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t</span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\trequired</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">location</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t</span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">});</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">export</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">default</span><span style=\\\"color: #9EFFFF\\\"> getCurrentWeatherTool</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 172,\n          columnNumber: 1\n        }, this),\n        ...{\n          title: './baseai/tools/get-current-weather.ts'\n        }\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 172,\n        columnNumber: 1\n      }, this)]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 131,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"As you can see in the \", _jsxDEV(_components.code, {\n        children: \"pipeName\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 206,\n        columnNumber: 23\n      }, this), \" function, we have added the \", _jsxDEV(_components.code, {\n        children: \"getCurrentWeatherTool\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 206,\n        columnNumber: 63\n      }, this), \" to the \", _jsxDEV(_components.code, {\n        children: \"tools\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 206,\n        columnNumber: 94\n      }, this), \" array. This will allow the pipe to use the tool to get the current weather for a given location. I have also turn off the stream.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 206,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"step-5-integrate-the-pipe-with-your-app\",\n      children: \"Step #5: Integrate the pipe with your app\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 208,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Create a \", _jsxDEV(_components.code, {\n        children: \"index.ts\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 210,\n        columnNumber: 10\n      }, this), \" file in your project and import the pipe you created in the previous step. We will use the Pipe primitive from \", _jsxDEV(_components.code, {\n        children: \"@baseai/core\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 210,\n        columnNumber: 132\n      }, this), \" to run the pipe.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 210,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"bash\",\n      code: \"# Create a new file index.ts\\ntouch index.ts\\n\\n# Install the required packages\\nnpm install @baseai/core dotenv\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-bash\",\n        children: \"<span><span style=\\\"color: #B362FF; font-style: italic\\\"># Create a new file index.ts</span></span>\\n<span><span style=\\\"color: #FAD000\\\">touch</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">index.ts</span></span>\\n<span></span>\\n<span><span style=\\\"color: #B362FF; font-style: italic\\\"># Install the required packages</span></span>\\n<span><span style=\\\"color: #FAD000\\\">npm</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">install</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">@baseai/core</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">dotenv</span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 212,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 212,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Add the following code to \", _jsxDEV(_components.code, {\n        children: \"index.ts\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 220,\n        columnNumber: 27\n      }, this), \" file:\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 220,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(CodeGroup, {\n      exampleTitle: \"BaseAI Pipe & Tool\",\n      title: \"Run AI agent Pipe with tools\",\n      children: [_jsxDEV(_components.pre, {\n        language: \"ts\",\n        code: \"import 'dotenv/config';\\nimport {Pipe, generateText} from '@baseai/core';\\nimport pipeSummarizer from './baseai/pipes/summarizer';\\n\\nconst pipe = new Pipe(pipeSummarizer());\\n\\nconst userMsg = `What's the weather in San Francisco?`;\\n\\nasync function main() {\\n\\tconst response = await generateText({\\n\\t\\tpipe,\\n\\t\\tmessages: [{role: 'user', content: userMsg}],\\n\\t});\\n\\n\\tconsole.log(response.completion);\\n}\\n\\nmain();\\n\",\n        children: _jsxDEV(_components.code, {\n          className: \"language-ts\",\n          children: \"<span><span style=\\\"color: #FF9D00\\\">import</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">dotenv/config</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span><span style=\\\"color: #FF9D00\\\">import</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span><span style=\\\"color: #9EFFFF\\\">Pipe</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> generateText</span><span style=\\\"color: #E1EFFF\\\">}</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00; font-style: italic\\\">from</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">@baseai/core</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span><span style=\\\"color: #FF9D00\\\">import</span><span style=\\\"color: #9EFFFF\\\"> pipeSummarizer </span><span style=\\\"color: #FF9D00; font-style: italic\\\">from</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">./baseai/pipes/summarizer</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">const</span><span style=\\\"color: #9EFFFF\\\"> pipe </span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">new</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">Pipe</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #FAD000\\\">pipeSummarizer</span><span style=\\\"color: #E1EFFF\\\">());</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">const</span><span style=\\\"color: #9EFFFF\\\"> userMsg </span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #3AD900\\\">`What&#39;s the weather in San Francisco?`</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00; font-style: italic\\\">async</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">function</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">main</span><span style=\\\"color: #E1EFFF\\\">()</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #FF9D00\\\">const</span><span style=\\\"color: #9EFFFF\\\"> response </span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">await</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">generateText</span><span style=\\\"color: #E1EFFF\\\">({</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tpipe</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tmessages</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[{</span><span style=\\\"color: #9EFFFF\\\">role</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">user</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> content</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> userMsg</span><span style=\\\"color: #E1EFFF\\\">}],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #E1EFFF\\\">});</span></span>\\n<span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tconsole</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FAD000\\\">log</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #9EFFFF\\\">response</span><span style=\\\"color: #E1EFFF\\\">.</span><span style=\\\"color: #FAD000\\\">completion</span><span style=\\\"color: #E1EFFF\\\">);</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">}</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FAD000\\\">main</span><span style=\\\"color: #E1EFFF\\\">();</span></span>\\n<span></span>\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 224,\n          columnNumber: 1\n        }, this),\n        ...{\n          title: 'index.ts'\n        }\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 224,\n        columnNumber: 1\n      }, this), _jsxDEV(_components.pre, {\n        language: \"ts\",\n        code: \"import {PipeI} from '@baseai/core';\\nimport getCurrentWeatherTool from '../tools/get-current-weather';\\n\\nconst pipeName = (): PipeI => ({\\n\\tapiKey: 'process.env.LANGBASE_USER_ORG_API_KEY', // Replace with your API key https://langbase.com/docs/api-reference/api-keys\\n\\tname: 'weather-agent',\\n\\tdescription: '',\\n\\tstatus: 'private',\\n\\tmodel: 'openai:gpt-4o-mini',\\n\\tstream: false,\\n\\tjson: false,\\n\\tstore: true,\\n\\tmoderate: true,\\n\\ttop_p: 1,\\n\\tmax_tokens: 1000,\\n\\ttemperature: 0.7,\\n\\tpresence_penalty: 1,\\n\\tfrequency_penalty: 1,\\n\\tstop: [],\\n\\ttool_choice: 'auto',\\n\\tparallel_tool_calls: false,\\n\\tmessages: [\\n\\t\\t{role: 'system', content: `You are a helpful AI assistant.`},\\n\\t\\t{\\n\\t\\t\\trole: 'system',\\n\\t\\t\\tname: 'rag',\\n\\t\\t\\tcontent:\\n\\t\\t\\t\\t\\\"Below is some CONTEXT for you to answer the questions. ONLY answer from the CONTEXT. CONTEXT consists of multiple information chunks. Each chunk has a source mentioned at the end.\\\\n\\\\nFor each piece of response you provide, cite the source in brackets like so: [1].\\\\n\\\\nAt the end of the answer, always list each source with its corresponding number and provide the document name. like so [1] Filename.doc.\\\\n\\\\nIf you don't know the answer, just say that you don't know. Ask for more context and better questions if needed.\\\",\\n\\t\\t},\\n\\t],\\n\\tvariables: [],\\n\\tmemory: [],\\n\\ttools: [getCurrentWeatherTool()],\\n});\\n\\nexport default pipeName;\\n\",\n        children: _jsxDEV(_components.code, {\n          className: \"language-ts\",\n          children: \"<span><span style=\\\"color: #FF9D00\\\">import</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span><span style=\\\"color: #9EFFFF\\\">PipeI</span><span style=\\\"color: #E1EFFF\\\">}</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00; font-style: italic\\\">from</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">@baseai/core</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span><span style=\\\"color: #FF9D00\\\">import</span><span style=\\\"color: #9EFFFF\\\"> getCurrentWeatherTool </span><span style=\\\"color: #FF9D00; font-style: italic\\\">from</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">../tools/get-current-weather</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">const</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">pipeName</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FFEE80\\\">()</span><span style=\\\"color: #FF9D00\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #80FFBB\\\">PipeI</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">=&gt;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">({</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tapiKey</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">process.env.LANGBASE_USER_ORG_API_KEY</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #B362FF; font-style: italic\\\">// Replace with your API key https://langbase.com/docs/api-reference/api-keys</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tname</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">weather-agent</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tdescription</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tstatus</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">private</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tmodel</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">openai:gpt-4o-mini</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tstream</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">false</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tjson</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">false</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tstore</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">true</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tmoderate</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">true</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\ttop_p</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">1</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tmax_tokens</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">1000</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\ttemperature</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">0</span><span style=\\\"color: #9EFFFF\\\">.</span><span style=\\\"color: #FF628C\\\">7</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tpresence_penalty</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">1</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tfrequency_penalty</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">1</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tstop</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\ttool_choice</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">auto</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tparallel_tool_calls</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF628C\\\">false</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tmessages</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t</span><span style=\\\"color: #E1EFFF\\\">{</span><span style=\\\"color: #9EFFFF\\\">role</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">system</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> content</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #3AD900\\\">`You are a helpful AI assistant.`</span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t</span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\trole</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">system</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\tname</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">rag</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\tcontent</span><span style=\\\"color: #E1EFFF\\\">:</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\t</span><span style=\\\"color: #92FC79\\\">&quot;</span><span style=\\\"color: #A5FF90\\\">Below is some CONTEXT for you to answer the questions. ONLY answer from the CONTEXT. CONTEXT consists of multiple information chunks. Each chunk has a source mentioned at the end.</span><span style=\\\"color: #FF628C\\\">\\\\n\\\\n</span><span style=\\\"color: #A5FF90\\\">For each piece of response you provide, cite the source in brackets like so: [1].</span><span style=\\\"color: #FF628C\\\">\\\\n\\\\n</span><span style=\\\"color: #A5FF90\\\">At the end of the answer, always list each source with its corresponding number and provide the document name. like so [1] Filename.doc.</span><span style=\\\"color: #FF628C\\\">\\\\n\\\\n</span><span style=\\\"color: #A5FF90\\\">If you don&#39;t know the answer, just say that you don&#39;t know. Ask for more context and better questions if needed.</span><span style=\\\"color: #92FC79\\\">&quot;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t</span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #E1EFFF\\\">],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tvariables</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tmemory</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\ttools</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[</span><span style=\\\"color: #FAD000\\\">getCurrentWeatherTool</span><span style=\\\"color: #E1EFFF\\\">()],</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">});</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">export</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">default</span><span style=\\\"color: #9EFFFF\\\"> pipeName</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 245,\n          columnNumber: 1\n        }, this),\n        ...{\n          title: './baseai/pipes/weather-agent.ts'\n        }\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 245,\n        columnNumber: 1\n      }, this), _jsxDEV(_components.pre, {\n        language: \"ts\",\n        code: \"import {ToolI} from '@baseai/core';\\n\\nexport async function getCurrentWeather(location: string, unit: string) {\\n\\treturn `Weather in ${location} is 72 degrees ${unit === 'celsius' ? 'Celsius' : 'Fahrenheit'}`;\\n}\\n\\nconst getCurrentWeatherTool = (): ToolI => ({\\n\\trun: getCurrentWeather,\\n\\ttype: 'function' as const,\\n\\tfunction: {\\n\\t\\tname: 'getCurrentWeather',\\n\\t\\tdescription: 'Get the current weather for a given location',\\n\\t\\tparameters: {\\n\\t\\t\\ttype: 'object',\\n\\t\\t\\tproperties: {\\n\\t\\t\\t\\tlocation: {\\n\\t\\t\\t\\t\\ttype: 'string',\\n\\t\\t\\t\\t\\tdescription: 'The city and state, e.g. San Francisco, CA',\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\tunit: {\\n\\t\\t\\t\\t\\ttype: 'string',\\n\\t\\t\\t\\t\\tenum: ['celsius', 'fahrenheit'],\\n\\t\\t\\t\\t},\\n\\t\\t\\t},\\n\\t\\t\\trequired: ['location'],\\n\\t\\t},\\n\\t},\\n});\\n\\nexport default getCurrentWeatherTool;\\n\",\n        children: _jsxDEV(_components.code, {\n          className: \"language-ts\",\n          children: \"<span><span style=\\\"color: #FF9D00\\\">import</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span><span style=\\\"color: #9EFFFF\\\">ToolI</span><span style=\\\"color: #E1EFFF\\\">}</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00; font-style: italic\\\">from</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">@baseai/core</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">export</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00; font-style: italic\\\">async</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">function</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">getCurrentWeather</span><span style=\\\"color: #E1EFFF\\\">(</span><span style=\\\"color: #9EFFFF\\\">location</span><span style=\\\"color: #FF9D00\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #80FFBB\\\">string</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> unit</span><span style=\\\"color: #FF9D00\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #80FFBB\\\">string</span><span style=\\\"color: #E1EFFF\\\">)</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #FF9D00\\\">return</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #3AD900\\\">`Weather in </span><span style=\\\"color: #FFEE80\\\">${</span><span style=\\\"color: #9EFFFF\\\">location</span><span style=\\\"color: #FFEE80\\\">}</span><span style=\\\"color: #3AD900\\\"> is 72 degrees </span><span style=\\\"color: #FFEE80\\\">${</span><span style=\\\"color: #9EFFFF\\\">unit </span><span style=\\\"color: #FF9D00\\\">===</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">celsius</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">?</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">Celsius</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">Fahrenheit</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #FFEE80\\\">}</span><span style=\\\"color: #3AD900\\\">`</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">}</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">const</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">getCurrentWeatherTool</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">=</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FFEE80\\\">()</span><span style=\\\"color: #FF9D00\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #80FFBB\\\">ToolI</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FAD000\\\">=&gt;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">({</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\trun</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> getCurrentWeather</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\ttype</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">function</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">as</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00; font-style: italic\\\">const</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\tfunction</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tname</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">getCurrentWeather</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tdescription</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">Get the current weather for a given location</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\tparameters</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\ttype</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">object</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\tproperties</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\tlocation</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\t\\ttype</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">string</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\t\\tdescription</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">The city and state, e.g. San Francisco, CA</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\t</span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\tunit</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">{</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\t\\ttype</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">string</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\t\\tenum</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">celsius</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">,</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">fahrenheit</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t\\t</span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\t</span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t\\trequired</span><span style=\\\"color: #E1EFFF\\\">:</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #E1EFFF\\\">[</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #A5FF90\\\">location</span><span style=\\\"color: #92FC79\\\">&#39;</span><span style=\\\"color: #E1EFFF\\\">],</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t\\t</span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #9EFFFF\\\">\\t</span><span style=\\\"color: #E1EFFF\\\">},</span></span>\\n<span><span style=\\\"color: #E1EFFF\\\">});</span></span>\\n<span></span>\\n<span><span style=\\\"color: #FF9D00\\\">export</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #FF9D00\\\">default</span><span style=\\\"color: #9EFFFF\\\"> getCurrentWeatherTool</span><span style=\\\"color: #E1EFFF\\\">;</span></span>\\n<span></span>\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 284,\n          columnNumber: 1\n        }, this),\n        ...{\n          title: './baseai/tools/get-current-weather.ts'\n        }\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 284,\n        columnNumber: 1\n      }, this)]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 222,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"We have added a demo user message and asked for the weather in San Francisco. You can change this user message as per your requirements.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 318,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"txt\",\n      code: \"What's the weather in San Francisco?\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-txt\",\n        children: \"<span><span style=\\\"color: undefined\\\">What&#39;s the weather in San Francisco?</span></span>\\n<span><span style=\\\"color: undefined\\\"></span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 320,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 320,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Since we are using an OpenAI model, your OpenAI key is required. Please create an \", _jsxDEV(_components.code, {\n        children: \".env\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 324,\n        columnNumber: 83\n      }, this), \" file in the root directory using the following command:\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 324,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"bash\",\n      code: \"touch .env\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-bash\",\n        children: \"<span><span style=\\\"color: #FAD000\\\">touch</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">.env</span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 326,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 326,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Once you have created the \", _jsxDEV(_components.code, {\n        children: \".env\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 330,\n        columnNumber: 27\n      }, this), \" file, add your OpenAI key to it.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 330,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"txt\",\n      code: \"OPENAI_API_KEY=\\\"your-open-ai-key\\\" # Add your OpenAI API key in .env file\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-txt\",\n        children: \"<span><span style=\\\"color: undefined\\\">OPENAI_API_KEY=&quot;your-open-ai-key&quot; # Add your OpenAI API key in .env file</span></span>\\n<span><span style=\\\"color: undefined\\\"></span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 332,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 332,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"step-4-run-the-code\",\n      children: \"Step #4: Run the code\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 336,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Run the \", _jsxDEV(_components.code, {\n        children: \"index.ts\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 338,\n        columnNumber: 9\n      }, this), \" file using the following command:\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 338,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"bash\",\n      code: \"npx tsx index.ts\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-bash\",\n        children: \"<span><span style=\\\"color: #FAD000\\\">npx</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">tsx</span><span style=\\\"color: #9EFFFF\\\"> </span><span style=\\\"color: #A5FF90\\\">index.ts</span></span>\\n<span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 340,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 340,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"It will prompt the LLM model to get answers to your weather query.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 344,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      language: \"txt\",\n      code: \"The current weather in San Francisco is 72 degrees Fahrenheit.\\n\",\n      children: _jsxDEV(_components.code, {\n        className: \"language-txt\",\n        children: \"<span><span style=\\\"color: undefined\\\">The current weather in San Francisco is 72 degrees Fahrenheit.</span></span>\\n<span><span style=\\\"color: undefined\\\"></span></span>\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 346,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 346,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Earlier in step no. 2, we added 72 degrees Fahrenheit as a static return. You can see this value was sent to the LLM and it used it to generate the response.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 350,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"This all happens locally on your machine and the response should be streamed in your terminal.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 352,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 354,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      id: \"next-steps\",\n      children: \"Next Steps\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 356,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Now that you have successfully created a tool and used it in a Pipe, you can deploy this pipe seamlessly on Langbase using the \", _jsxDEV(_components.a, {\n        href: \"/docs/deployment/deploy\",\n        children: \"deploy\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 358,\n        columnNumber: 128\n      }, this), \" command.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 358,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.hr, {}, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 360,\n      columnNumber: 1\n    }, this)]\n  }, undefined, true, {\n    fileName: \"<source.js>\",\n    lineNumber: 1,\n    columnNumber: 1\n  }, this);\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsxDEV(MDXLayout, {\n    ...props,\n    children: _jsxDEV(_createMdxContent, {\n      ...props\n    }, undefined, false, {\n      fileName: \"<source.js>\"\n    }, this)\n  }, undefined, false, {\n    fileName: \"<source.js>\"\n  }, this) : _createMdxContent(props);\n}\nreturn {\n  sections,\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component, place) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\" + (place ? \"\\nIt’s referenced in your code at `\" + place + \"`\" : \"\"));\n}\n","frontmatter":{},"scope":{}},"frontmatter":{"url":"https://baseai.dev/docs/tools/quickstart","slug":"quickstart","title":"Quickstart - Tools","imageUrl":"https://baseai.dev/api/og?title=Quickstart&section=Tools","tags":["baseai","tools","langbase"],"section":"Tool","description":"A step-by-step guide to creating your first tools in just one minute. Run locally, build, experiment, and deploy your AI features with BaseAI.","modifiedDate":"2024-09-24T00:00:00.000Z","publishedDate":"2024-09-24T00:00:00.000Z"}}]
