name: Release

on:
    push:
        branches:
            - main
        paths:
            - '.changeset/**'
            - '.github/workflows/release.yml'
    workflow_dispatch:

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
    release:
        name: Release
        runs-on: ubuntu-latest
        timeout-minutes: 10
        steps:
            - name: Checkout Repo
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0

            - name: Setup pnpm 8
              uses: pnpm/action-setup@v2
              with:
                  version: 8.6.9

            - name: Setup Node.js 18.x
              uses: actions/setup-node@v2
              with:
                  node-version: 18.x

            - name: Install Dependencies
              run: pnpm i

            - name: Create Release Pull Request or Publish to npm
              id: changesets
              uses: changesets/action@v1
              with:
                  # This expects you to have a script called release which does a build for your packages and calls changeset publish
                  version: pnpm ci:version
                  publish: pnpm ci:release
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  NPM_TOKEN: ${{ secrets.NPM_TOKEN_ELEVATED }}

            # - name: Get package version
            #   id: package-version
            #   run: echo "version=$(node -p "require('./packages/core/package.json').version")" >> "$GITHUB_OUTPUT"

            # - name: Create Git tag
            #   run: git tag v${{ steps.package-version.outputs.version }}

            # - name: Push Git tag
            #   run: git push origin v${{ steps.package-version.outputs.version }}

            # - name: Create GitHub Release
            #   uses: actions/create-release@v1
            #   env:
            #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            #   with:
            #     tag_name: v${{ steps.package-version.outputs.version }}
            #     release_name: Release v${{ steps.package-version.outputs.version }}
            #     draft: false
            #     prerelease: false
